version: '3.7'

services:
  api-arv-controll-1:
    container_name: api-arv-controll-1
    restart: always
    image: 741258321/arv-controll:${TAG_VERSION}
    expose:
      - '5000'
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health-check"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 10s
  api-arv-controll-2:
    container_name: api-arv-controll-2
    restart: always
    image: 741258321/arv-controll:${TAG_VERSION}
    expose:
      - '5000'
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health-check"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 10s
  nginx:
    container_name: nginx-server
    restart: always
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
        - api-arv-controll-1
        - api-arv-controll-2
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - /root/letsencrypt:/etc/letsencrypt
      - ./build:/usr/share/nginx/html
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 1m30s
      timeout: 10s
      retries: 5
      start_period: 10s
  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
  # mongo:
  #   image: mongo
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - "27017:27017"