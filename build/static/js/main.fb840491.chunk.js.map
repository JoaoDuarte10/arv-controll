{"version":3,"sources":["services/authService.ts","reducers/authenticatedSlice.ts","api/ApiSlice.ts","reducers/scheduleSlice.ts","reducers/salesSlice.ts","app/store.ts","utils/random.ts","components/alerts/AlertSuccess.tsx","components/alerts/AlertInfo.tsx","components/alerts/AlertError.tsx","components/Breadcumb.tsx","services/whatsapp-service.ts","components/CardClient.tsx","components/LoaderCircular.tsx","components/ComboBox.tsx","components/TitlePage.tsx","components/TopModal.tsx","utils/constants.ts","components/buttons/SearchFilter.tsx","components/buttons/ClearSearchFilter.tsx","components/buttons/SearchButton.tsx","pages/Clients.tsx","services/clientHistoryService.ts","components/Buttons.tsx","components/input/InputText.tsx","components/input/InputDate.tsx","components/labels/LabelForm.tsx","components/SelectPeriod.tsx","components/TableHistory.tsx","pages/ClientHistory.tsx","pages/CreateHistory.tsx","components/ScheduleForm.tsx","pages/CreateSchedule.tsx","components/FormClients.tsx","pages/CreateClient.tsx","components/ComeBack.tsx","pages/EditClient.tsx","services/scheduleService.ts","pages/EditScheduleForm.tsx","pages/Home.tsx","img/raise-value.png","pages/Login.tsx","services/maskMoney.ts","services/salesService.ts","pages/NewSale.tsx","services/clientService.ts","components/CardSales.tsx","components/TableSales.tsx","pages/Reports.tsx","pages/Sales.tsx","pages/CreateSalesBySchedule.tsx","components/ScheduleCard.tsx","pages/Schedule.tsx","components/CardSegment.tsx","components/buttons/ButtonFilterAction.tsx","pages/Segments.tsx","components/NavBarResponsive.tsx","RoutesApp.tsx","App.tsx","index.tsx"],"names":["LOCAL_STORAGE_LOGIN","authService","params","localStorage","setItem","JSON","stringify","removeItem","user","password","URL","process","axios","post","then","res","data","status","catch","err","response","token","jwt","verify","error","decode","loginInLocalStorage","getItem","parse","initialState","userName","refreshToken","redirectLoginPageUri","authenticatedSlice","createSlice","name","reducers","loginAdded","reducer","state","action","userInfos","payload","prepare","validateToken","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","authenticated","set","tagTypes","endpoints","builder","getClients","query","providesTags","addNewClient","mutation","initialClient","url","method","body","invalidatesTags","updateClient","client","deleteClient","id","getSegments","addNewSegment","segment","updateSegment","deleteSegment","getSchedulesByDate","date","getSchedulesByClient","addNewSchedule","useGetClientsQuery","useAddNewClientMutation","useUpdateClientMutation","useDeleteClientMutation","useGetSegmentsQuery","useAddNewSegmentMutation","useUpdateSegmentMutation","useDeleteSegmentMutation","useAddNewScheduleMutation","useGetSchedulesByDateQuery","useGetSchedulesByClientQuery","scheduleSlice","procedure","time","price","phone","pacote","qtdTotalAtendimento","qtdAtendimento","onEditClient","salesSlice","onCreateSales","store","configureStore","authenticatedReducer","scheduleReducer","salesReducer","middleware","getDefaultMiddleware","concat","randomId","uuid","AlertSuccess","props","title","Alert","severity","color","className","AlertInfo","AlertError","Breadcumb","page","to","map","item","link","WhatsAppService","event","contact","preventDefault","isPacote","dateUrl","Date","toLocaleDateString","timeZone","text","redirect","window","encodeURIComponent","open","replace","CardClients","clients","setId","Fragment","xmlns","width","height","fill","viewBox","fillRule","d","email","type","onClick","e","style","display","alignItems","justifyContent","CircularIndeterminate","position","top","left","right","bottom","backgroundColor","zIndex","ComboBox","options","selectValue","value","Autocomplete","disablePortal","freeSolo","renderInput","TextField","label","onInputChange","onChange","TitlePage","TopModal","button","click","data_target","tabIndex","role","HTTP_RESPONSE","SUCCESS","BAD_REQUEST","NOT_FOUND","UNAUTHORIZED","CONFLICT","ERROR","TIMEOUT","SearchFilterButton","borderRadius","ClearSearchFilterButton","border","SearchButton","Clients","loader","navigate","useNavigate","auth","useSelector","isLoading","isSuccess","errorFetchClients","segments","isLoadingDelete","useState","loaderClients","setLoaderClients","clientView","setClientView","deletedClientSuccess","setDeletedClientSuccess","filterClientById","setFilterClientById","filterClientBySegment","setFilterClientBySegment","dispatch","useDispatch","useEffect","length","onDeleteClient","unwrap","console","log","clearFilters","inputFilterName","document","querySelector","inputFilterSegment","setTimeout","snniperClient","overflow","whiteSpace","filterBySegmentElement","getElementById","filterByNameElement","filterClientsElement","filerClientElement","clientsById","filter","filterClientSelectedById","clientsBySegment","filterClientSelectedBySegment","API_RV_BASE_URI","clientHistoryService","description","URI","authorization","get","date1","date2","ClearFields","callback","InputText","variant","sx","fontFamily","InputDate","idComponent","idInput","LabelForm","clearDate1","date1Element","SelectPeriod","getSalesInPeriodResponse","setDate1","setDate2","filterByClient","setDataClient","clearFields","filterByDateElement","filterByPeriod","filterByDateInPeriod","filterByDateInPeriod2","inputClientElement","clearAllFilters","target","flexDirection","TableHistory","clientHistory","ClientHistory","isLoadingGetClients","serverError","setServerError","historyNotFound","setHistoryNotFound","setClientHistory","clientSelected","setClientSelected","clearSchedule","setClearSchedule","invalidParams","setInvalidParams","loaderHistory","setLoaderHistory","getHistoryInPeriodResponse","request","clearDates","date2Element","buttonSelector","CreateHistory","setClient","setDescription","setDate","historyResgisterSuccess","setHistoryRegisterSuccess","historyRegisterFail","setHistoryRegisterFail","alert","setAlert","saveSale","trim","includes","content","onSubmit","ScheduleForm","clientSaves","setProcedure","dateNewSchedule","setDateNewSchedule","setTime","setContact","clearStates","edit","addNewClientSchedule","errorClientSchedule","setPacoteFunc","setQtdTotalAtendimentoFuncion","form","mask","placeholder","CreateSchedule","isLoadingNewSchedule","setPacote","setQtdTotalAtendimento","setPrice","qtd","FormClients","setName","setEmail","setPhone","setSegmentSelect","segmentSelect","onChangeClient","required","CreateClient","onSaveClient","segmentSelected","ComeBack","EditClient","clientId","useParams","editClient","find","isLoadingUpdate","isSuccessUpdate","onUpdateClient","emailField","scheduleService","put","delete","EditScheduleForm","scheduleId","schedule","onChangeSchedule","Home","navbar","LoginPage","setUser","showPassword","setPassword","credentials","setCredentials","loadFetchClient","setLoadFetchClient","saveLoginUser","login","prop","alt","src","logo","IconButton","onMouseDown","precision","decimalSeparator","thousandSeparator","allowNegative","prefix","suffix","maskedValue","undefined","String","digits","match","numberIsNegative","negativeSignCount","allDigitsAreZero","idx","unshift","splice","Number","join","toFixed","split","raw","decimalpos","x","push","salesService","moment","format","date1Valid","sales","parseInt","substring","reduce","acc","toLocaleString","currency","NewSale","clientName","setClientName","saleRegisterSuccess","setSaleRegisterSuccess","saleRegisterFail","setSaleRegisterFail","selectClientButton","ev","clientService","CardSales","nameClient","Set","Math","round","sort","a","b","TableSales","Reports","setClientSaves","salesForClient","setSalesForClient","setSegment","emptySale","setEmptySale","salesLastWeek","setSalesLastWeek","salesActualtWeek","setSalesActualWeek","salesLastMonth","setSalesLastMonth","salesActualMonth","setSalesActualMonth","clearTableSalesForClient","setClearTableSalesForClient","isMounted","primaryDateLastWeek","subtract","day","lastDateLastWeek","primaryDateWeek","lastDateWeek","getSalesLastWeek","getSalesActualWeek","dateStartLastMonth","startOf","dateEndLastMonth","endOf","dateStartActualMonth","dateEndActualMonth","getSalesLastMonth","getSalesActualMonth","Promise","all","getSalesWeek","getSaleMonth","reportClientInfo","HeaderModal","idCollapse","Sales","setSales","salesTodayNotFound","setSalesTodayNotFound","fetchSalesSuccess","setFetchSalesSuccess","setClearFields","salesNotFound","setSalesNotFound","loaderSales","setloaderSales","getSalesTodayResponse","CreateSalesBySchedule","salesCreate","isLoadingCreateSales","setIsLoadingCreateSales","ScheduleCard","setIdScheduleDeleted","expired","Paper","elevation","outline","isDefeated","Schedule","schedules","setSchedule","expiredSchedules","setExpiredSchedules","idScheduleDeleted","scheduleDeletedSuccess","setScheduleDeletedSuccess","fetchScheduleSuccess","setFetchScheduleSuccess","scheduleNotFound","setScheduleNotFound","scheduleFinish","setScheduleFinish","loaderState","setLoaderState","result","getScheduleResponse","finishScheduleResponse","expiredScheduleFinish","deleteClientScheduleResponse","dateLoad","clickButtonSelect","filterByClientElement","expire","CardSegment","editSegment","actionCreate","actionUpdate","actionName","setNewSegment","ButtonFilterAction","dataToggle","dataTarget","Segments","addSegment","isLoadingAdd","titleCardSegment","setTitleCardSegment","setActionName","editSegmentName","setEditSegmentName","setEditSegment","segmentActual","setSegmentActual","selectSegment","setSelectSegment","getSegment","clearFindClients","formFieldsIsValids","onAddNewSegment","updateSegmentRequest","onDeleteSegment","showActions","NavBarResponsive","closeItens","scheduleElement","clientElement","salesElement","atendimentoElement","navGroupElement","closeNavResponsive","RoutesApp","path","element","App","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.fb840491.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\nimport jwt from 'jsonwebtoken';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\nconst SECRET_TOKEN = process.env.REACT_APP_SECRET_TOKEN as string;\nconst LOCAL_STORAGE_LOGIN = 'user-info-arv';\n\nexport type UserLogin = {\n  userName?: string | null;\n  token: string | null;\n  refreshToken: string;\n  redirectLoginPageUri?: string;\n};\n\nconst authService = {\n  getUserInLocalStorange() {\n    const user = localStorage.getItem(LOCAL_STORAGE_LOGIN);\n    if (!user) return null;\n    try {\n      const userJson = JSON.parse(user);\n      return userJson;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  saveLoginInLocalStorage(params: UserLogin) {\n    localStorage.setItem(LOCAL_STORAGE_LOGIN, JSON.stringify(params));\n  },\n\n  cleanUserInLocalStorange() {\n    localStorage.removeItem(LOCAL_STORAGE_LOGIN);\n  },\n\n  async sendLogin(user: string, password: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/authenticate`;\n\n    const { data, status } = await axios\n      .post(URL, {\n        user: user,\n        password: password,\n      })\n      .then((res) => ({ data: res.data, status: res.status }))\n      .catch((err) => ({\n        data: err.response ? err.response.data : err.response,\n        status: err.response ? err.response.status : err.response,\n      }));\n\n    return { data, status };\n  },\n\n  async redirectLogin() {\n    const loggedUser = await this.getUserInLocalStorange();\n    return loggedUser ? null : '/login';\n  },\n\n  isValidToken(token: string): boolean {\n    try {\n      jwt.verify(token, SECRET_TOKEN);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n\n  getUserNameInToken(token: string): string {\n    const user: any = jwt.decode(token);\n\n    if (user) {\n      return user.user;\n    }\n    return '';\n  },\n};\n\nexport { authService };\n","import { createSlice } from '@reduxjs/toolkit';\nimport { authService, UserLogin } from '../services/authService';\nimport { ReducerActionType } from './types/reducerType';\n\nconst loginInLocalStorage = authService.getUserInLocalStorange();\n\nconst initialState: UserLogin = {\n  userName: loginInLocalStorage ? loginInLocalStorage.userName : null,\n  token: loginInLocalStorage ? loginInLocalStorage.token : null,\n  refreshToken: loginInLocalStorage ? loginInLocalStorage.refreshToken : null,\n  redirectLoginPageUri: '/login',\n};\n\nconst authenticatedSlice = createSlice({\n  name: 'authenticated',\n  initialState,\n  reducers: {\n    loginAdded: {\n      reducer(state: UserLogin, action: ReducerActionType<UserLogin>) {\n        authService.cleanUserInLocalStorange();\n        const userInfos = {\n          ...action.payload,\n          userName: authService.getUserNameInToken(\n            action.payload.token as string,\n          ),\n        };\n        authService.saveLoginInLocalStorage(userInfos);\n        state.userName = userInfos.userName;\n        state.token = action.payload.token;\n      },\n      prepare(params: { token: string; refreshToken: string }): {\n        payload: UserLogin;\n      } {\n        return {\n          payload: {\n            token: params.token,\n            refreshToken: params.refreshToken,\n          },\n        };\n      },\n    },\n    validateToken: {\n      reducer(state: UserLogin, action: any) {\n        if (authService.isValidToken(action.payload)) {\n          return;\n        }\n        state.token = null;\n        authService.cleanUserInLocalStorange();\n      },\n      prepare(params) {\n        return { payload: params };\n      },\n    },\n  },\n});\n\nexport const { loginAdded, validateToken } = authenticatedSlice.actions;\n\nexport default authenticatedSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_BASE_URL}/api`,\n    prepareHeaders: (headers, { getState }: any) => {\n      const token = getState().authenticated.token;\n      headers.set('authorization', token);\n      return headers;\n    },\n  }),\n  tagTypes: ['Clients', 'Segments'],\n  endpoints: (builder) => ({\n    getClients: builder.query({\n      query: () => '/client/all',\n      providesTags: ['Clients'],\n    }),\n    addNewClient: builder.mutation({\n      query: (initialClient) => ({\n        url: '/client/create',\n        method: 'POST',\n        body: initialClient,\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    updateClient: builder.mutation({\n      query: (client) => ({\n        url: '/client/update',\n        method: 'PUT',\n        body: client,\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    deleteClient: builder.mutation({\n      query: (client) => ({\n        url: '/client',\n        method: 'DELETE',\n        params: { id: client },\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    getSegments: builder.query({\n      query: () => '/segments',\n      providesTags: ['Segments'],\n    }),\n    addNewSegment: builder.mutation({\n      query: (segment) => ({\n        url: '/segment/create',\n        method: 'POST',\n        body: segment,\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    updateSegment: builder.mutation({\n      query: (segment) => ({\n        url: '/segment/update',\n        method: 'PUT',\n        body: segment,\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    deleteSegment: builder.mutation({\n      query: (params) => ({\n        url: '/segment',\n        method: 'DELETE',\n        params: { id: params.id, segment: params.segment },\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    getSchedulesByDate: builder.query({\n      query: (params) => ({\n        url: '/schedule/date',\n        method: 'GET',\n        params: { date: params.date },\n      }),\n    }),\n    getSchedulesByClient: builder.query({\n      query: (params) => ({\n        url: '/schedule/client',\n        method: 'GET',\n        params: { date: params.client },\n      }),\n    }),\n    addNewSchedule: builder.mutation({\n      query: (params) => ({\n        url: '/schedule/new',\n        method: 'POST',\n        body: params,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetClientsQuery,\n  useAddNewClientMutation,\n  useUpdateClientMutation,\n  useDeleteClientMutation,\n  useGetSegmentsQuery,\n  useAddNewSegmentMutation,\n  useUpdateSegmentMutation,\n  useDeleteSegmentMutation,\n  useGetSchedulesByDateQuery,\n  useGetSchedulesByClientQuery,\n  useAddNewScheduleMutation,\n} = apiSlice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ReducerActionType } from './types/reducerType';\n\nexport type ISchedule = {\n  id: string;\n  client: string;\n  procedure: string;\n  date: string;\n  time: string;\n  price: string;\n  phone: string;\n  pacote: boolean | null;\n  qtdTotalAtendimento: number;\n  qtdAtendimento: string;\n};\n\nconst initialState: ISchedule = {\n  id: '',\n  client: '',\n  procedure: '',\n  date: '',\n  time: '',\n  price: '',\n  phone: '',\n  pacote: false,\n  qtdTotalAtendimento: 0,\n  qtdAtendimento: '',\n};\n\nconst scheduleSlice = createSlice({\n  name: 'schedule',\n  initialState,\n  reducers: {\n    onEditClient: {\n      reducer(state: ISchedule, action: ReducerActionType) {\n        state.id = action.payload.id;\n        state.client = action.payload.client;\n        state.procedure = action.payload.procedure;\n        state.date = action.payload.date;\n        state.time = action.payload.time;\n        state.price = action.payload.price;\n        state.phone = action.payload.phone;\n        state.pacote = action.payload.pacote;\n        state.qtdTotalAtendimento = action.payload.qtdTotalAtendimento;\n        state.qtdAtendimento = action.payload.qtdAtendimento;\n      },\n      prepare(payload) {\n        return {\n          payload,\n        };\n      },\n    },\n  },\n});\n\nexport default scheduleSlice.reducer;\nexport const { onEditClient } = scheduleSlice.actions;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ReducerActionType } from './types/reducerType';\n\nexport type ISales = {\n  id: string;\n  client: string;\n  procedure: string;\n  date: string;\n  price: string;\n};\n\nconst initialState: ISales = {\n  id: '',\n  client: '',\n  procedure: '',\n  date: '',\n  price: '',\n};\n\nconst salesSlice = createSlice({\n  name: 'sales',\n  initialState,\n  reducers: {\n    onCreateSales: {\n      reducer(state: ISales, action: ReducerActionType) {\n        state.id = action.payload.id;\n        state.client = action.payload.client;\n        state.procedure = action.payload.procedure;\n        state.date = action.payload.date;\n        state.price = action.payload.price;\n      },\n      prepare(payload) {\n        return {\n          payload,\n        };\n      },\n    },\n  },\n});\n\nexport default salesSlice.reducer;\nexport const { onCreateSales } = salesSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authenticatedReducer from '../reducers/authenticatedSlice';\nimport { apiSlice } from '../api/ApiSlice';\nimport scheduleReducer from '../reducers/scheduleSlice';\nimport salesReducer from '../reducers/salesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    authenticated: authenticatedReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    schedule: scheduleReducer,\n    sales: salesReducer\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n});\n\nexport type ReducerStore = {\n  authenticated: {\n    userName: any;\n    token: string;\n    refreshToken: string;\n    redirectLoginPageUri: string;\n  };\n  clients: {\n    data: never[];\n    status: string;\n    error: null;\n  };\n  schedule: {\n    id: string;\n    client: string;\n    procedure: string;\n    date: string;\n    time: string;\n    phone: string;\n    pacote: boolean;\n    qtdTotalAtendimento: number;\n    qtdAtendimento: number;\n  };\n  sales: {\n    id: string;\n    client: string;\n    procedure: string;\n    date: string;\n    price: string;\n  }\n};\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { v4 as uuid } from 'uuid';\n\nexport function randomId(): string {\n  return uuid();\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertSuccess(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"success\"\n      color=\"success\"\n      className=\"mt-2 mb-3 border border-success text-success\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertInfo(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"info\"\n      color=\"info\"\n      className=\"mt-2 mb-3 border border-primary text-primary\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertError(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"error\"\n      color=\"error\"\n      className=\"mt-2 mb-3 border border-danger text-danger\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { randomId } from '../utils/random';\n\ntype InputProps = {\n  page: {\n    link: boolean | string;\n    name: string;\n  }[];\n};\n\nexport function Breadcumb(props: InputProps) {\n  const { page } = props;\n\n  return (\n    <div className=\"mb-4\">\n      <nav aria-label=\"breadcrumb mb-4\">\n        <ol className=\"breadcrumb remove-style-link\">\n          <li className=\"breadcrumb-item\" key={randomId()}>\n            <Link to=\"/home\">Home</Link>\n          </li>\n          {page.map((item) => {\n            if (item.link) {\n              return (\n                <li\n                  className=\"breadcrumb-item active\"\n                  aria-current=\"page\"\n                  key={randomId()}\n                >\n                  <Link to={item.link as string}>{item.name}</Link>\n                </li>\n              );\n            }\n            return (\n              <li\n                className=\"breadcrumb-item active\"\n                aria-current=\"page\"\n                key={randomId()}\n              >\n                {item.name}\n              </li>\n            );\n          })}\n        </ol>\n      </nav>\n    </div>\n  );\n}\n","export const WhatsAppService = {\n  redirectToWhatsappWithMessage(\n    event: React.BaseSyntheticEvent,\n    client: string,\n    contact: string,\n    date: string,\n    time: string,\n    qtdTotalAtendimento: number,\n    qtdAtendimento: number,\n    procedure: string,\n  ): void {\n    event.preventDefault();\n    const isPacote = qtdTotalAtendimento\n      ? `Esse é o ${qtdAtendimento + 1}º dia do pacote. \\n`\n      : '';\n    const dateUrl = new Date(date).toLocaleDateString('pt-BR', {\n      timeZone: 'UTC',\n    });\n    const text = `Olá ${client}, posso confirmar o horário que agendamos para dia ${dateUrl} às ${time} horas? \\n${isPacote}\\nProcedimento: ${procedure} \\nAguardo seu retorno!`;\n    const URL = `https://api.whatsapp.com/send?phone=55${contact}&text=`;\n    const redirect = window.encodeURIComponent(text);\n    window.open(URL + redirect, '_blank');\n  },\n\n  redirectToWhatsapp(event: React.SyntheticEvent, contact: string): void {\n    event.preventDefault();\n    const URL = `https://api.whatsapp.com/send?phone=55${contact.replace(\n      /[^0-9]+/g,\n      '',\n    )}`;\n    window.open(URL, '_blank');\n  },\n};\n","import React from 'react';\nimport { WhatsAppService } from '../services/whatsapp-service';\nimport { randomId } from '../utils/random';\n\nimport { Link } from 'react-router-dom';\nimport { IClient } from '../api/types/Client';\n\ntype InputProps = {\n  clients: IClient[];\n  setId: any;\n};\n\nexport function CardClients(props: InputProps) {\n  const { clients, setId } = props;\n\n  return (\n    <div>\n      {clients\n        ? clients.map((item) => {\n            return (\n              <React.Fragment key={randomId()}>\n                <div\n                  className=\"accordion mt-2 mb-3\"\n                  id=\"accordionExample\"\n                  key={randomId()}\n                >\n                  <div className=\"card p-2 border-bottom\">\n                    <div className=\"card-header\">\n                      <div\n                        className=\"form-row\"\n                        id=\"headingOne\"\n                        data-toggle=\"collapse\"\n                        data-target={`#${item.id}`}\n                        aria-expanded=\"false\"\n                        aria-controls={`${item.id}`}\n                      >\n                        <h6 className=\"text-primary font-weight-bold pt-2 col\">\n                          Cliente:{' '}\n                          <small className=\"text-muted h6\">{item.name}</small>\n                        </h6>\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"30\"\n                          height=\"30\"\n                          fill=\"#0d6efd\"\n                          className=\"bi bi-arrows-angle-expand col-end\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path\n                            fillRule=\"evenodd\"\n                            d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707z\"\n                          />\n                        </svg>\n                      </div>\n                    </div>\n                    <div\n                      id={`${item.id}`}\n                      className=\"collapse\"\n                      aria-labelledby=\"headingOne\"\n                      data-parent=\"#accordionExample\"\n                    >\n                      <div className=\"list-group-item p-3 mt-2\">\n                        {item.email ? (\n                          <h6 className=\"card-subtitle text-primary font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n                            E-mail:{' '}\n                            <small className=\"text-muted h6 mb-3\">\n                              {item.email}\n                            </small>\n                          </h6>\n                        ) : null}\n                        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2\">\n                          Telefone:{' '}\n                          <small className=\"text-muted h6 mb-3\">\n                            {item.phone}\n                          </small>\n                        </h6>\n                        {item.segment ? (\n                          <h6 className=\"card-subtitle text-primary font-weight-bold pt-3 pb-2 mt-3 border-top \">\n                            Segmento:{' '}\n                            <small className=\"text-muted h6 mb-3\">\n                              {item.segment}\n                            </small>\n                          </h6>\n                        ) : null}\n                      </div>\n                      <div className=\"mt-3\">\n                        <button\n                          type=\"submit\"\n                          className=\"col btn btn-outline-success mb-1 font-weight-bold\"\n                          onClick={(e) =>\n                            WhatsAppService.redirectToWhatsapp(e, item.phone)\n                          }\n                          key={randomId()}\n                          style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                          }}\n                        >\n                          <div className=\"pr-2\">WhatsApp</div>\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"20\"\n                            height=\"20\"\n                            fill=\"currentColor\"\n                            className=\"bi bi-whatsapp\"\n                            viewBox=\"0 0 16 16\"\n                          >\n                            <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\n                          </svg>\n                        </button>\n                        <div className=\"form-row\">\n                          <Link className=\"col\" to={`/editClient/${item.id}`}>\n                            <button\n                              type=\"button\"\n                              className=\"col mt-1 btn btn-outline-primary\"\n                              key={randomId()}\n                            >\n                              Editar\n                            </button>\n                          </Link>\n                          <button\n                            type=\"button\"\n                            className=\"col m-1 btn btn-outline-danger\"\n                            data-toggle=\"modal\"\n                            data-target=\"#delete-client\"\n                            onClick={(e) => setId(item.id)}\n                            key={randomId()}\n                          >\n                            Excluir\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })\n        : null}\n    </div>\n  );\n}\n","import '../css/main.css';\n\nexport function CircularIndeterminate() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        position: 'fixed',\n        width: '100',\n        height: '100%',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        zIndex: 2,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\n","import TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\ntype InputProps = {\n  title: string;\n  options: string[];\n  selectValue: any;\n  value?: any;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport function ComboBox(props: InputProps) {\n  const { title, options, selectValue, value, className, style } = props;\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      freeSolo\n      options={options}\n      renderInput={(params) => <TextField {...params} label={title} />}\n      value={value}\n      onInputChange={selectValue}\n      onChange={selectValue}\n      className={className}\n      style={style}\n    />\n  );\n}\n","export function TitlePage(props: { title: string }) {\n  return <h3 className=\"title-page\">{props.title}</h3>;\n}\n","import '../css/main.css';\n\ntype InputProps = {\n  id: string;\n  title: string;\n  button?: string;\n  click?: any;\n  data_target?: string;\n  body: any;\n  className?: string;\n};\n\nexport function TopModal(props: InputProps) {\n  const { id, title, button, click, data_target, body, className } = props;\n\n  return (\n    <div\n      className=\"modal fade\"\n      id={id}\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n      data-toggle=\"modal\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              {title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Fechar\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body mb-2 mt-2\">{body}</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            {button && (\n              <button\n                type=\"button\"\n                onClick={click}\n                data-target={data_target}\n                className={className}\n                data-dismiss=\"modal\"\n              >\n                {button}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const HTTP_RESPONSE = {\n  SUCCESS: [200, 201],\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  UNAUTHORIZED: 403,\n  CONFLICT: 409,\n  ERROR: 500,\n};\n\nexport const TIMEOUT = {\n  FIVE_SECCONDS: 5000,\n};\n","import { randomId } from '../../utils/random';\n\ntype InputProps = {\n  text: string;\n  onClick: any;\n};\n\nexport function SearchFilterButton(props: InputProps) {\n  return (\n    <div\n      className=\"mt-2 mr-2 mb-2\"\n      style={{\n        display: 'inline-block',\n      }}\n    >\n      <button\n        className=\"btn btn-outline-dark\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: '15px',\n        }}\n        onClick={props.onClick}\n        key={randomId()}\n      >\n        <div className=\"mr-3 font-weight-bold\">{props.text}</div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"dark\"\n          className=\"bi bi-search\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n        </svg>\n      </button>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n};\n\nexport function ClearSearchFilterButton(props: InputProps) {\n  return (\n    <div\n      className=\"mt-2 mr-2 mb-2\"\n      style={{\n        display: 'inline-block',\n      }}\n    >\n      <button\n        className=\"btn btn-outline-warning font-weight-bold\"\n        style={{\n          borderRadius: '15px',\n          border: '2px solid',\n        }}\n        onClick={props.onClick}\n      >\n        Limpar fitros\n      </button>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n  style?: React.CSSProperties;\n};\n\nexport function SearchButton(props: InputProps) {\n  return (\n    <button\n      className=\"btn btn-primary ml-2 pl-3 pr-3\"\n      onClick={props.onClick}\n      style={props.style}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-search\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n      </svg>\n    </button>\n  );\n}\n","import '../css/main.css';\n\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CardClients } from '../components/CardClient';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ComboBox } from '../components/ComboBox';\nimport { TitlePage } from '../components/TitlePage';\nimport { TopModal } from '../components/TopModal';\n\nimport {\n  useDeleteClientMutation,\n  useGetClientsQuery,\n  useGetSegmentsQuery,\n} from '../api/ApiSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\nimport { ISegment } from '../api/types/Segment';\nimport { IClient } from '../api/types/Client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Clients() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  const {\n    data: clients = [],\n    isLoading,\n    isSuccess,\n    error: errorFetchClients = {} as any,\n  } = useGetClientsQuery('');\n\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const [deleteClient, { isLoading: isLoadingDelete }] =\n    useDeleteClientMutation();\n\n  const [id, setId] = useState<string | null>(null);\n  const [loaderClients, setLoaderClients] = useState<JSX.Element | null>();\n  const [clientView, setClientView] = useState<IClient[]>([]);\n  const [deletedClientSuccess, setDeletedClientSuccess] =\n    useState<boolean>(false);\n\n  const [filterClientById, setFilterClientById] = useState<string>('');\n  const [filterClientBySegment, setFilterClientBySegment] =\n    useState<string>('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    if (clients.length > 0) setClientView(clients);\n  }, [auth, navigate, clients, dispatch]);\n\n  let loader;\n\n  if (isLoading || isLoadingDelete) {\n    loader = <CircularIndeterminate />;\n  } else if (isSuccess) {\n    loader = null;\n  }\n\n  const onDeleteClient = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await deleteClient(id).unwrap();\n      setDeletedClientSuccess(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterClientSelectedById = (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    if (id) {\n      const clientsById = clients.filter((client: IClient) => client.id === id);\n      setClientView(clientsById);\n      return;\n    }\n  };\n\n  const filterClientSelectedBySegment = (\n    event: React.BaseSyntheticEvent,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    if (segment) {\n      const clientsBySegment = clients.filter(\n        (client: IClient) => client.segment === segment,\n      );\n      setClientView(clientsBySegment);\n      return;\n    }\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const inputFilterName = document.querySelector(`\n      #searchByName > div > div > div > div > button\n    `) as HTMLElement;\n\n    if (inputFilterName) inputFilterName.click();\n\n    const inputFilterSegment = document.querySelector(`\n      #searchBySegmento > div > div > div > div > button\n    `) as HTMLElement;\n\n    if (inputFilterSegment) inputFilterSegment.click();\n\n    setClientView(clients);\n  };\n\n  if (deletedClientSuccess) {\n    setTimeout(() => setDeletedClientSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (loaderClients) {\n    setTimeout(() => setLoaderClients(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let snniperClient = null;\n\n  if (errorFetchClients.status === HTTP_RESPONSE.NOT_FOUND) {\n    snniperClient = <AlertInfo title=\"Nenhum cliente foi retornado.\" />;\n  } else if (errorFetchClients.status === HTTP_RESPONSE.ERROR) {\n    snniperClient = (\n      <AlertError title=\"Não foi possível processar a requisição.\" />\n    );\n  }\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb page={[{ link: false, name: 'Clientes' }]} />\n\n      <TitlePage title=\"Clientes\" />\n\n      <div className=\"pb-2 mb-2\">\n        <strong>Quantidade de clientes: </strong>\n        {clientView.length}\n      </div>\n\n      <div\n        className=\"pb-2 mb-4\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterBySegmentElement =\n              document.getElementById('searchBySegmento');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterBySegmentElement?.style.display === 'flex') {\n              filterBySegmentElement.style.display = 'none';\n            } else {\n              if (filterBySegmentElement)\n                filterBySegmentElement.style.display = 'flex';\n            }\n\n            if (filterByNameElement) filterByNameElement.style.display = 'none';\n          }}\n          text=\"Segmento\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterBySegmentElement =\n              document.getElementById('searchBySegmento');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterByNameElement?.style.display === 'flex') {\n              filterByNameElement.style.display = 'none';\n            } else {\n              if (filterByNameElement)\n                filterByNameElement.style.display = 'flex';\n            }\n\n            if (filterBySegmentElement)\n              filterBySegmentElement.style.display = 'none';\n          }}\n          text=\"Nome\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n\n            const filterClientsElement =\n              document.getElementById('searchByName');\n            if (filterClientsElement)\n              filterClientsElement.style.display = 'none';\n            const filerClientElement =\n              document.getElementById('searchBySegmento');\n\n            if (filerClientElement) filerClientElement.style.display = 'none';\n          }}\n        />\n      </div>\n\n      <div\n        className=\"mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"searchByName\"\n      >\n        <ComboBox\n          title=\"Digite o nome...\"\n          options={clients.map((item: IClient) => ({\n            label: item.name,\n            id: item.id,\n          }))}\n          selectValue={(\n            e: React.BaseSyntheticEvent,\n            item: { label: string; id: string },\n          ) => setFilterClientById(item ? item.id : '')}\n          style={{\n            width: '300px',\n          }}\n        />\n        <SearchButton\n          onClick={(e: React.BaseSyntheticEvent) =>\n            filterClientSelectedById(e, filterClientById)\n          }\n        />\n      </div>\n      <div\n        className=\"mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"searchBySegmento\"\n      >\n        <ComboBox\n          title=\"Digite o segmento...\"\n          options={segments.map((item: ISegment) => ({\n            label: item.segment,\n            id: item.id,\n          }))}\n          selectValue={(\n            e: React.BaseSyntheticEvent,\n            item: { label: string; id: string },\n          ) => setFilterClientBySegment(item ? item.label : '')}\n          style={{\n            width: '300px',\n          }}\n        />\n\n        <SearchButton\n          onClick={(e: React.BaseSyntheticEvent) =>\n            filterClientSelectedBySegment(e, filterClientBySegment)\n          }\n        />\n      </div>\n\n      {loader}\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-client\"\n        title=\"Excluir cliente?\"\n        body=\"Tem certeza que deseja excluir esse cliente?\"\n        click={(e: React.BaseSyntheticEvent) => onDeleteClient(e, id ? id : '')}\n        button=\"Excluir\"\n      />\n\n      <div className=\"mt-2\">{snniperClient}</div>\n\n      {deletedClientSuccess === true ? (\n        <AlertSuccess title=\"Cliente excluído com sucesso.\" />\n      ) : null}\n\n      <CardClients clients={clientView} setId={setId} />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nexport const clientHistoryService = {\n  async createClientHistory(\n    token: string,\n    client: string,\n    description: string,\n    date: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/create`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URI,\n          {\n            client,\n            description,\n            date,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error: any) {\n      return error;\n    }\n  },\n\n  async getHistoryByClient(token: string, client: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/client`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { client },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByDate(token: string, date: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/date`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByPeriod(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/period`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { date1, date2 },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByAllFilters(\n    token: string,\n    client: string,\n    date1: string,\n    date2?: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/history/all-filters`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client, date1, date2 },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n","type InputProps = {\n  callback: Function;\n  title: any;\n  className?: any;\n};\n\nexport function ClearFields(props: InputProps) {\n  const { callback, title, className } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={`col mt-2 btn btn-outline-primary mb-2 ${className}`}\n      data-toggle=\"modal\"\n      onClick={(e) => callback(e)}\n    >\n      {title}\n    </button>\n  );\n}\n","import { TextField } from '@mui/material';\n\nexport function InputText(props: any) {\n  const { type, id, label, onChange, className, value, style } = props;\n\n  return (\n    <TextField\n      type={type}\n      id={id}\n      label={label}\n      value={value}\n      variant=\"outlined\"\n      onChange={onChange}\n      sx={{\n        width: '100%',\n        fontFamily: 'Montserrat',\n      }}\n      className={className}\n      style={style}\n    />\n  );\n}\n","import { InputText } from './InputText';\n\ntype InputProps = {\n  idComponent: string;\n  idInput: string;\n  onChange: Function;\n  style?: React.CSSProperties;\n  className?: string;\n};\n\nexport function InputDate(props: InputProps) {\n  return (\n    <div\n      className={`${props.className}`}\n      style={{\n        width: '145px',\n        ...props.style,\n      }}\n      id={props.idComponent}\n    >\n      <InputText\n        type=\"date\"\n        label=\" \"\n        id={props.idInput}\n        onChange={props.onChange}\n      />\n    </div>\n  );\n}\n","export function LabelForm(props: { text: string }) {\n  return <label className=\"mt-2\">{props.text}</label>;\n}\n","import { IClient } from '../api/types/Client';\nimport { ComboBox } from './ComboBox';\nimport { SearchFilterButton } from './buttons/SearchFilter';\nimport { ClearSearchFilterButton } from './buttons/ClearSearchFilter';\nimport { InputDate } from './input/InputDate';\nimport { SearchButton } from './buttons/SearchButton';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  getSalesInPeriodResponse: Function;\n  setDate1: Function;\n  setDate2: Function;\n  filterByClient: IClient[];\n  setDataClient: any;\n  clearFields: any;\n};\n\nfunction clearDate1() {\n  const date1Element = document.getElementById(\n    'date1Period',\n  ) as HTMLInputElement | null;\n  if (date1Element) date1Element.value = '';\n}\n\nfunction clearAllFilters() {\n  const filterByDateElement = document.getElementById('filterByDate');\n  const filterByPeriod = document.getElementById('filterByPeriod');\n  const filterByDateInPeriod = document.getElementById('filterByDateInPeriod');\n  const filterByDateInPeriod2 = document.getElementById(\n    'filterByDateInPeriod2',\n  );\n  const filterByClient = document.getElementById('filterByClient');\n  const inputClientElement = document.querySelector(\n    '#filterByClient > div > div > div > div > div > button',\n  ) as HTMLElement;\n\n  if (inputClientElement) inputClientElement.click();\n  if (filterByClient) filterByClient.style.display = 'none';\n  if (filterByPeriod) filterByPeriod.style.display = 'none';\n  if (filterByDateInPeriod) filterByDateInPeriod.style.display = 'none';\n  if (filterByDateInPeriod2) filterByDateInPeriod2.style.display = 'none';\n  if (filterByDateElement) filterByDateElement.style.display = 'none';\n  clearDate1();\n}\n\nexport function SelectPeriod(props: InputProps) {\n  const {\n    getSalesInPeriodResponse,\n    setDate1,\n    setDate2,\n    filterByClient,\n    setDataClient,\n    clearFields,\n  } = props;\n\n  return (\n    <div className=\"mb-4 rounded\">\n      <div\n        className=\"pb-2\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateElement?.style.display === 'block') {\n              filterByDateElement.style.display = 'none';\n            } else {\n              if (filterByDateElement)\n                filterByDateElement.style.display = 'block';\n            }\n\n            if (filterByPeriod) filterByPeriod.style.display = 'none';\n            if (filterByDateInPeriod)\n              filterByDateInPeriod.style.display = 'none';\n            if (filterByDateInPeriod2)\n              filterByDateInPeriod2.style.display = 'none';\n            if (filterByClient) filterByClient.style.display = 'none';\n          }}\n          text=\"Data\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n\n            if (filterByPeriod?.style.display === 'flex') {\n              filterByPeriod.style.display = 'none';\n            } else {\n              if (filterByPeriod) filterByPeriod.style.display = 'flex';\n              if (filterByDateInPeriod)\n                filterByDateInPeriod.style.display = 'block';\n              if (filterByDateInPeriod2)\n                filterByDateInPeriod2.style.display = 'block';\n            }\n\n            if (filterByClient) filterByClient.style.display = 'none';\n          }}\n          text=\"Período\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateInPeriod)\n              filterByDateInPeriod.style.display = 'none';\n            if (filterByPeriod) filterByPeriod.style.display = 'none';\n            if (filterByDateInPeriod2)\n              filterByDateInPeriod2.style.display = 'none';\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n\n            if (filterByClient?.style.display === 'block') {\n              filterByClient.style.display = 'none';\n            } else {\n              if (filterByClient) filterByClient.style.display = 'block';\n            }\n          }}\n          text=\"Cliente\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearAllFilters();\n          }}\n        />\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByDate\"\n        className=\"shadow-sm p-3\"\n      >\n        <LabelForm text=\"Data\" />\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <InputDate\n            idComponent=\"date1InputDate\"\n            idInput=\"date1\"\n            onChange={(e: React.BaseSyntheticEvent) => setDate1(e.target.value)}\n            className=\"\"\n          />\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getSalesInPeriodResponse(e);\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n          flexDirection: 'column',\n        }}\n        id=\"filterByPeriod\"\n        className=\"shadow-sm p-3\"\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '360px',\n            alignItems: 'flex-end',\n          }}\n        >\n          <div\n            style={{\n              display: 'block',\n            }}\n          >\n            <LabelForm text=\"Inicial\" />\n            <InputDate\n              idComponent=\"filterByDateInPeriod\"\n              idInput=\"date1Period\"\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate1(e.target.value)\n              }\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'block',\n            }}\n          >\n            <LabelForm text=\"Final\" />\n            <InputDate\n              idComponent=\"filterByDateInPeriod2\"\n              idInput=\"date2\"\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate2(e.target.value)\n              }\n            />\n          </div>\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getSalesInPeriodResponse(e);\n            }}\n            style={{\n              height: '55px',\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"mt-4 mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByClient\"\n      >\n        {filterByClient !== null ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={filterByClient.map((item) => item.name)}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                setDataClient(e, item)\n              }\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getSalesInPeriodResponse(e);\n              }}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                setDataClient(e, item)\n              }\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getSalesInPeriodResponse(e);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { IClientHistory } from '../api/types/ClientHistory';\nimport { randomId } from '../utils/random';\n\ntype InputProps = {\n  clientHistory: IClientHistory[];\n};\n\nexport function TableHistory(props: InputProps) {\n  const { clientHistory } = props;\n\n  return (\n    <div className=\"table-responsive-sm\">\n      <table className=\"table table-bordered mt-3 mb-0\">\n        <thead className=\"thead-dark header-table\">\n          <tr>\n            <th>Cliente</th>\n            <th>Descrição</th>\n            <th>Data</th>\n          </tr>\n        </thead>\n        <tbody>\n          {clientHistory.map((item) => {\n            return (\n              <tr key={randomId()}>\n                <td className=\"row-table\">\n                  <button\n                    type=\"button\"\n                    className=\"card border-0 col bg-transparent\"\n                    data-toggle=\"modal\"\n                    data-target=\"#finalyt-schedule\"\n                  >\n                    {item.client}\n                  </button>\n                </td>\n                <td className=\"row-table\">{item.description}</td>\n                <td className=\"row-table\">\n                  {new Date(item.date).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { clientHistoryService } from '../services/clientHistoryService';\nimport { ReducerStore } from '../app/store';\nimport { useGetClientsQuery } from '../api/ApiSlice';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { SelectPeriod } from '../components/SelectPeriod';\nimport { TableHistory } from '../components/TableHistory';\nimport { TitlePage } from '../components/TitlePage';\nimport { IClientHistory } from '../api/types/ClientHistory';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function ClientHistory() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [date1, setDate1] = useState<string>('');\n  const [date2, setDate2] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [historyNotFound, setHistoryNotFound] = useState<boolean>(false);\n\n  const [clientHistory, setClientHistory] = useState<IClientHistory[]>([]);\n  const [clientSelected, setClientSelected] = useState<string | null>('');\n\n  const [clearSchedule, setClearSchedule] = useState<boolean>(false);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n  const [loaderHistory, setLoaderHistory] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [navigate, dispatch, auth]);\n\n  const getHistoryInPeriodResponse = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if ((!clientSelected && !date1 && !date2) || (!date1 && date2)) {\n      setInvalidParams(true);\n      setClientHistory([]);\n      return;\n    }\n\n    setLoaderHistory(true);\n\n    let request = null;\n\n    if ((clientSelected && date1) || (clientSelected && date1 && date2)) {\n      request = await clientHistoryService.getHistoryByAllFilters(\n        auth.token,\n        clientSelected,\n        date1,\n        date2 as string,\n      );\n    } else if (clientSelected) {\n      request = await clientHistoryService.getHistoryByClient(\n        auth.token,\n        clientSelected,\n      );\n    } else if (date1 && !date2) {\n      request = await clientHistoryService.getHistoryByDate(auth.token, date1);\n    } else if (date1 && date2) {\n      request = await clientHistoryService.getHistoryByPeriod(\n        auth.token,\n        date1,\n        date2,\n      );\n    }\n\n    setLoaderHistory(false);\n\n    if (!request) return;\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setHistoryNotFound(true);\n      setClientHistory([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    setClientHistory(request.data);\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientHistory([]);\n    setClientSelected('');\n    setDate1('');\n    setDate2('');\n    setClearSchedule(true);\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientSelected('');\n    clearDates();\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card.mb-4.p-3.shadow.bg-white.rounded > form > div.mb-4 > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const clearDates = () => {\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    const date2Element = document.getElementById(\n      'date2',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n    if (date2Element) date2Element.value = '';\n    setDate1('');\n    setDate2('');\n  };\n\n  if (historyNotFound) {\n    setTimeout(() => setHistoryNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearSchedule) {\n    setTimeout(() => setClearSchedule(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let loader = null;\n  if (isLoadingGetClients || loaderHistory) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb page={[{ link: false, name: 'Histórico' }]} />\n      <TitlePage title=\"Histórico\" />\n\n      <SelectPeriod\n        getSalesInPeriodResponse={getHistoryInPeriodResponse}\n        setDate1={setDate1}\n        setDate2={setDate2}\n        filterByClient={clients}\n        setDataClient={(e: React.BaseSyntheticEvent, item: string) =>\n          setClientSelected(item)\n        }\n        clearFields={(e: React.BaseSyntheticEvent) => clearFilters(e)}\n      />\n\n      {historyNotFound === true ? (\n        <AlertInfo title=\"Nenhum histórico encontrado.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Não foi possível processar a requisição.\" />\n      ) : null}\n      {clearSchedule === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {invalidParams === true && (\n        <AlertError title=\"Preencha os campos corretamente.\" />\n      )}\n\n      {clientHistory.length > 0 ? (\n        <div>\n          <div className=\"d-inline\">\n            {(date1 || date2) && (\n              <div className=\"d-inline\">\n                <strong>Período: </strong>\n                {date1 &&\n                  new Date(date1).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                {date2 &&\n                  ' - ' +\n                    new Date(date2).toLocaleDateString('pt-BR', {\n                      timeZone: 'UTC',\n                    })}\n              </div>\n            )}\n\n            {clientSelected && (\n              <div className=\"d-inline\">\n                <strong>Cliente: </strong>\n                <div className=\"d-inline\">{clientSelected}</div>\n              </div>\n            )}\n          </div>\n\n          <ClearFields title=\"Limpar Pesquisa\" callback={clearFields} />\n\n          <TableHistory clientHistory={clientHistory} />\n\n          <div className=\"inline mt-4\">\n            <p>\n              <strong>Quantidade de atendimentos:</strong>{' '}\n              {clientHistory.length > 0 ? clientHistory.length : null}\n            </p>\n          </div>\n        </div>\n      ) : (\n        <h4>Faça uma busca</h4>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { clientHistoryService } from '../services/clientHistoryService';\nimport { ReducerStore } from '../app/store';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { IClient } from '../api/types/Client';\nimport { ComboBox } from '../components/ComboBox';\nimport { InputText } from '../components/input/InputText';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nexport function CreateHistory() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [client, setClient] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n\n  const [historyResgisterSuccess, setHistoryRegisterSuccess] =\n    useState<boolean>(false);\n  const [historyRegisterFail, setHistoryRegisterFail] =\n    useState<boolean>(false);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const formFieldsIsValids = (): boolean => {\n    if (!client.trim() || client.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente\" />);\n      return false;\n    } else if (!description || description.length > 100) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente\" />);\n      return false;\n    } else if (!date || date.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha a data corretamente\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const saveSale = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const request = await clientHistoryService.createClientHistory(\n      auth.token,\n      client.trim(),\n      description,\n      date,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setClient('');\n      setDescription('');\n      setDate('');\n      setHistoryRegisterSuccess(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.BAD_REQUEST) {\n      setInvalidParams(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setDescription('');\n    setDate('');\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > form > div > div:nth-child(1) > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (historyResgisterSuccess === true || historyResgisterSuccess === false) {\n    setTimeout(() => setHistoryRegisterSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (historyRegisterFail) {\n    setTimeout(() => setHistoryRegisterFail(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb\n        page={[\n          { link: '/history', name: 'Atendimentos' },\n          { link: false, name: 'Criar Novo' },\n        ]}\n      />\n      <TitlePage title=\"Criar Novo\" />\n\n      <form onSubmit={saveSale} className=\"form-sale\">\n        <div className=\"card p-3\">\n          <div className=\"form-group\">\n            <LabelForm text=\"Cliente *\" />\n            <div>\n              {clients ? (\n                <ComboBox\n                  title=\"Selecionar Cliente\"\n                  options={clients.map((item: IClient) => item.name)}\n                  selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                    setClient(item)\n                  }\n                />\n              ) : (\n                <ComboBox\n                  title=\"Selecionar Cliente\"\n                  options={[]}\n                  selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                    setClient(item)\n                  }\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <LabelForm text=\"Descrição *\" />\n\n            <InputText\n              type=\"text\"\n              value={description}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDescription(e.target.value)\n              }\n              id=\"name\"\n              label=\"Digite a descrição\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <LabelForm text=\"Data *\" />\n\n            <InputText\n              type=\"date\"\n              id=\"date\"\n              label=\" \"\n              value={date}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate(e.target.value)\n              }\n            />\n          </div>\n          <div className=\"form-row mt-3\">\n            <div className=\"form-group col\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary btn-entrar p-2\"\n                onClick={(e: React.BaseSyntheticEvent) => clearFields(e)}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button type=\"submit\" className=\"btn btn-primary btn-entrar p-2\">\n                Registrar\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            {historyResgisterSuccess === true && (\n              <AlertSuccess title=\"Atendimento registrado com sucesso.\" />\n            )}\n            {historyRegisterFail === true && (\n              <AlertError title=\"Erro ao registrar o atendimento.\" />\n            )}\n            {serverError === true && (\n              <AlertError title=\"Não foi possível processar a requisição.\" />\n            )}\n            {invalidParams === true && (\n              <AlertError title=\"Preencha os campos corretamente.\" />\n            )}\n            {alert}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import InputMask from 'react-input-mask';\nimport { AlertInfo } from './alerts/AlertInfo';\nimport { AlertSuccess } from './alerts/AlertSuccess';\nimport { ComboBox } from './ComboBox';\nimport { InputText } from './input/InputText';\nimport { IClient } from '../api/types/Client';\nimport { LabelForm } from './labels/LabelForm';\n\nexport function ScheduleForm(props: any) {\n  const {\n    clientSaves,\n    setDataClient,\n    client,\n    procedure,\n    setProcedure,\n    dateNewSchedule,\n    setDateNewSchedule,\n    time,\n    setTime,\n    contact,\n    setContact,\n    clearStates,\n    edit,\n    addNewClientSchedule,\n    errorClientSchedule,\n    setPacoteFunc,\n    pacote,\n    setQtdTotalAtendimentoFuncion,\n    qtdTotalAtendimento,\n    alert,\n  } = props;\n\n  return (\n    <div>\n      <div className=\"modal-body\">\n        <form>\n          {edit && (\n            <h5 className=\"modal-title border-bottom mb-4 pb-2\">Editar</h5>\n          )}\n          <LabelForm text=\"Cliente *\" />\n\n          <div className=\"mb-3\">\n            {edit ? (\n              <ComboBox\n                title=\"Selecione o cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setDataClient(item);\n                    return;\n                  }\n                  setDataClient(item);\n                }}\n                value={client}\n              />\n            ) : (\n              <div>\n                {clientSaves && clientSaves.length > 0 ? (\n                  <ComboBox\n                    title=\"Selecione o cliente\"\n                    options={clientSaves.map((item: IClient) => ({\n                      label: item.name,\n                      phone: item.phone,\n                    }))}\n                    selectValue={(\n                      e: React.BaseSyntheticEvent,\n                      item: string,\n                    ) => {\n                      if (!item) {\n                        setDataClient(e, item);\n                        return;\n                      }\n                      setDataClient(e, item);\n                    }}\n                  />\n                ) : (\n                  <ComboBox\n                    title=\"Selecione o cliente\"\n                    options={[]}\n                    selectValue={(\n                      e: React.BaseSyntheticEvent,\n                      item: string,\n                    ) => {\n                      if (!item) {\n                        setDataClient(e, item);\n                        return;\n                      }\n                      setDataClient(e, item);\n                    }}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n\n          <LabelForm text=\"Descrição *\" />\n\n          <InputText\n            type=\"text\"\n            id=\"procedure\"\n            value={procedure}\n            onChange={(e: React.BaseSyntheticEvent) =>\n              setProcedure(e.target.value)\n            }\n            label=\"Digite a descrição\"\n          />\n\n          <div className=\"form-row mt-2 pt-2\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Pacote\" />\n\n              <div className=\"card\">\n                <button\n                  className=\"btn bg-white text-left\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"form-row\">\n                    <div className=\"col p-1\">\n                      {pacote === true && 'Sim'}\n                      {pacote === false && 'Não'}\n                      {pacote === null || pacote === '' ? 'Escolha...' : null}\n                    </div>\n                    <div className=\"dropdown-toggle col-end\" />\n                  </div>\n                </button>\n                <div\n                  className=\"dropdown-menu col\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                  id=\"select-clients\"\n                >\n                  <div className=\"dropdown-item\">\n                    <button\n                      type=\"button\"\n                      onClick={(e) => setPacoteFunc(e, true)}\n                      className=\"card p-2 mb-2 border-0 col\"\n                    >\n                      Sim\n                    </button>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <button\n                      type=\"button\"\n                      onClick={(e) => setPacoteFunc(e, false)}\n                      className=\"card p-2 mb-2 border-0 col\"\n                    >\n                      Não\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group col\">\n              <LabelForm text=\"Nº de Atendimentos\" />\n\n              <div className=\"card\">\n                <button\n                  className=\"btn bg-white text-left\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"form-row p-1\">\n                    <div className=\"col\">\n                      {qtdTotalAtendimento ? qtdTotalAtendimento : 'Escolha...'}\n                    </div>\n                    <div className=\"dropdown-toggle col-end\" />\n                  </div>\n                </button>\n                <div\n                  className=\"dropdown-menu col\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                  id=\"select-clients\"\n                >\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 1)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        1\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 2)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        2\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 3)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        3\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 4)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        4\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 5)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        5\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Data *\" />\n\n              <InputText\n                type=\"date\"\n                label=\" \"\n                id=\"date\"\n                value={dateNewSchedule}\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setDateNewSchedule(e.target.value)\n                }\n              />\n              <small className=\"form-text text-muted\">Selecione a data.</small>\n            </div>\n            <div className=\"form-group col\">\n              <LabelForm text=\"Horário *\" />\n\n              <InputText\n                type=\"time\"\n                label=\" \"\n                id=\"time\"\n                value={time}\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setTime(e.target.value)\n                }\n              />\n              <small className=\"form-text text-muted\">Selecione horário.</small>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Telefone\" />\n\n              <InputMask\n                type=\"text\"\n                form=\"currency\"\n                className=\"p-3 form-control\"\n                value={contact}\n                id=\"contact\"\n                mask=\"(99) 9 9999-9999\"\n                onChange={(e) => setContact(e.target.value)}\n                placeholder=\"(__) _ ____ - ____\"\n              />\n              <small className=\"form-text text-muted mb-3\">\n                Telefone de contato do whatsapp.\n              </small>\n            </div>\n          </div>\n        </form>\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <button\n              type=\"button\"\n              onClick={clearStates}\n              className=\"btn btn-outline-secondary col\"\n              data-dismiss=\"modal\"\n            >\n              Limpar campos\n            </button>\n          </div>\n          <div className=\"form-froup col\">\n            <button\n              type=\"button\"\n              onClick={addNewClientSchedule}\n              className=\"btn btn-primary col\"\n            >\n              Adicionar\n            </button>\n          </div>\n        </div>\n\n        {alert}\n\n        {errorClientSchedule === true ? (\n          <AlertInfo title=\"Preencha os campos corretmente.\" />\n        ) : null}\n\n        {errorClientSchedule === false ? (\n          <AlertSuccess title=\"Horário adicionado com sucesso.\" />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ScheduleForm } from '../components/ScheduleForm';\n\nimport { useAddNewScheduleMutation, useGetClientsQuery } from '../api/ApiSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\nimport { TitlePage } from '../components/TitlePage';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function CreateSchedule() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [addNewSchedule, { isLoading: isLoadingNewSchedule }] =\n    useAddNewScheduleMutation();\n\n  const [client, setClient] = useState<string>('');\n  const [pacote, setPacote] = useState<boolean>(false);\n  const [qtdTotalAtendimento, setQtdTotalAtendimento] = useState<number | null>(\n    null,\n  );\n  const [procedure, setProcedure] = useState<string>('');\n  const [dateNewSchedule, setDateNewSchedule] = useState<string>('');\n  const [time, setTime] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [contact, setContact] = useState<string>('');\n\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const setDataClient = (params: { label: string; phone: string } | string) => {\n    if (!params) {\n      setClient('');\n      setContact('');\n      return;\n    }\n\n    if (typeof params === 'string') {\n      setClient(params);\n    }\n\n    if (typeof params !== 'string' && params.label && params.phone) {\n      setClient(params.label);\n      setContact(params.phone);\n      return;\n    }\n  };\n\n  const clearStates = () => {\n    setClient('');\n    setProcedure('');\n    setDateNewSchedule('');\n    setTime('');\n    setPrice('');\n    setContact('');\n    setPacote(false);\n    setQtdTotalAtendimento(null);\n    const buttonSelector = document.querySelector(\n      '#root > div.mains > div > div.card > div > div > form > div.mb-3 > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const formFieldsIsValids = (): boolean => {\n    if (!client.trim() || client.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente.\" />);\n      return false;\n    } else if (!procedure || procedure.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente.\" />);\n      return false;\n    } else if (!dateNewSchedule || dateNewSchedule.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n      return false;\n    } else if (!time || time.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha o horário corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const addNewClientSchedule = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    try {\n      await addNewSchedule({\n        client: client,\n        procedure: procedure,\n        date: dateNewSchedule,\n        time: time,\n        price: price,\n        contact: contact,\n        pacote: pacote,\n        qtdTotalAtendimento: qtdTotalAtendimento,\n      }).unwrap();\n      clearStates();\n      setAlert(<AlertSuccess title=\"Horário adicionado com sucesso.\" />);\n    } catch (err) {\n      if (err.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse horário já existe.\" />);\n        return;\n      }\n      if (err.status === HTTP_RESPONSE.BAD_REQUEST) {\n        setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  let content = null;\n  if (isLoadingGetClients || isLoadingNewSchedule) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb\n        page={[\n          { link: '/schedule', name: 'Agenda' },\n          { link: false, name: 'Nova Agenda' },\n        ]}\n      />\n      <TitlePage title=\"Nova Agenda\" />\n\n      <div className=\"card\">\n        <ScheduleForm\n          clientSaves={clients}\n          setDataClient={(e: React.BaseSyntheticEvent, item: any) =>\n            setDataClient(item)\n          }\n          client={client}\n          setClient={setClient}\n          procedure={procedure}\n          setProcedure={setProcedure}\n          dateNewSchedule={dateNewSchedule}\n          setDateNewSchedule={setDateNewSchedule}\n          time={time}\n          setTime={setTime}\n          contact={contact}\n          setContact={setContact}\n          clearStates={(e: React.BaseSyntheticEvent) => clearStates()}\n          edit={false}\n          addNewClientSchedule={(e: React.BaseSyntheticEvent) =>\n            addNewClientSchedule(e)\n          }\n          setPacoteFunc={(e: React.BaseSyntheticEvent, pacote: boolean) =>\n            setPacote(pacote)\n          }\n          pacote={pacote}\n          setQtdTotalAtendimentoFuncion={(\n            e: React.BaseSyntheticEvent,\n            qtd: number,\n          ) => setQtdTotalAtendimento(qtd)}\n          qtdTotalAtendimento={qtdTotalAtendimento}\n          alert={alert}\n        />\n      </div>\n    </div>\n  );\n}\n","import { ComboBox } from './ComboBox';\nimport { InputText } from './input/InputText';\nimport InputMask from 'react-input-mask';\nimport { useGetSegmentsQuery } from '../api/ApiSlice';\nimport { ISegment } from '../api/types/Segment';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  edit?: boolean;\n  clearStates: any;\n  name: string;\n  setName: any;\n  email: string;\n  setEmail: any;\n  phone: string;\n  setPhone: any;\n  setSegmentSelect: any;\n  segmentSelect: string;\n  onChangeClient: any;\n  alert: JSX.Element | null;\n};\n\nexport function FormClients(props: InputProps) {\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const {\n    edit,\n    clearStates,\n    name,\n    setName,\n    email,\n    setEmail,\n    phone,\n    setPhone,\n    setSegmentSelect,\n    segmentSelect,\n    onChangeClient,\n    alert,\n  } = props;\n\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        {edit ? (\n          <h5 className=\"modal-title\">Editar</h5>\n        ) : (\n          <h5 className=\"modal-title\">Criar</h5>\n        )}\n      </div>\n      <div className=\"modal-body\">\n        <form>\n          <LabelForm text=\"Nome *\" />\n\n          <InputText\n            type=\"text\"\n            className=\"mb-3\"\n            id=\"client\"\n            value={name}\n            onChange={(e: React.BaseSyntheticEvent) => setName(e.target.value)}\n            label=\"Digite o nome do cliente\"\n          />\n          <LabelForm text=\"E-mail\" />\n\n          <InputText\n            type=\"text\"\n            className=\"mb-2\"\n            id=\"procedure\"\n            value={email}\n            onChange={(e: React.BaseSyntheticEvent) => setEmail(e.target.value)}\n            label=\"Digite o email\"\n          />\n          <LabelForm text=\"Telefone *\" />\n\n          <InputMask\n            type=\"text\"\n            form=\"currency\"\n            className=\"form-control mb-2 p-3\"\n            value={phone}\n            id=\"contact\"\n            mask=\"(99) 9 9999-9999\"\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"(__) _ ____ - ____\"\n            required={true}\n          />\n          {segments && segments.length > 0 && (\n            <div>\n              <LabelForm text=\"Segmento\" />\n              <ComboBox\n                title=\"Selecionar Segmento\"\n                options={segments.map((item: ISegment) => item.segment)}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  setSegmentSelect(item)\n                }\n              />\n            </div>\n          )}\n\n          {segmentSelect && (\n            <div className=\"text-primary font-weight-bold ml-1 mt-3 mb-2\">\n              Selecionado:{' '}\n              <small className=\"text-muted h6 mb-3\">\n                {segmentSelect || 'Nenhum'}\n              </small>\n            </div>\n          )}\n          <div className=\"form-row mt-4\">\n            <div className=\"form-group col\">\n              <button\n                type=\"reset\"\n                onClick={clearStates}\n                className=\"btn btn-outline-secondary col\"\n                data-dismiss=\"modal\"\n                key={3}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button\n                type=\"button\"\n                onClick={onChangeClient}\n                className=\"btn btn-primary col\"\n                key={5}\n              >\n                Salvar\n              </button>\n            </div>\n          </div>\n          {alert}\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { FormClients } from '../components/FormClients';\nimport { TitlePage } from '../components/TitlePage';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { useAddNewClientMutation } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function CreateClient() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const [addNewClient, { isLoading }] = useAddNewClientMutation();\n\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [phone, setPhone] = useState<string>('');\n  const [segmentSelect, setSegmentSelect] = useState<string>('');\n\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const clearStates = () => {\n    setName('');\n    setEmail('');\n    setPhone('');\n    setSegmentSelect('');\n    const buttonSelector = document.querySelector(\n      '#root > div.container-main > div:nth-child(3) > div > div.modal-body > form > div:nth-child(7) > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const formFieldsIsValids = (): boolean => {\n    if (!name.trim() || name.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o nome corretamente.\" />);\n      return false;\n    } else if (!phone || phone.length > 20) {\n      setAlert(<AlertInfo title=\"Preencha o telefone corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const onSaveClient = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const segmentSelected = segmentSelect ? segmentSelect : null;\n\n    try {\n      await addNewClient({\n        name: name.trim(),\n        email: email.trim(),\n        phone: phone,\n        segment: segmentSelected,\n      }).unwrap();\n      clearStates();\n      setAlert(<AlertSuccess title=\"Cliente adicionado com sucesso.\" />);\n    } catch (err) {\n      if (err.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse cliente já existe.\" />);\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  let loader = null;\n  if (isLoading) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb\n        page={[\n          { link: '/client', name: 'Clientes' },\n          { link: false, name: 'Novo Clientes' },\n        ]}\n      />\n\n      <TitlePage title=\"Novo Cliente\" />\n\n      <div>\n        <FormClients\n          clearStates={clearStates}\n          name={name}\n          setName={setName}\n          email={email}\n          setEmail={setEmail}\n          phone={phone}\n          setPhone={setPhone}\n          setSegmentSelect={setSegmentSelect}\n          segmentSelect={segmentSelect ?? ''}\n          onChangeClient={onSaveClient}\n          alert={alert as JSX.Element}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n\nexport function ComeBack() {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className=\"btn btn-outline-primary p-2 mb-4 d-flex flex-row align-items-center\"\n      onClick={() => navigate(-1)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-arrow-left-circle mr-2\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\n      </svg>\n      Voltar\n    </button>\n  );\n}\n","import { CircularIndeterminate } from '../components/LoaderCircular';\nimport { FormClients } from '../components/FormClients';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { ComeBack } from '../components/ComeBack';\n\nimport { useGetClientsQuery, useUpdateClientMutation } from '../api/ApiSlice';\nimport { IClient } from '../api/types/Client';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { TIMEOUT } from '../utils/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { ReducerStore } from '../app/store';\n\nexport function EditClient() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const { clientId } = useParams();\n\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const editClient = clients.find((client: IClient) => client.id === clientId);\n\n  const [\n    updateClient,\n    { isLoading: isLoadingUpdate, isSuccess: isSuccessUpdate },\n  ] = useUpdateClientMutation();\n\n  if (!editClient) {\n    navigate(-1);\n  }\n\n  const [name, setName] = useState<string>(editClient ? editClient.name : '');\n  const [email, setEmail] = useState<string>(\n    editClient ? editClient.email : '',\n  );\n  const [phone, setPhone] = useState<string>(\n    editClient ? editClient.phone : '',\n  );\n  const [segmentSelect, setSegmentSelect] = useState<string | null>(\n    editClient ? editClient.segment : null,\n  );\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const clearStates = () => {\n    setName('');\n    setEmail('');\n    setPhone('');\n    setSegmentSelect(null);\n  };\n\n  const onUpdateClient = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const emailField = email ? email.trim() : null;\n\n    try {\n      await updateClient({\n        id: editClient.id,\n        name: name.trim(),\n        email: emailField,\n        phone: phone.trim(),\n        segment: segmentSelect,\n      }).unwrap();\n      clearStates();\n      setTimeout(() => navigate(-1), 1000);\n    } catch (err) {\n      setAlert(<AlertError title=\"Não foi possivel editar o cliente\" />);\n    }\n  };\n\n  let loader;\n  if (isLoadingUpdate || isLoadingGetClients) {\n    loader = <CircularIndeterminate />;\n  } else if (isSuccessUpdate) {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <section className=\"container-main\">\n      {loader}\n\n      <ComeBack />\n\n      <FormClients\n        edit={true}\n        clearStates={clearStates}\n        name={name}\n        setName={setName}\n        email={email}\n        setEmail={setEmail}\n        phone={phone}\n        setPhone={setPhone}\n        setSegmentSelect={setSegmentSelect}\n        segmentSelect={segmentSelect as string}\n        onChangeClient={onUpdateClient}\n        alert={alert}\n      />\n    </section>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst scheduleService = {\n  async getClientsSchedule(token: string, date: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/date`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { date: date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async addClientSchedule(\n    token: string,\n    client: string,\n    procedure: string,\n    date: string,\n    time: string,\n    contact: string,\n    pacote: boolean,\n    qtdTotalAtendimento: number,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/new`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            client: client,\n            procedure: procedure,\n            date: date,\n            time: time,\n            contact: contact,\n            pacote: pacote || null,\n            qtdTotalAtendimento: qtdTotalAtendimento,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async updateClientSchedule(\n    token: string,\n    id: string,\n    client: string,\n    procedure: string,\n    date: string,\n    time: string,\n    contact: string,\n    pacote: boolean,\n    qtdTotalAtendimento: number,\n    qtdAtendimento: number,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/update`;\n    try {\n      const { data, status } = await axios\n        .put(\n          URL,\n          {\n            id: id,\n            client: client,\n            procedure: procedure,\n            date: date,\n            time: time,\n            contact: contact,\n            pacote: pacote,\n            qtdTotalAtendimento: qtdTotalAtendimento,\n            qtdAtendimento,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async deleteClientSchedule(token: string, id: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule`;\n    try {\n      const { data, status } = await axios\n        .delete(URL, {\n          params: { id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async finishClientSchedule(token: string, id: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/finish`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            id: id,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getAllExpiredSchedules(token: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/expireds`;\n\n    try {\n      const { data, status } = await axios\n        .get(URL, { headers: { authorization: token } })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getScheduleByClient(token: string, client: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/client`;\n\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { client },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { scheduleService };\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { scheduleService } from '../services/scheduleService';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { ComeBack } from '../components/ComeBack';\nimport { ScheduleForm } from '../components/ScheduleForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function EditScheduleForm() {\n  let navigate = useNavigate();\n  const { scheduleId } = useParams();\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const schedule = useSelector((state: ReducerStore) => state.schedule);\n\n  const [pacote, setPacote] = useState<boolean>(schedule.pacote);\n  const [client, setClient] = useState<string>(schedule.client);\n  const [qtdTotalAtendimento, setQtdTotalAtendimento] = useState<number | null>(\n    schedule.qtdTotalAtendimento,\n  );\n  const [procedure, setProcedure] = useState<string>(schedule.procedure);\n  const [dateNewSchedule, setDateNewSchedule] = useState<string>(schedule.date);\n  const [time, setTime] = useState<string>(schedule.time);\n  const [contact, setContact] = useState<string>(schedule.phone);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    if (!schedule.id) {\n      navigate(-1);\n    }\n  }, [auth, navigate, schedule.id, dispatch]);\n\n  const clearStates = () => {\n    setClient('');\n    setProcedure('');\n    setDateNewSchedule('');\n    setTime('');\n    setContact('');\n    setPacote(false);\n    setQtdTotalAtendimento(null);\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card > div > div > form > div.mb-3 > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const onChangeSchedule = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const request = await scheduleService.updateClientSchedule(\n      auth.token,\n      scheduleId as string,\n      client,\n      procedure,\n      dateNewSchedule,\n      time,\n      contact,\n      pacote as boolean,\n      qtdTotalAtendimento as number,\n      schedule.qtdAtendimento,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setAlert(<AlertSuccess title=\"Horário atualizado com sucesso.\" />);\n      setTimeout(() => navigate(-1), 1000);\n    }\n\n    if (\n      request.status === HTTP_RESPONSE.BAD_REQUEST ||\n      request.status === HTTP_RESPONSE.ERROR ||\n      !request.status\n    ) {\n      setAlert(<AlertError title=\"Erro ao atualizar o horário\" />);\n    }\n  };\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      <ComeBack />\n\n      <div className=\"card\">\n        <ScheduleForm\n          setDataClient={(client: string) => setClient(client)}\n          client={client}\n          setClient={setClient}\n          procedure={procedure}\n          setProcedure={setProcedure}\n          dateNewSchedule={dateNewSchedule}\n          setDateNewSchedule={setDateNewSchedule}\n          time={time}\n          setTime={setTime}\n          contact={contact}\n          setContact={setContact}\n          clearStates={(e: React.BaseSyntheticEvent) => clearStates()}\n          edit={true}\n          addNewClientSchedule={(e: React.BaseSyntheticEvent) =>\n            onChangeSchedule(e)\n          }\n          setPacoteFunc={(e: React.BaseSyntheticEvent, pacote: boolean) =>\n            setPacote(pacote)\n          }\n          pacote={pacote}\n          setQtdTotalAtendimentoFuncion={(\n            e: React.BaseSyntheticEvent,\n            qtd: number,\n          ) => setQtdTotalAtendimento(qtd)}\n          qtdTotalAtendimento={qtdTotalAtendimento}\n          alert={alert}\n        />\n      </div>\n    </div>\n  );\n}\n","import '../css/main.css';\n\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { WhatsAppService } from '../services/whatsapp-service';\nimport { ReducerStore } from '../app/store';\n\nimport { Breadcumb } from '../components/Breadcumb';\nimport { TitlePage } from '../components/TitlePage';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Home() {\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    const navbar = document.querySelector('#navbarresponsive') as HTMLElement;\n    if (navbar) navbar.style.display = 'flex';\n  }, [auth, navigate, dispatch]);\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb page={[]} />\n\n      <TitlePage title={`Olá, ${auth ? auth.userName : 'Seja Bem Vindo'}!`} />\n      <p>\n        Este é o <strong>ARV - Controll &copy;</strong>, um Sistema de\n        Gerenciamento para sua empresa.\n      </p>\n      <p>\n        O sistema é focado na simplicidade e acessibilidade, podendo ser\n        utilizado pelo computador ou pelo celular, sem perda de desempenho ou\n        produtividade.\n      </p>\n      <div className=\"container mt-5 mb-5\">\n        <h5 className=\"title-page\">Ajuda</h5>\n        <p>\n          Caso precise de ajuda ou queira tirar dúvidas sobre o sistema, entre\n          em contato com o desenvolvedor.\n        </p>\n        <button\n          type=\"button\"\n          onClick={(e) => WhatsAppService.redirectToWhatsapp(e, '35999554534')}\n          className=\"btn btn-success col\"\n        >\n          Entrar em contato\n        </button>\n      </div>\n      <p className=\"mt-5 mb-3 text-muted text-center\">\n        ARV - Controll &copy; 2022\n      </p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/raise-value.8b5f05a9.png\";","import '../css/main.css';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport logo from '../img/raise-value.png';\n\nimport { authService } from '../services/authService';\nimport { loginAdded } from '../reducers/authenticatedSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\n\nfunction LoginPage() {\n  const [user, setUser] = useState<string>('');\n  const [password, setPassword] = useState({\n    password: '',\n    showPassword: false,\n  });\n  const [credentials, setCredentials] = useState<boolean | null>(null);\n  const [serverError, setServerError] = useState<boolean | null>(null);\n\n  const [loadFetchClient, setLoadFetchClient] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    const navbar = document.querySelector('#navbarresponsive') as HTMLElement;\n    if (navbar) navbar.style.display = 'none';\n  }, []);\n\n  let loader = null;\n  if (loadFetchClient) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  const saveLoginUser = (login: { token: string; refreshToken: string }) => {\n    dispatch(\n      loginAdded({ token: login.token, refreshToken: login.refreshToken }),\n    );\n    navigate('/home', { replace: true });\n    setLoadFetchClient(false);\n  };\n\n  const login = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setLoadFetchClient(true);\n\n    const request = await authService.sendLogin(\n      user.trim(),\n      password.password.trim(),\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      saveLoginUser(request.data);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n\n    if (request.status === HTTP_RESPONSE.UNAUTHORIZED) {\n      setCredentials(false);\n    }\n\n    setLoadFetchClient(false);\n  };\n\n  if (credentials === false) {\n    setTimeout(() => setCredentials(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError === true) {\n    setTimeout(() => setServerError(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  const handlePasswordChange =\n    (prop: any) => (event: React.BaseSyntheticEvent) => {\n      event.preventDefault();\n      setPassword({ ...password, [prop]: event.target.value });\n    };\n\n  return (\n    <div className=\"login_container\">\n      {loader}\n      <div className=\"text-center pt-5\">\n        <img className=\"img-logo\" alt=\"logo_raise_value\" src={logo}></img>\n      </div>\n      <div className=\"form-login\">\n        <div className=\"card-body card-login\">\n          <form onSubmit={login}>\n            <div className=\"text-center\">\n              <h2 className=\"text-center\">Faça seu Login</h2>\n              <p className=\"text-primary font-weight-bold\">\n                Seja Bem-Vindo!\n                <small className=\"form-text text-muted mb-2\">\n                  Faça Login para entrar no sistema.\n                </small>\n              </p>\n            </div>\n            <div className=\"form-group\">\n              <LabelForm text=\"Usuário\" />\n\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={user}\n                  onChange={(e) => setUser(e.target.value)}\n                  id=\"name\"\n                  placeholder=\"Digite o nome do usuário\"\n                  required={true}\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <LabelForm text=\"Senha\" />\n\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-key\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\" />\n                      <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\n                    </svg>\n                  </div>\n                </div>\n                <input\n                  type={password.showPassword ? 'text' : 'password'}\n                  className=\"form-control\"\n                  value={password.password}\n                  onChange={handlePasswordChange('password')}\n                  id=\"password\"\n                  placeholder=\"Digite a senha\"\n                  required={true}\n                />\n                <div className=\"input-group-append\">\n                  <IconButton\n                    onClick={(e) =>\n                      setPassword({\n                        ...password,\n                        showPassword: !password.showPassword,\n                      })\n                    }\n                    onMouseDown={(e) => e.preventDefault()}\n                    className=\"input-group-text\"\n                  >\n                    {password.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-entrar mt-4 p-2\"\n            >\n              Entrar\n            </button>\n          </form>\n          <div className=\"credentials\">\n            {credentials === false ? (\n              <AlertError title=\"Usuário ou senha incorretos!\" />\n            ) : null}\n            {serverError === true ? (\n              <AlertError title=\"Erro ao processar sua requisição.\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <p className=\"mt-5 mb-3 text-muted text-center\">\n        ARV - Controll &copy; 2022\n      </p>\n    </div>\n  );\n}\n\nexport { LoginPage };\n","function mask(\n  value: number | string,\n  precision = 2,\n  decimalSeparator = '.',\n  thousandSeparator = ',',\n  allowNegative = false,\n  prefix = '',\n  suffix = '',\n) {\n  // Set value empty\n  if (value === 'NaN') {\n    return {\n      value: '',\n      maskedValue: '',\n    };\n  }\n\n  // provide some default values and arg validation.\n  if (precision < 0) {\n    precision = 0;\n  } // precision cannot be negative\n  if (precision > 20) {\n    precision = 20;\n  } // precision cannot be greater than 20\n\n  if (value === null || value === undefined) {\n    return {\n      value: 0,\n      maskedValue: '',\n    };\n  }\n\n  value = String(value); //if the given value is a Number, let's convert into String to manipulate that\n\n  if (value.length === 0) {\n    return {\n      value: 0,\n      maskedValue: '',\n    };\n  }\n\n  // extract digits. if no digits, fill in a zero.\n  let digits = value.match(/\\d/g) || ['0'];\n\n  let numberIsNegative = false;\n  if (allowNegative) {\n    let negativeSignCount = (value.match(/-/g) || []).length;\n    // number will be negative if we have an odd number of \"-\"\n    // ideally, we should only ever have 0, 1 or 2 (positive number, making a number negative\n    // and making a negative number positive, respectively)\n    numberIsNegative = negativeSignCount % 2 === 1;\n\n    // if every digit in the array is '0', then the number should never be negative\n    let allDigitsAreZero = true;\n    for (let idx = 0; idx < digits.length; idx += 1) {\n      if (digits[idx] !== '0') {\n        allDigitsAreZero = false;\n        break;\n      }\n    }\n    if (allDigitsAreZero) {\n      numberIsNegative = false;\n    }\n  }\n\n  // zero-pad a input\n  while (digits.length <= precision) {\n    digits.unshift('0');\n  }\n\n  if (precision > 0) {\n    // add the decimal separator\n    digits.splice(digits.length - precision, 0, '.');\n  }\n\n  // clean up extraneous digits like leading zeros.\n  digits = Number(digits.join('')).toFixed(precision).split('');\n  let raw = Number(digits.join(''));\n\n  let decimalpos = digits.length - precision - 1; // -1 needed to position the decimal separator before the digits.\n  if (precision > 0) {\n    // set the final decimal separator\n    digits[decimalpos] = decimalSeparator;\n  } else {\n    // when precision is 0, there is no decimal separator.\n    decimalpos = digits.length;\n  }\n\n  // add in any thousand separators\n  for (let x = decimalpos - 3; x > 0; x = x - 3) {\n    digits.splice(x, 0, thousandSeparator);\n  }\n\n  // if we have a prefix or suffix, add them in.\n  if (prefix.length > 0) {\n    digits.unshift(prefix);\n  }\n  if (suffix.length > 0) {\n    digits.push(suffix);\n  }\n\n  // if the number is negative, insert a \"-\" to\n  // the front of the array and negate the raw value\n  if (allowNegative && numberIsNegative) {\n    digits.unshift('-');\n    raw = -raw;\n  }\n\n  return {\n    value: raw,\n    maskedValue: digits.join('').trim(),\n  };\n}\n\nexport { mask };\n","import axios from 'axios';\nimport moment from 'moment';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst salesService = {\n  async getSalesToday(token: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/today`;\n    const date = moment(new Date()).format('YYYY-MM-DD');\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { date: date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesInPeriod(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/period`;\n    let date1Valid = date1;\n    if (!date1) {\n      date1Valid = moment(new Date()).format('YYYY-MM-DD');\n    }\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: {\n            date1: date1Valid,\n            date2: date2,\n          },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesInPeriodByClients(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/period-clients`;\n    try {\n      const { data } = await axios.post(URL, {\n        id_user: token,\n        date1: date1,\n        date2: date2,\n      });\n      return data;\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesByClients(token: string, client: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/clients`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async newSale(\n    token: string,\n    description: string,\n    client: string,\n    price: string,\n    date: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/new`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            description: description,\n            client: client,\n            price: price,\n            date: date,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  countTotalValueSales(sales: { price: string }[]) {\n    return sales\n      .filter((item) => !!item)\n      .map(\n        (item) => parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n      )\n      .reduce((acc, item) => acc + item, 0)\n      .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n  },\n\n  async getSalesByAllFilters(\n    token: string,\n    client: string,\n    date1: string,\n    date2: string | null,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/all-filters`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client, date1, date2 },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { salesService };\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { mask } from '../services/maskMoney';\nimport { salesService } from '../services/salesService';\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { IClient } from '../api/types/Client';\nimport { ComboBox } from '../components/ComboBox';\nimport { InputText } from '../components/input/InputText';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nexport function NewSale() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [clientName, setClientName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [saleRegisterSuccess, setSaleRegisterSuccess] =\n    useState<boolean>(false);\n  const [saleRegisterFail, setSaleRegisterFail] = useState<boolean>(false);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const formFieldsIsValids = (): boolean => {\n    if (!clientName.trim() || clientName.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente\" />);\n      return false;\n    } else if (!description || description.length > 100) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente\" />);\n      return false;\n    } else if (!price || price.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha o preço corretamente\" />);\n      return false;\n    } else if (!date || date.length > 10) {\n      setAlert(<AlertInfo title=\"Preencha a data corretamente\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const saveSale = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const request = await salesService.newSale(\n      auth.token,\n      description,\n      clientName ? clientName.trim() : '',\n      price,\n      date as string,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setClientName('');\n      setDescription('');\n      setPrice('');\n      setDate('');\n      setSaleRegisterSuccess(true);\n      clearFields(event);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setDescription('');\n    setPrice('');\n    setDate('');\n    setClientName('');\n    const selectClientButton = document.querySelector(\n      '#root > div.container-main > form > div > div.form-group.mb-2 > div > div > div > div > button',\n    ) as HTMLElement;\n    if (selectClientButton) selectClientButton.click();\n  };\n\n  if (saleRegisterSuccess) {\n    setTimeout(() => setSaleRegisterSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (saleRegisterFail) {\n    setTimeout(() => setSaleRegisterFail(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let loader;\n  if (isLoadingGetClients) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb\n        page={[\n          { link: '/sales', name: 'Vendas' },\n          { link: false, name: 'Nova Venda' },\n        ]}\n      />\n      <TitlePage title=\"Registrar Nova Venda\" />\n\n      <form onSubmit={saveSale} className=\"form-sale\">\n        <div className=\"card p-3\">\n          <div className=\"form-group mb-2\">\n            <LabelForm text=\"Cliente\" />\n\n            {clients ? (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={clients.map((item: IClient) => item.name)}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setClientName('');\n                    return;\n                  }\n                  setClientName(item);\n                }}\n              />\n            ) : (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setClientName('');\n                    return;\n                  }\n                  setClientName(item);\n                }}\n              />\n            )}\n          </div>\n\n          <LabelForm text=\"Descrição *\" />\n\n          <InputText\n            id=\"name\"\n            label=\"Digite a descrição\"\n            value={description}\n            variant=\"outlined\"\n            onChange={(e: React.BaseSyntheticEvent) =>\n              setDescription(e.target.value)\n            }\n          />\n\n          <div className=\"form-row mt-2\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Preço *\" />\n\n              <InputText\n                id=\"price\"\n                label=\"Digite o preço\"\n                value={price}\n                variant=\"outlined\"\n                onChange={(ev: React.BaseSyntheticEvent) => {\n                  let val = ev.target.value;\n                  const { maskedValue } = mask(val, 2, ',', '.', false, 'R$');\n                  setPrice(maskedValue);\n                }}\n              />\n            </div>\n\n            <div className=\"form-group col\">\n              <LabelForm text=\"Data *\" />\n\n              <InputText\n                type={'date'}\n                label=\" \"\n                value={date}\n                id=\"date\"\n                variant=\"outlined\"\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setDate(e.target.value)\n                }\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-secondary btn-entrar mt-4 p-2\"\n                onClick={(e) => clearFields(e)}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-entrar mt-4 p-2\"\n              >\n                Salvar\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            {saleRegisterSuccess === true && (\n              <AlertSuccess title=\"Venda registrada com sucesso.\" />\n            )}\n            {saleRegisterFail === true && (\n              <AlertError title=\"Erro ao registrar a venda.\" />\n            )}\n            {serverError === true && (\n              <AlertError title=\"Não foi possível processar a requisição.\" />\n            )}\n            {alert}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst clientService = {\n  async newClient(\n    token: string,\n    name: string,\n    email: string,\n    phone: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/create`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URI,\n          {\n            name: name,\n            email: email,\n            phone: phone,\n            segment: segment,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async updateClient(\n    token: string,\n    id: string,\n    name: string,\n    email: string,\n    phone: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/update`;\n    try {\n      const { data, status } = await axios\n        .put(\n          URI,\n          {\n            id: id,\n            name: name,\n            email: email,\n            phone: phone,\n            segment: segment,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findClient(token: string, id: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/load`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { id: id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findAllClient(token: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/all`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findAllClientBySegment(\n    token: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/segment`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { segment: segment },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async deleteClient(token: string, id: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client`;\n    try {\n      const { data, status } = await axios\n        .delete(URI, {\n          params: { id: id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { clientService };\n","import { randomId } from '../utils/random';\nimport { ISales } from '../api/types/Sales';\n\ntype InputProps = {\n  sales: ISales[];\n  title: string;\n};\n\nexport function CardSales(props: InputProps) {\n  const { sales, title } = props;\n\n  const nameClient = [\n    ...new Set(\n      sales.filter((item) => !!item.client).map((item) => item.client),\n    ),\n  ].map((item) => {\n    return (\n      <div className=\"d-inline-block pr-2\" key={randomId()}>\n        {item},\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"card border-bottom p-2 mb-3\" key={randomId()}>\n      <div className=\"card-header\">\n        <h6 className=\"font-weight-bold pt-2\">{title}</h6>\n      </div>\n      <div className=\"card-body border mt-2\">\n        <h6 className=\"card-subtitle text-primary pt-2 font-weight-bold pb-3 border-bottom\">\n          Ganhos:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .reduce((acc, item) => acc + item, 0)\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Vendas: <small className=\"text-muted h6 mb-3\">{sales.length}</small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Média por venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {Math.round(\n              sales\n                .filter((item) => !!item)\n                .map(\n                  (item) =>\n                    parseInt(item.price.substring(2).replace(/\\.|,/g, '')) /\n                    100,\n                )\n                .reduce((acc, item) => acc + item, 0) / sales.length,\n            ).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Maior venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .sort((a, b) => b - a)[0]\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Menor venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .sort((a, b) => a - b)[0]\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-2 mt-3\">\n          Clientes atendidos:\n        </h6>\n        <small className=\"text-muted h6 mb-3\">{nameClient}</small>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-4 pb-2 mt-3 border-top\">\n          Número de clientes atendidos:{' '}\n          <small className=\"text-muted h6 mb-3\">{nameClient.length}</small>\n        </h6>\n      </div>\n    </div>\n  );\n}\n","import { randomId } from '../utils/random';\nimport { ISales } from '../api/types/Sales';\n\ntype InputProps = {\n  sales: ISales[];\n};\n\nexport function TableSales(props: InputProps) {\n  const { sales } = props;\n\n  return (\n    <div className=\"table-responsive-sm\">\n      <table className=\"table table-bordered mt-3\">\n        <thead className=\"thead-dark header-table\">\n          <tr>\n            <th>Cliente</th>\n            <th>Descrição</th>\n            <th>Data</th>\n            <th>Preço</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sales.map((item) => {\n            return (\n              <tr key={randomId()}>\n                <td className=\"row-table\">{item.client}</td>\n                <td className=\"row-table\">{item.description}</td>\n                <td className=\"row-table\">\n                  {new Date(item.date).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                </td>\n                <td className=\"row-table\">{item.price}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { clientService } from '../services/clientService';\nimport { salesService } from '../services/salesService';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CardSales } from '../components/CardSales';\nimport { ClearFields } from '../components/Buttons';\nimport { ComboBox } from '../components/ComboBox';\nimport { TableSales } from '../components/TableSales';\nimport { TitlePage } from '../components/TitlePage';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { IClient } from '../api/types/Client';\nimport { ISales } from '../api/types/Sales';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Reports() {\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  let navigate = useNavigate();\n\n  const [clientSaves, setClientSaves] = useState<any>([]);\n  const [salesForClient, setSalesForClient] = useState<ISales[]>([]);\n  const [segment, setSegment] = useState('');\n  const [emptySale, setEmptySale] = useState<boolean | null>(null);\n  const [serverError, setServerError] = useState<any>(false);\n  const [salesLastWeek, setSalesLastWeek] = useState([]);\n  const [salesActualtWeek, setSalesActualWeek] = useState([]);\n  const [salesLastMonth, setSalesLastMonth] = useState([]);\n  const [salesActualMonth, setSalesActualMonth] = useState([]);\n  const [clearTableSalesForClient, setClearTableSalesForClient] =\n    useState<any>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n\n    let isMounted = true;\n\n    Promise.all([getClients(), getSalesWeek(), getSaleMonth()]);\n\n    async function getClients() {\n      const request = await clientService.findAllClient(auth.token);\n\n      if (!request.status) return;\n\n      if (request.status === HTTP_RESPONSE.ERROR) {\n        return;\n      }\n\n      if (isMounted) setClientSaves(request.data);\n    }\n\n    async function getSalesWeek() {\n      const primaryDateLastWeek = moment()\n        .subtract(7, 'day')\n        .day(0)\n        .format('YYYY-MM-DD');\n      const lastDateLastWeek = moment()\n        .subtract(7, 'day')\n        .day(6)\n        .format('YYYY-MM-DD');\n\n      const primaryDateWeek = moment().day(0).format('YYYY-MM-DD');\n      const lastDateWeek = moment().day(6).format('YYYY-MM-DD');\n\n      const getSalesLastWeek = await salesService.getSalesInPeriod(\n        auth.token,\n        primaryDateLastWeek,\n        lastDateLastWeek,\n      );\n      const getSalesActualWeek = await salesService.getSalesInPeriod(\n        auth.token,\n        primaryDateWeek,\n        lastDateWeek,\n      );\n\n      if (!getSalesLastWeek.status || !getSalesActualWeek.status) return;\n\n      if (\n        getSalesLastWeek.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesLastWeek.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesLastWeek([]);\n      }\n\n      if (\n        getSalesActualWeek.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesActualWeek.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesActualWeek([]);\n      }\n\n      if (isMounted) setSalesLastWeek(getSalesLastWeek.data);\n      if (isMounted) setSalesActualWeek(getSalesActualWeek.data);\n    }\n\n    async function getSaleMonth() {\n      const dateStartLastMonth = moment()\n        .subtract(1, 'month')\n        .startOf('month')\n        .format('YYYY-MM-DD');\n      const dateEndLastMonth = moment()\n        .subtract(1, 'month')\n        .endOf('month')\n        .format('YYYY-MM-DD');\n\n      const dateStartActualMonth = moment()\n        .startOf('month')\n        .format('YYYY-MM-DD');\n      const dateEndActualMonth = moment().endOf('month').format('YYYY-MM-DD');\n\n      const getSalesLastMonth = await salesService.getSalesInPeriod(\n        auth.token,\n        dateStartLastMonth,\n        dateEndLastMonth,\n      );\n      const getSalesActualMonth = await salesService.getSalesInPeriod(\n        auth.token,\n        dateStartActualMonth,\n        dateEndActualMonth,\n      );\n\n      if (!getSalesLastMonth.status || !getSalesActualMonth.status) return;\n\n      if (\n        getSalesLastMonth.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesLastMonth.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesLastMonth([]);\n      }\n\n      if (\n        getSalesActualMonth.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesActualMonth.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesActualMonth([]);\n      }\n\n      if (isMounted) setSalesLastMonth(getSalesLastMonth.data);\n      if (isMounted) setSalesActualMonth(getSalesActualMonth.data);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [auth.token, auth, navigate, dispatch]);\n\n  const reportClientInfo = async (\n    event: React.BaseSyntheticEvent,\n    params: any,\n  ) => {\n    event.preventDefault();\n\n    if (!params) return;\n\n    const request = await salesService.getSalesByClients(\n      auth.token,\n      params.label.trim(),\n    );\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setEmptySale(true);\n      setSalesForClient([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR) {\n      setServerError(true);\n      setSalesForClient([]);\n      return;\n    }\n\n    setSegment('');\n    if (params.segment) {\n      setSegment(params.segment);\n    }\n\n    setSalesForClient(request.data);\n  };\n\n  const clearSalesForClient = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setSalesForClient([]);\n    setClearTableSalesForClient(true);\n  };\n\n  if (emptySale) {\n    setTimeout(() => setEmptySale(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => serverError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearTableSalesForClient) {\n    setTimeout(() => setClearTableSalesForClient(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb\n        page={[\n          { link: '/sales', name: 'Vendas' },\n          { link: false, name: 'Relatórios' },\n        ]}\n      />\n\n      <TitlePage title=\"Relatórios\" />\n\n      <div className=\"mb-3 pb-2\">\n        <div className=\"card p-2 shadow-sm bg-white rounded\">\n          <h6 className=\" card-header p-3 text-primary font-weight-bold\">\n            Visualizar vendas por cliente\n          </h6>\n          <div className=\"mt-3\">\n            {clientSaves !== null && clientSaves.length > 0 ? (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={clientSaves.map((item: IClient) => ({\n                  label: item.name,\n                  segment: item.segment,\n                }))}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  reportClientInfo(e, item)\n                }\n              />\n            ) : (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  reportClientInfo(e, item)\n                }\n              />\n            )}\n            <small className=\"text-muted\">\n              Selecionar um cliente que você tem salvo\n            </small>\n          </div>\n        </div>\n\n        {salesForClient.length > 0 ? (\n          <div className=\"pt-2\">\n            <ClearFields\n              title=\"Limpar Pesquisa\"\n              callback={clearSalesForClient}\n            />\n\n            <TableSales sales={salesForClient} />\n\n            <div className=\"card p-2 mt-3\">\n              <div className=\"card-header\">\n                <h6 className=\"font-weight-bold pt-2\">Dados do cliente</h6>\n              </div>\n              <div className=\"card-body border mt-2\">\n                <h6 className=\"card-subtitle text-primary pt-2 font-weight-bold pb-3 border-bottom\">\n                  Primeira venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {new Date(\n                      salesForClient\n                        .map((item: ISales) => item.date)\n                        .sort((a, b) => parseInt(b) - parseInt(a))[0],\n                    ).toLocaleDateString('pt-BR', { timeZone: 'UTC' })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Última venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {new Date(\n                      salesForClient\n                        .map((item: ISales) => item.date)\n                        .sort((a, b) => parseInt(a[1]) - parseInt(b))[0],\n                    ).toLocaleDateString('pt-BR', { timeZone: 'UTC' })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Gasto total:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item: ISales) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .reduce((acc, item) => acc + item, 0)\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Gasto médio:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {Math.round(\n                      salesForClient\n                        .filter((item) => !!item)\n                        .map(\n                          (item) =>\n                            parseInt(\n                              item.price.substring(2).replace(/\\.|,/g, ''),\n                            ) / 100,\n                        )\n                        .reduce((acc, item) => acc + item, 0) /\n                        salesForClient.length,\n                    ).toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Maior venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .sort((a, b) => b - a)[0]\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Menor venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .sort((a, b) => a - b)[0]\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Qtd de vendas:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient.length}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 mt-3 \">\n                  Já fez pacote:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient.filter((item) => item.price === 'R$80,00')\n                      .length > 0\n                      ? 'Sim'\n                      : 'Não'}\n                  </small>\n                </h6>\n                {segment ? (\n                  <h6 className=\"card-subtitle text-primary font-weight-bold pt-3 mt-3 border-top\">\n                    Segmento:{' '}\n                    <small className=\"text-muted h6 mb-3\">{segment}</small>\n                  </h6>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        ) : null}\n\n        {emptySale === true && (\n          <AlertError title=\"Nenhuma venda encontrada com esse cliente.\" />\n        )}\n        {serverError === true && (\n          <AlertError title=\"Erro ao processar a requisição.\" />\n        )}\n        {clearTableSalesForClient === true && (\n          <AlertSuccess title=\"A pesquisa foi limpa.\" />\n        )}\n      </div>\n      <div className=\"accordion mb-3\" id=\"accordionWeek\">\n        <div className=\"card border p-2\">\n          <HeaderModal title=\"Relatório Semanal\" idCollapse=\"collapseOne\" />\n          <div\n            className=\"card-body p-2 collapse\"\n            id=\"collapseOne\"\n            aria-labelledby=\"headingOne\"\n            data-parent=\"#accordionWeek\"\n          >\n            {salesLastWeek.length > 0 ? (\n              <CardSales\n                sales={salesLastWeek}\n                title=\"Vendas da última semana\"\n              />\n            ) : null}\n            {salesActualtWeek.length > 0 ? (\n              <CardSales sales={salesActualtWeek} title=\"Vendas dessa semana\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <div className=\"accordion\" id=\"accordionMonth\">\n        <div className=\"card border p-2\">\n          <HeaderModal title=\"Relatório Mensal\" idCollapse=\"collapseTwo\" />\n          {/* <div\n            className=\"card-header mb-2\"\n            id=\"headingOne\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapseTwo\"\n            aria-expanded=\"true\"\n            aria-controls=\"collapseTwo\"\n          >\n            <h6 className=\"pt-2 text-primary font-weight-bold\">\n              Relatório Mensal\n            </h6>\n          </div> */}\n          <div\n            className=\"card-body p-2 collapse\"\n            id=\"collapseTwo\"\n            aria-labelledby=\"headingOne\"\n            data-parent=\"#accordionMonth\"\n          >\n            {salesLastMonth.length > 0 ? (\n              <CardSales sales={salesLastMonth} title=\"Vendas do último mês\" />\n            ) : null}\n            {salesActualMonth.length > 0 ? (\n              <CardSales sales={salesActualMonth} title=\"Vendas desse mês\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction HeaderModal(props: { title: any; idCollapse: any }) {\n  const { title, idCollapse } = props;\n  return (\n    <div className=\"card-header\">\n      <div\n        className=\"form-row\"\n        id=\"headingOne\"\n        data-toggle=\"collapse\"\n        data-target={`#${idCollapse}`}\n        aria-expanded=\"true\"\n        aria-controls={idCollapse}\n      >\n        <h6 className=\"pt-2 text-primary font-weight-bold col\">{title}</h6>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"30\"\n          height=\"30\"\n          fill=\"#0d6efd\"\n          className=\"bi bi-arrows-angle-expand col-end\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707z\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n}\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { salesService } from '../services/salesService';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\nimport { ISales } from '../api/types/Sales';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { TableSales } from '../components/TableSales';\nimport { TitlePage } from '../components/TitlePage';\nimport { SelectPeriod } from '../components/SelectPeriod';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Sales() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [date1, setDate1] = useState<string>('');\n  const [date2, setDate2] = useState<string | null>('');\n  const [sales, setSales] = useState<ISales[]>([]);\n  const [salesTodayNotFound, setSalesTodayNotFound] = useState<boolean>(false);\n\n  const [fetchSalesSuccess, setFetchSalesSuccess] = useState<boolean>(false);\n\n  const [clearFields, setClearFields] = useState<boolean>(false);\n\n  const [salesNotFound, setSalesNotFound] = useState<boolean>(false);\n  const [serverError, setServerError] = useState<boolean>(false);\n\n  const [clientSelected, setClientSelected] = useState<string | null>(null);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n  const [loaderSales, setloaderSales] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    let isMounted = true;\n    Promise.all([getSalesTodayResponse()]);\n\n    async function getSalesTodayResponse() {\n      const request = await salesService.getSalesToday(auth.token);\n\n      if (HTTP_RESPONSE.SUCCESS.includes(request.status) && isMounted) {\n        setSales(request.data);\n      }\n\n      if (request.status === HTTP_RESPONSE.NOT_FOUND && isMounted) {\n        setSalesTodayNotFound(true);\n      }\n\n      if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n        if (isMounted) setServerError(true);\n      }\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [auth, navigate, dispatch]);\n\n  const getSalesInPeriodResponse = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if ((!clientSelected && !date1 && !date2) || (!date1 && date2)) {\n      setInvalidParams(true);\n      setSales([]);\n      return;\n    }\n\n    setloaderSales(true);\n\n    let request = null;\n\n    if ((clientSelected && date1) || (clientSelected && date1 && date2)) {\n      request = await salesService.getSalesByAllFilters(\n        auth.token,\n        clientSelected,\n        date1,\n        date2,\n      );\n    } else if (clientSelected) {\n      request = await salesService.getSalesByClients(\n        auth.token,\n        clientSelected,\n      );\n    } else {\n      request = await salesService.getSalesInPeriod(\n        auth.token,\n        date1 as string,\n        date2 as string,\n      );\n    }\n\n    setloaderSales(false);\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setSalesNotFound(true);\n      setSales([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    setSales(request.data);\n    setFetchSalesSuccess(true);\n  };\n\n  const clearSales = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSales([]);\n    clearDates();\n    setClearFields(true);\n    setClientSelected(null);\n  };\n\n  const clearDates = () => {\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    const date2Element = document.getElementById(\n      'date2',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n    if (date2Element) date2Element.value = '';\n    setDate1('');\n    setDate2('');\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientSelected(null);\n    clearDates();\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card.mb-4.p-3.shadow.bg-white.rounded > form > div.mb-4 > div > div > div > div > button',\n    ) as HTMLElement | null;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  if (salesNotFound === true) {\n    setTimeout(() => setSalesNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError === false || serverError === true) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (salesTodayNotFound === true) {\n    setTimeout(() => setSalesTodayNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearFields === true) {\n    setTimeout(() => setClearFields(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (fetchSalesSuccess === true) {\n    setTimeout(() => setFetchSalesSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients || loaderSales) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb page={[{ link: false, name: 'Suas Vendas' }]} />\n\n      <TitlePage title=\"Suas Vendas\" />\n\n      <SelectPeriod\n        getSalesInPeriodResponse={getSalesInPeriodResponse}\n        setDate1={setDate1}\n        setDate2={setDate2}\n        filterByClient={clients}\n        setDataClient={(e: React.BaseSyntheticEvent, item: string) =>\n          setClientSelected(item)\n        }\n        clearFields={(e: React.BaseSyntheticEvent) => clearFilters(e)}\n      />\n\n      {salesNotFound === true ? (\n        <AlertInfo title=\"Nenhuma venda encontrada.\" />\n      ) : null}\n      {fetchSalesSuccess === true ? (\n        <AlertSuccess title=\"Período atualizado.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Não foi possível processar a requisição.\" />\n      ) : null}\n      {salesTodayNotFound === true ? (\n        <AlertInfo title=\"Nenhuma venda encontrada hoje.\" />\n      ) : null}\n      {clearFields === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {invalidParams === true ? (\n        <AlertError title=\"Preencha os campos corretamente.\" />\n      ) : null}\n\n      {sales.length > 0 ? (\n        <div>\n          {(date1 || date2) && (\n            <div className=\"d-inline\">\n              <strong>Período: </strong>\n              <div className=\"d-inline\">\n                {date1 &&\n                  new Date(date1).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                {date2 &&\n                  ' - ' +\n                    new Date(date2).toLocaleDateString('pt-BR', {\n                      timeZone: 'UTC',\n                    })}\n              </div>\n            </div>\n          )}\n\n          {clientSelected && (\n            <div className=\"d-inline\">\n              <strong>Cliente: </strong>\n              <div className=\"d-inline\">{clientSelected}</div>\n            </div>\n          )}\n\n          <ClearFields title=\"Limpar Pesquisa\" callback={clearSales} />\n\n          <TableSales sales={sales} />\n\n          <div className=\"inline\">\n            <p>\n              <strong>Quantidade de vendas:</strong>{' '}\n              {sales.length > 0 ? sales.length : null}\n            </p>\n          </div>\n          <div className=\"form-row mt-4\">\n            <h4>Total:</h4>\n            <h4>\n              {sales.length > 0\n                ? salesService.countTotalValueSales(sales)\n                : null}\n            </h4>\n          </div>\n        </div>\n      ) : (\n        <h4>Faça uma busca.</h4>\n      )}\n    </div>\n  );\n}\n","import { LabelForm } from \"../components/labels/LabelForm\";\nimport { InputText } from '../components/input/InputText';\nimport { mask } from \"../services/maskMoney\";\nimport { useState } from \"react\";\nimport { onCreateSales } from \"../reducers/salesSlice\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { TIMEOUT, HTTP_RESPONSE } from '../utils/constants';\nimport { salesService } from \"../services/salesService\";\nimport { ReducerStore } from '../app/store';\nimport { AlertInfo } from \"../components/alerts/AlertInfo\";\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\n\ntype InputProps = {\n    id: string;\n    data_target: string;\n}\n\nexport function CreateSalesBySchedule(props: InputProps) {\n    const { id, data_target } = props;\n\n    const auth = useSelector((state: ReducerStore) => state.authenticated);\n    const salesCreate = useSelector((state: ReducerStore) => state.sales)\n    const dispatch = useDispatch();\n\n    const [price, setPrice] = useState<string>('');\n    const [isLoadingCreateSales, setIsLoadingCreateSales] = useState<boolean>(false);\n    const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n    const saveSale = async (event: React.BaseSyntheticEvent) => {\n        event.preventDefault();\n\n        if (!price || price.length === 0 || price.length > 15) {\n            setAlert(<AlertInfo title=\"Preencha o preço corretamente!\" />);\n            return;\n        };\n\n        setIsLoadingCreateSales(true);\n\n        const request = await salesService.newSale(\n            auth.token,\n            salesCreate.procedure,\n            salesCreate.client,\n            price,\n            salesCreate.date,\n        );\n\n        setIsLoadingCreateSales(false);\n\n        if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n            setAlert(<AlertSuccess title=\"Venda gerada com sucesso!\" />);\n            dispatch(\n                onCreateSales({\n                    id: '',\n                    client: '',\n                    procedure: '',\n                    date: '',\n                    price: '',\n                })\n            )\n            setPrice('');\n            return;\n        }\n\n        if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n            setAlert(<AlertError title=\"Erro ao precessar a requisição!\" />);\n        }\n    };\n\n    let loader = null;\n    if (isLoadingCreateSales) {\n        loader = <CircularIndeterminate />;\n    } else {\n        loader = null;\n    }\n\n    if (alert) {\n        setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n    }\n\n    return (\n        <div\n            className=\"modal fade\"\n            id={id}\n            tabIndex={-1}\n            role=\"dialog\"\n            aria-labelledby=\"exampleModalLabel\"\n            aria-hidden=\"true\"\n            data-toggle=\"modal\"\n        >\n            {loader}\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                            Gerar venda\n                        </h5>\n                        <button\n                            type=\"button\"\n                            className=\"close\"\n                            data-dismiss=\"modal\"\n                            aria-label=\"Fechar\"\n                        >\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body mb-2 mt-2\">\n                        <LabelForm text=\"Digite o preço\" />\n                        <InputText\n                            type=\"text\"\n                            format=\"currency\"\n                            className=\"mb-3\"\n                            value={price}\n                            onChange={(ev: React.BaseSyntheticEvent) => {\n                                let val = ev.target.value;\n                                const { maskedValue } = mask(val, 2, ',', '.', false, 'R$');\n                                setPrice(maskedValue);\n                            }}\n                            id=\"price\"\n                            label=\"Digite o preço\"\n                        />\n                    </div>\n                    {alert && (\n                        <div className=\"ml-3 mr-3\">\n                            {alert}\n                        </div>\n                    )}\n                    <div className=\"modal-footer\">\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary mb-2\"\n                            data-dismiss=\"modal\"\n                        >\n                            Fechar\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={(e) => saveSale(e)}\n                            data-target={data_target}\n                            className='btn btn-primary mb-2'\n                        >\n                            Gerar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { WhatsAppService } from '../services/whatsapp-service';\n\nimport moment from 'moment';\nimport { Paper } from '@material-ui/core';\nimport { randomId } from '../utils/random';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { onEditClient } from '../reducers/scheduleSlice';\nimport { onCreateSales } from '../reducers/salesSlice';\nimport { CreateSalesBySchedule } from '../pages/CreateSalesBySchedule';\n\ntype InputProps = {\n  item: any;\n  setId: any;\n  setIdScheduleDeleted: any;\n  expired: boolean;\n};\n\nexport function ScheduleCard(props: InputProps) {\n  const { item, setId, setIdScheduleDeleted, expired } = props;\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  return (\n    <Paper elevation={3} key={randomId()}>\n      <CreateSalesBySchedule\n        id='create-sales-by-schedule'\n        data_target='#create-sales-by-schedule'\n      />\n\n      <div className=\"mb-2 mt-3\">\n        <div className=\"card p-2 card-schedule\">\n          {expired ? (\n            <div className=\"card-header border-bottom pb-2 mb-2\">\n              <div className=\"form-row\">\n                <h6 className=\"col text-danger font-weight-bold mb-2\">\n                  Horário Expirado!\n                </h6>\n              </div>\n            </div>\n          ) : null}\n          <div className=\"card-header border-bottom pb-2 mb-3\">\n            <div className=\"form-row\" style={{ alignItems: 'center' }}>\n              <h6 className=\"text-primary col font-weight-bold\">\n                Cliente:{' '}\n                <small className=\"text-muted h6 mb-3\">{item.client}</small>\n              </h6>\n\n              <div\n                style={{\n                  display: 'flex'\n                }}\n              >\n                <button\n                  type=\"button\"\n                  className=\"col btn border-0 m-0 p-0 pl-2 pr-2\"\n                  onClick={(e) => {\n                    dispatch(\n                      onEditClient({\n                        id: item.id,\n                        client: item.client,\n                        procedure: item.procedure,\n                        date: item.date,\n                        time: item.time,\n                        price: item.price,\n                        phone: item.phone,\n                        pacote: item.pacote,\n                        qtdTotalAtendimento: item.qtdTotalAtendimento,\n                        qtdAtendimento: item.qtdAtendimento,\n                      }),\n                    );\n                    navigate(`/edit-schedule/${item.id}`);\n                  }}\n                  style={{\n                    border: 'none',\n                    backgroundColor: 'transparent',\n                    outline: 'none'\n                  }}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"blue\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                    <path fillRule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\n                  </svg>\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"col btn border-0 m-0 pl-2 pr-2 btn btn-outline-danger\"\n                  data-toggle=\"modal\"\n                  data-target=\"#delete-client-schedule\"\n                  onClick={(e) => {\n                    setIdScheduleDeleted(item.id);\n                  }}\n                  style={{\n                    border: 'none',\n                    backgroundColor: 'transparent',\n                    outline: 'none'\n                  }}\n                >\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"red\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\n                    <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n                  </svg>\n                </button>\n              </div>\n\n            </div>\n          </div>\n          <div className=\"list-group-item pb-2\">\n            {item.pacote && (\n              <h6 className=\"card-subtitle text-danger font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n                Pacote\n              </h6>\n            )}\n            <h6 className=\"card-subtitle text-primary font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n              Descrição:{' '}\n              <small className=\"text-muted h6 mb-3\">{item.procedure}</small>\n            </h6>\n            <div className=\"form-row pt-2 pb-2 mb-2\">\n              <h6 className=\"card-subtitle col text-primary font-weight-bold\">\n                Horário:{' '}\n                <small className=\"text-muted h6 mb-2\">{item.time}hrs</small>\n              </h6>\n              <h6 className=\"card-subtitle col text-primary font-weight-bold\">\n                Data:{' '}\n                <small className=\"text-muted h6 mb-3\">\n                  {moment(item.date).format('DD/MM/YYYY')}\n                </small>\n              </h6>\n            </div>\n            <div className=\"border-top form-row\">\n              {item.pacote && (\n                <h6 className=\"col card-subtitle text-primary font-weight-bold pb-2 pt-2 mt-2\">\n                  Atendimento:{' '}\n                  <small className=\"text-muted h6 mb-2\">\n                    {item.qtdAtendimento}\n                  </small>\n                </h6>\n              )}\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            <div className=\"form-row\">\n              {item.phone && !item.isDefeated && (\n                <button\n                  type=\"button\"\n                  className=\"col m-1 btn btn-outline-success\"\n                  onClick={(e: React.BaseSyntheticEvent) =>\n                    WhatsAppService.redirectToWhatsappWithMessage(\n                      e,\n                      item.client,\n                      item.phone,\n                      item.date,\n                      item.time,\n                      item.qtdTotalAtendimento,\n                      item.qtdAtendimento,\n                      item.procedure,\n                    )\n                  }\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'center'\n                  }}\n                >\n                  <div className=\"pr-2\">WhatsApp</div>\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"20\"\n                    height=\"20\"\n                    fill=\"currentColor\"\n                    className=\"bi bi-whatsapp\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\n                  </svg>\n                </button>\n              )}\n              <button\n                type=\"button\"\n                className=\"col m-1 btn btn-outline-primary\"\n                data-toggle=\"modal\"\n                data-target=\"#finalyt-schedule\"\n                onClick={(e) => setId(item.id)}\n              >\n                Finalizar\n              </button>\n              <button\n                type=\"button\"\n                className=\"col m-1 btn btn-outline-primary\"\n                data-toggle=\"modal\"\n                data-target=\"#create-sales-by-schedule\"\n                onClick={(e) => {\n                  dispatch(\n                    onCreateSales({\n                      id: item.id,\n                      client: item.client,\n                      procedure: item.procedure,\n                      date: item.date,\n                    })\n                  )\n                }}\n              >\n                Gerar Venda\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ReducerStore } from '../app/store';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { scheduleService } from '../services/scheduleService';\nimport { ScheduleCard } from '../components/ScheduleCard';\nimport { randomId } from '../utils/random';\nimport { useGetClientsQuery } from '../api/ApiSlice';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { ComboBox } from '../components/ComboBox';\nimport { TopModal } from '../components/TopModal';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { ISchedule } from '../reducers/scheduleSlice';\nimport { IClient } from '../api/types/Client';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport { InputDate } from '../components/input/InputDate';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Schedule() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [schedules, setSchedule] = useState<ISchedule[]>([]);\n  const [expiredSchedules, setExpiredSchedules] = useState<ISchedule[]>([]);\n\n  const [id, setId] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n  const [clientSelected, setClientSelected] = useState<string>('');\n\n  const [idScheduleDeleted, setIdScheduleDeleted] = useState<string>('');\n\n  const [scheduleDeletedSuccess, setScheduleDeletedSuccess] =\n    useState<boolean>(false);\n\n  const [fetchScheduleSuccess, setFetchScheduleSuccess] =\n    useState<boolean>(false);\n  const [scheduleNotFound, setScheduleNotFound] = useState<boolean>(false);\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [clearSchedule, setClearSchedule] = useState<boolean>(false);\n  const [scheduleFinish, setScheduleFinish] = useState<boolean>(false);\n  const [loaderState, setLoaderState] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    let isMounted = true;\n    Promise.all([\n      scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n        if (!result.status) return;\n        if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n        if (isMounted) setExpiredSchedules(result.data);\n      }),\n    ]);\n    return () => {\n      isMounted = false;\n    };\n  }, [auth, navigate, dispatch]);\n\n  const clearStates = () => {\n    setId('');\n  };\n\n  const getScheduleResponse = async (event?: React.BaseSyntheticEvent) => {\n    if (event) event.preventDefault();\n\n    if (!clientSelected && !date) {\n      return;\n    }\n\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n\n    let request = null;\n\n    if ((clientSelected && date) || clientSelected) {\n      request = await scheduleService.getScheduleByClient(\n        auth.token,\n        clientSelected,\n      );\n    } else {\n      request = await scheduleService.getClientsSchedule(auth.token, date);\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setScheduleNotFound(true);\n      setSchedule([]);\n      return;\n    }\n\n    setSchedule(request.data);\n    setFetchScheduleSuccess(true);\n  };\n\n  const finishScheduleResponse = async (\n    event: React.BaseSyntheticEvent,\n    id: any,\n  ) => {\n    event.preventDefault();\n\n    const scheduleFinish = schedules\n      .map((item: any) => item)\n      .filter((item: { id: any }) => item.id === id);\n\n    const expiredScheduleFinish = expiredSchedules\n      .map((item: any) => item)\n      .filter((item: { id: any }) => item.id === id);\n\n    scheduleFinish.push(...expiredScheduleFinish);\n\n    setLoaderState(true);\n\n    const request = await scheduleService.finishClientSchedule(\n      auth.token,\n      scheduleFinish[0].id,\n    );\n\n    setLoaderState(false);\n\n    if (!request.status || request.status === HTTP_RESPONSE.ERROR) {\n      setServerError(true);\n      return;\n    }\n\n    setScheduleFinish(true);\n    await getScheduleResponse(event);\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n  };\n\n  const deleteClientScheduleResponse = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    setLoaderState(true);\n\n    const result = await scheduleService.deleteClientSchedule(auth.token, id);\n\n    setLoaderState(false);\n\n    if (HTTP_RESPONSE.SUCCESS.includes(result.status)) {\n      setScheduleDeletedSuccess(true);\n      clearStates();\n    }\n\n    if (!result.status) {\n      setServerError(true);\n    }\n\n    await getScheduleResponse(event);\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n  };\n\n  const clearFindSchedule = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSchedule([]);\n    setClearSchedule(true);\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const dateLoad = document.getElementById(\n      'dateLoadSchedule',\n    ) as HTMLInputElement;\n    if (dateLoad) dateLoad.value = '';\n    const clickButtonSelect = document.querySelector(\n      '#filterByClient > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (clickButtonSelect) clickButtonSelect.click();\n\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n\n    setDate('');\n    setClientSelected('');\n  };\n\n  if (fetchScheduleSuccess === true) {\n    setTimeout(() => setFetchScheduleSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleDeletedSuccess === true) {\n    setTimeout(() => setScheduleDeletedSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearSchedule) {\n    setTimeout(() => setClearSchedule(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleFinish) {\n    setTimeout(() => setScheduleFinish(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleNotFound === true) {\n    setTimeout(() => setScheduleNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients || loaderState) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb page={[{ link: false, name: 'Agenda' }]} />\n\n      <TopModal\n        id=\"finality-client-schedule\"\n        title=\"Horário finalizado com sucesso!\"\n        body=\"Você finalizou esse horário e ele já foi salvo nas suas vendas!\"\n      />\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-client-schedule\"\n        title=\"Excluir horário?\"\n        body=\"Tem certeza que deseja excluir esse horário?\"\n        click={(e: React.BaseSyntheticEvent) =>\n          deleteClientScheduleResponse(e, idScheduleDeleted)\n        }\n        button=\"Excluir\"\n      />\n\n      <TopModal\n        className=\"btn btn-primary\"\n        id=\"finalyt-schedule\"\n        title=\"Finalizar horário?\"\n        data_target=\"#finality-client-schedule\"\n        body=\"Tem certeza que deseja finalizar esse horário?\"\n        click={(e: React.BaseSyntheticEvent) => finishScheduleResponse(e, id)}\n        button=\"Finalizar\"\n      />\n\n      <TitlePage title=\"Agenda\" />\n\n      <div\n        className=\"mb-4 pb-2\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByDateElement?.style.display === 'block') {\n              filterByDateElement.style.display = 'none';\n            } else {\n              if (filterByDateElement)\n                filterByDateElement.style.display = 'block';\n            }\n\n            if (filterByClientElement)\n              filterByClientElement.style.display = 'none';\n          }}\n          text=\"Data\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByClientElement?.style.display === 'block') {\n              filterByClientElement.style.display = 'none';\n            } else {\n              if (filterByClientElement)\n                filterByClientElement.style.display = 'block';\n            }\n\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n          }}\n          text=\"Cliente\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByClientElement)\n              filterByClientElement.style.display = 'none';\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n          }}\n        />\n      </div>\n\n      <div\n        className=\"col mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByDate\"\n      >\n        <LabelForm text=\"Data\" />\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <InputDate\n            idComponent=\"date1InputDate\"\n            idInput=\"date1\"\n            onChange={(e: { target: { value: any } }) =>\n              setDate(e.target.value)\n            }\n            className=\"\"\n          />\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getScheduleResponse(e);\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"mt-2 mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByClient\"\n      >\n        {clients !== null ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={clients.map((item: IClient) => item.name)}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                if (!item) {\n                  setClientSelected(item);\n                  return;\n                }\n                setClientSelected(item);\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getScheduleResponse(e);\n              }}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                if (!item) {\n                  setClientSelected(item);\n                  return;\n                }\n                setClientSelected(item);\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getScheduleResponse(e);\n              }}\n            />\n          </div>\n        )}\n      </div>\n\n      {scheduleNotFound === true ? (\n        <AlertInfo title=\"Nenhum horário encontrado.\" />\n      ) : null}\n      {fetchScheduleSuccess === true ? (\n        <AlertSuccess title=\"Pesquisa atualizada.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Erro ao processar sua requisição.\" />\n      ) : null}\n      {scheduleDeletedSuccess === true ? (\n        <AlertSuccess title=\"Horário excluído com sucesso.\" />\n      ) : null}\n      {clearSchedule === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {scheduleFinish === true ? (\n        <AlertSuccess title=\"Horário finalizado com sucesso.\" />\n      ) : null}\n\n      <h4 className=\"mb-3\">Horários agendados</h4>\n\n      {schedules.length > 0 && (\n        <ClearFields title=\"Limpar Pesquisa\" callback={clearFindSchedule} />\n      )}\n\n      {expiredSchedules\n        ? expiredSchedules.map((item) => {\n            return (\n              <div key={randomId()}>\n                <ScheduleCard\n                  item={item}\n                  setId={setId}\n                  setIdScheduleDeleted={setIdScheduleDeleted}\n                  expired={true}\n                />\n              </div>\n            );\n          })\n        : null}\n\n      <br />\n\n      {schedules.length > 0 && (\n        <div>\n          {schedules\n            .filter(\n              (item: { id: any }) =>\n                !expiredSchedules\n                  .map((expire: { id: any }) => expire.id)\n                  .includes(item.id),\n            )\n            .map((item: any) => {\n              return (\n                <div key={randomId()}>\n                  <ScheduleCard\n                    item={item}\n                    setId={setId}\n                    setIdScheduleDeleted={setIdScheduleDeleted}\n                    expired={false}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { InputText } from './input/InputText';\nimport { ISegment } from '../api/types/Segment';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  editSegment: Function;\n  title: string;\n  actionCreate: Function;\n  actionUpdate: Function;\n  actionName: string;\n  clearStates: any;\n  segment: ISegment;\n  setNewSegment: Function;\n  alert: JSX.Element | null;\n};\n\nexport function CardSegment(props: InputProps) {\n  const {\n    editSegment,\n    title,\n    actionCreate,\n    actionUpdate,\n    actionName,\n    clearStates,\n    segment,\n    setNewSegment,\n    alert,\n  } = props;\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"modalSegment\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5>{title}</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={clearStates}\n              data-dismiss=\"modal\"\n              aria-label=\"Fechar\"\n              key={0}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <LabelForm text=\"Segmento\" />\n\n            <InputText\n              type=\"text\"\n              id=\"procedure\"\n              value={segment ? segment.name : ''}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setNewSegment({ name: e.target.value, id: segment.id })\n              }\n              label=\"Digite o segmento\"\n              required={true}\n            />\n            <div className=\"form-row mt-4\">\n              <div className=\"form-group col\">\n                <button\n                  type=\"reset\"\n                  onClick={() => {\n                    clearStates();\n                    setNewSegment('');\n                  }}\n                  className=\"btn btn-outline-secondary col p-2\"\n                  data-dismiss=\"modal\"\n                  key={3}\n                >\n                  Fechar\n                </button>\n              </div>\n              <div className=\"form-group col\">\n                <button\n                  className=\"btn btn-primary col p-2\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    editSegment\n                      ? actionUpdate(e, segment.name, segment.id)\n                      : actionCreate(e, segment.name);\n                  }}\n                >\n                  {actionName}\n                </button>\n              </div>\n            </div>\n            {alert}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n  text: string;\n  className?: string;\n  style?: React.CSSProperties;\n  dataToggle?: string;\n  dataTarget?: string;\n};\n\nexport function ButtonFilterAction(props: InputProps) {\n  return (\n    <button\n      className={`btn btn-outline-primary mr-2 font-weight-bold ${props.className}`}\n      onClick={props.onClick}\n      style={{\n        borderRadius: '15px',\n        ...props.style,\n      }}\n      data-toggle={props.dataToggle}\n      data-target={`#${props.dataTarget}`}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import { TopModal } from '../components/TopModal';\nimport { CardSegment } from '../components/CardSegment';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { ComboBox } from '../components/ComboBox';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TitlePage } from '../components/TitlePage';\nimport { ReducerStore } from '../app/store';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { ButtonFilterAction } from '../components/buttons/ButtonFilterAction';\nimport React from 'react';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport {\n  useAddNewSegmentMutation,\n  useDeleteSegmentMutation,\n  useGetSegmentsQuery,\n  useUpdateSegmentMutation,\n} from '../api/ApiSlice';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Segments() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const [addSegment, { isLoading: isLoadingAdd }] = useAddNewSegmentMutation();\n  const [updateSegment, { isLoading: isLoadingUpdate }] =\n    useUpdateSegmentMutation();\n  const [deleteSegment, { isLoading: isLoadingDelete }] =\n    useDeleteSegmentMutation();\n\n  const [titleCardSegment, setTitleCardSegment] = useState<string>('');\n  const [actionName, setActionName] = useState<string>('');\n  const [editSegmentName, setEditSegmentName] = useState<any>({\n    name: '',\n    id: '',\n  });\n  const [editSegment, setEditSegment] = useState<boolean | null>(null);\n  const [segmentActual, setSegmentActual] = useState<\n    { label: string; id: string } | any\n  >(null);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const [selectSegment, setSelectSegment] = useState<{\n    label: string;\n    id: string;\n  }>({ label: '', id: '' });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const getSegment = async (\n    event: React.BaseSyntheticEvent,\n    params: { label: string; id: string },\n  ) => {\n    event.preventDefault();\n    setSegmentActual(params);\n  };\n\n  const clearFindClients = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSegmentActual(null);\n  };\n\n  const formFieldsIsValids = (segment: string): boolean => {\n    if (!segment || !segment.trim() || segment.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const onAddNewSegment = async (\n    event: React.BaseSyntheticEvent,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids(segment)) return;\n\n    try {\n      await addSegment({\n        segment,\n      }).unwrap();\n      setEditSegmentName('');\n      setAlert(<AlertSuccess title=\"Segmento criado com sucesso.\" />);\n    } catch (error) {\n      if (error.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse segmento já existe.\" />);\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const updateSegmentRequest = async (\n    event: React.BaseSyntheticEvent,\n    segment: any,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await updateSegment({\n        id,\n        segment,\n      });\n      setEditSegmentName('');\n      setAlert(<AlertSuccess title=\"Segmento atualizado.\" />);\n    } catch (error) {\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const onDeleteSegment = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await deleteSegment({\n        id,\n        segment,\n      });\n      setAlert(<AlertSuccess title=\"Segmento deletado.\" />);\n      setSegmentActual('');\n    } catch (error) {\n      if (error.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(\n          <AlertError title=\"Esse segmento não pode ser excluído, pois existem clientes associados à ele.\" />,\n        );\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const showActions =\n    segmentActual && segmentActual.label && segmentActual.label.length > 0;\n\n  let loader = null;\n  if (isLoadingAdd || isLoadingUpdate || isLoadingDelete) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb page={[{ link: false, name: 'Segmentos' }]} />\n\n      <TitlePage title=\"Segmentos\" />\n\n      <div\n        className=\"pb-2 mb-4\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            const filterBySegmentElement =\n              document.getElementById('searchBySegment');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterBySegmentElement?.style.display === 'flex') {\n              filterBySegmentElement.style.display = 'none';\n            } else {\n              if (filterBySegmentElement)\n                filterBySegmentElement.style.display = 'flex';\n            }\n\n            if (filterByNameElement) filterByNameElement.style.display = 'none';\n          }}\n          text=\"Segmento\"\n        />\n\n        <ButtonFilterAction\n          onClick={(e: React.BaseSyntheticEvent) => {\n            const filterBySegmentElement =\n              document.getElementById('searchBySegment');\n            if (filterBySegmentElement)\n              filterBySegmentElement.style.display = 'none';\n\n            setTitleCardSegment('Novo');\n            setActionName('Criar');\n            setEditSegment(false);\n          }}\n          text=\"Novo\"\n          className=\"pl-3 pr-3\"\n          dataToggle=\"modal\"\n          dataTarget=\"modalSegment\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFindClients(e);\n\n            const filterClientsElement =\n              document.getElementById('searchByName');\n            if (filterClientsElement)\n              filterClientsElement.style.display = 'none';\n            const filerClientElement =\n              document.getElementById('searchBySegment');\n\n            if (filerClientElement) filerClientElement.style.display = 'none';\n\n            const buttonSelector = document.querySelector(\n              '#searchBySegment > div > div > div > div > div > button',\n            ) as HTMLElement;\n            if (buttonSelector) buttonSelector.click();\n          }}\n        />\n\n        {showActions && (\n          <ButtonFilterAction\n            onClick={clearFindClients}\n            text=\"Limpar Pesquisa\"\n            className=\"pl-3 pr-3 btn-outline-warning\"\n          />\n        )}\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n        }}\n        id=\"searchBySegment\"\n        className=\"pb-4\"\n      >\n        {segments.length > 0 ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Selecionar segmento\"\n              options={segments.map((item: any) => ({\n                label: item.segment,\n                id: item.id,\n              }))}\n              selectValue={(e: React.BaseSyntheticEvent, item: any) => {\n                setSelectSegment(item || {});\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) =>\n                getSegment(e, selectSegment)\n              }\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Selecionar segmento\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: any) => {\n                setSelectSegment(item || {});\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) =>\n                getSegment(e, selectSegment)\n              }\n            />\n          </div>\n        )}\n      </div>\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-segment\"\n        title=\"Excluir segmento?\"\n        body=\"Tem certeza que deseja excluir esse segmento?\"\n        click={(e: React.BaseSyntheticEvent) => {\n          if (segmentActual) {\n            onDeleteSegment(e, segmentActual.id, segmentActual.label);\n          }\n        }}\n        button=\"Excluir\"\n      />\n\n      <CardSegment\n        editSegment={editSegment as any}\n        title={titleCardSegment}\n        actionName={actionName}\n        segment={editSegmentName}\n        clearStates={(e: React.BaseSyntheticEvent) =>\n          setEditSegmentName({ name: '', id: '' })\n        }\n        actionCreate={(e: React.BaseSyntheticEvent, segment: any) =>\n          onAddNewSegment(e, segment)\n        }\n        actionUpdate={updateSegmentRequest}\n        setNewSegment={setEditSegmentName}\n        alert={alert}\n      />\n\n      {showActions ? (\n        <div className=\"card p-2 mt-4\">\n          <div className=\"card-header\">\n            <h6 className=\"text-primary font-weight-bold pt-2\">\n              Segmento:{' '}\n              <small className=\"text-dark text-muted font-weight-bold h6\">\n                {segmentActual.label}\n              </small>\n            </h6>\n          </div>\n          <div className=\"pt-4 form-row\">\n            <div className=\"col\">\n              <button\n                className=\"col btn btn-outline-primary font-weight-bold\"\n                data-toggle=\"modal\"\n                data-target=\"#modalSegment\"\n                onClick={(e: React.BaseSyntheticEvent) => {\n                  setTitleCardSegment('Editar');\n                  setActionName('Salvar');\n                  setEditSegmentName({\n                    name: segmentActual.label,\n                    id: segmentActual.id,\n                  });\n                  setEditSegment(true);\n                }}\n              >\n                Editar\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"col btn btn-outline-danger font-weight-bold col\"\n                data-toggle=\"modal\"\n                data-target=\"#delete-segment\"\n                onClick={(e: React.BaseSyntheticEvent) => e}\n              >\n                Deletar\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h5 className=\"border-top pt-4\">Nenhum segmento selecionado</h5>\n      )}\n      {alert}\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/no-redundant-roles */\nimport '../css/main.css';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../services/authService';\n\nexport function NavBarResponsive() {\n  const navigate = useNavigate();\n\n  const closeItens = () => {\n    const scheduleElement = document.getElementById('sub-group-schedule');\n    const clientElement = document.getElementById('sub-group-client');\n    const salesElement = document.getElementById('sub-group-sales');\n    const atendimentoElement = document.getElementById('sub-group-atendimento');\n    const navGroupElement = document.getElementById('navGroup');\n\n    if (scheduleElement?.style.display === 'block')\n      scheduleElement.style.display = 'none';\n    if (clientElement?.style.display === 'block')\n      clientElement.style.display = 'none';\n    if (salesElement?.style.display === 'block')\n      salesElement.style.display = 'none';\n    if (atendimentoElement?.style.display === 'block')\n      atendimentoElement.style.display = 'none';\n    if (navGroupElement?.className === 'nav-group')\n      navGroupElement.className = 'nav-group';\n\n    closeNavResponsive();\n  };\n\n  const closeNavResponsive = () => {\n    const navGroupElement = document.getElementById('navGroup');\n\n    if (navGroupElement) {\n      if (navGroupElement.className === 'nav-group')\n        navGroupElement.className += '-responsive';\n      else navGroupElement.className = 'nav-group';\n    }\n  };\n\n  return (\n    <div id=\"navbarresponsive\">\n      <div className=\"title-navbar-responsive pb-2 border-bottom\">\n        <h5 id=\"title-navbar\">\n          <strong>ARV - Controll</strong>\n        </h5>\n        <div\n          className=\"nav-icon\"\n          onClick={(e) => {\n            closeNavResponsive();\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"40\"\n            height=\"40\"\n            fill=\"white\"\n            className=\"bi bi-list\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <ul className=\"nav-group\" id=\"navGroup\">\n        <li className=\"nav-item remove-style-link\" key=\"984513\">\n          <button\n            className=\"btn-list-item\"\n            onClick={(e) => {\n              closeNavResponsive();\n              navigate('/home');\n            }}\n            style={{ outline: 'none' }}\n          >\n            Home\n          </button>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"8979951462\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-schedule\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-schedule\"\n          >\n            Agenda\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-schedule\">\n            <li className=\"sub-item\" data-dismiss=\"modal\" key=\"2369874\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-schedule');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-schedule\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-schedule\"\n              >\n                Nova Agenda\n              </button>\n            </li>\n            <li className=\"sub-item\" data-dismiss=\"modal\" key=\"278534\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/schedule');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-schedule\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-schedule\"\n              >\n                Suas Agendas\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"3348795\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-atendimento\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-atendimento\"\n          >\n            Atendimentos\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-atendimento\">\n            <li className=\"sub-item\" key=\"9837458\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-history');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-atendimento\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-atendimento\"\n              >\n                Criar Novo\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"83450\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/history');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-atendimento\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-atendimento\"\n              >\n                Histórico\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"8795444\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-client\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-client\"\n          >\n            Clientes\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-client\">\n            <li className=\"sub-item\" key=\"33745\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-client');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Novo Cliente\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"3345\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/client');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Seus Clientes\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"434\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/segments-clients');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Segmentos\n              </button>\n            </li>\n          </div>\n        </li>\n        <li className=\"nav-item remove-style-link\" key=\"136971\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-sales\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-sales\"\n          >\n            Vendas\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-sales\">\n            <li className=\"sub-item\" key=\"6948\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/new-sale');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Nova Venda\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"3445\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/sales');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Suas Vendas\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"346346\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/reports');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Relatórios\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"6644855\">\n          <button\n            className=\"btn-list-item btn-exit\"\n            onClick={(e) => {\n              authService.cleanUserInLocalStorange();\n              closeNavResponsive();\n              navigate('/login');\n            }}\n            style={{ outline: 'none' }}\n          >\n            Sair\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { randomId } from './utils/random';\n\nimport { Clients } from './pages/Clients';\nimport { ClientHistory } from './pages/ClientHistory';\nimport { CreateHistory } from './pages/CreateHistory';\nimport { CreateSchedule } from './pages/CreateSchedule';\nimport { CreateClient } from './pages/CreateClient';\nimport { EditClient } from './pages/EditClient';\nimport { EditScheduleForm } from './pages/EditScheduleForm';\nimport { Home } from './pages/Home';\nimport { LoginPage } from './pages/Login';\nimport { NewSale } from './pages/NewSale';\nimport { Reports } from './pages/Reports';\nimport { Sales } from './pages/Sales';\nimport { Schedule } from './pages/Schedule';\nimport { Segments } from './pages/Segments';\nimport { NavBarResponsive } from './components/NavBarResponsive';\n\nexport function RoutesApp() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <NavBarResponsive />\n        <div className=\"mains\">\n          <Routes>\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\"/client\" element={<Clients />} key={randomId()} />\n            <Route\n              path=\"/create-client\"\n              element={<CreateClient />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/editClient/:clientId\"\n              element={<EditClient />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/new-sale\"\n              element={<NewSale key={randomId()} />}\n              key={randomId()}\n            />\n            <Route path=\"/schedule\" element={<Schedule />} key={randomId()} />\n            <Route\n              path=\"/create-schedule\"\n              element={<CreateSchedule />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/edit-schedule/:scheduleId\"\n              element={<EditScheduleForm />}\n              key={randomId()}\n            />\n            <Route path=\"/sales\" element={<Sales />} key={randomId()} />\n            <Route path=\"/reports\" element={<Reports />} key={randomId()} />\n            <Route\n              path=\"/segments-clients\"\n              element={<Segments />}\n              key={randomId()}\n            />\n            <Route path=\"/history\" element={<ClientHistory />} />\n            <Route\n              path=\"/create-history\"\n              element={<CreateHistory />}\n              key={randomId()}\n            />\n            <Route path=\"*\" element={<Home />} key={randomId()} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n","import { useEffect } from 'react';\nimport { RoutesApp } from './RoutesApp';\n\nexport function App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = '#f8f8ff';\n  }, []);\n\n  return <RoutesApp />;\n}\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(<App />);\n"],"sourceRoot":""}