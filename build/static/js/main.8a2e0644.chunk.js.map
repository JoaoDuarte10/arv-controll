{"version":3,"sources":["services/authService.ts","reducers/authenticatedSlice.ts","api/ApiSlice.ts","reducers/scheduleSlice.ts","reducers/salesSlice.ts","app/store.ts","utils/random.ts","components/alerts/AlertSuccess.tsx","components/alerts/AlertInfo.tsx","components/alerts/AlertError.tsx","components/Breadcumb.tsx","services/whatsapp-service.ts","components/CardClient.tsx","components/LoaderCircular.tsx","components/ComboBox.tsx","components/TitlePage.tsx","components/TopModal.tsx","utils/constants.ts","components/buttons/SearchFilter.tsx","components/buttons/ClearSearchFilter.tsx","components/buttons/SearchButton.tsx","pages/Clients.tsx","services/clientHistoryService.ts","components/Buttons.tsx","components/input/InputText.tsx","components/input/InputDate.tsx","components/labels/LabelForm.tsx","components/SelectPeriod.tsx","components/TableHistory.tsx","pages/ClientHistory.tsx","pages/CreateHistory.tsx","components/ScheduleForm.tsx","pages/CreateSchedule.tsx","components/FormClients.tsx","pages/CreateClient.tsx","components/ComeBack.tsx","pages/EditClient.tsx","services/scheduleService.ts","pages/EditScheduleForm.tsx","pages/Home.tsx","img/raise-value.png","pages/Login.tsx","services/maskMoney.ts","services/salesService.ts","pages/NewSale.tsx","services/clientService.ts","components/CardSales.tsx","components/TableSales.tsx","pages/Reports.tsx","pages/Sales.tsx","pages/CreateSalesBySchedule.tsx","components/ScheduleCard.tsx","pages/Schedule.tsx","components/CardSegment.tsx","components/buttons/ButtonFilterAction.tsx","pages/Segments.tsx","components/NavBarResponsive.tsx","RoutesApp.tsx","App.tsx","index.tsx"],"names":["LOCAL_STORAGE_LOGIN","authService","params","localStorage","setItem","JSON","stringify","removeItem","user","password","URL","process","axios","post","then","res","data","status","catch","err","response","token","jwt","verify","error","decode","loginInLocalStorage","getItem","parse","initialState","userName","refreshToken","redirectLoginPageUri","authenticatedSlice","createSlice","name","reducers","loginAdded","reducer","state","action","userInfos","payload","prepare","validateToken","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","authenticated","set","tagTypes","endpoints","builder","getClients","query","providesTags","addNewClient","mutation","initialClient","url","method","body","invalidatesTags","updateClient","client","deleteClient","id","getSegments","addNewSegment","segment","updateSegment","deleteSegment","getSchedulesByDate","date","getSchedulesByClient","addNewSchedule","useGetClientsQuery","useAddNewClientMutation","useUpdateClientMutation","useDeleteClientMutation","useGetSegmentsQuery","useAddNewSegmentMutation","useUpdateSegmentMutation","useDeleteSegmentMutation","useAddNewScheduleMutation","useGetSchedulesByDateQuery","useGetSchedulesByClientQuery","scheduleSlice","procedure","time","price","phone","pacote","qtdTotalAtendimento","qtdAtendimento","onEditClient","salesSlice","onCreateSales","store","configureStore","authenticatedReducer","scheduleReducer","salesReducer","middleware","getDefaultMiddleware","concat","randomId","uuid","AlertSuccess","props","title","Alert","severity","color","className","AlertInfo","AlertError","Breadcumb","page","to","map","item","link","WhatsAppService","event","contact","preventDefault","isPacote","dateUrl","Date","toLocaleDateString","timeZone","text","redirect","window","encodeURIComponent","open","replace","CardClients","clients","setId","style","alignItems","display","type","onClick","e","border","backgroundColor","outline","xmlns","width","height","fill","viewBox","d","fillRule","email","CircularIndeterminate","position","top","left","right","bottom","zIndex","justifyContent","ComboBox","options","selectValue","value","Autocomplete","disablePortal","freeSolo","renderInput","TextField","label","onInputChange","onChange","TitlePage","TopModal","button","click","data_target","tabIndex","role","HTTP_RESPONSE","SUCCESS","BAD_REQUEST","NOT_FOUND","UNAUTHORIZED","CONFLICT","ERROR","TIMEOUT","SearchFilterButton","borderRadius","ClearSearchFilterButton","SearchButton","Clients","loader","navigate","useNavigate","auth","useSelector","isLoading","isSuccess","errorFetchClients","segments","isLoadingDelete","useState","loaderClients","setLoaderClients","clientView","setClientView","deletedClientSuccess","setDeletedClientSuccess","filterClientById","setFilterClientById","filterClientBySegment","setFilterClientBySegment","dispatch","useDispatch","useEffect","length","onDeleteClient","unwrap","console","log","clearFilters","inputFilterName","document","querySelector","inputFilterSegment","setTimeout","snniperClient","overflow","whiteSpace","filterBySegmentElement","getElementById","filterByNameElement","filterClientsElement","filerClientElement","clientsById","filter","filterClientSelectedById","clientsBySegment","filterClientSelectedBySegment","API_RV_BASE_URI","clientHistoryService","description","URI","authorization","get","date1","date2","ClearFields","callback","InputText","variant","sx","fontFamily","InputDate","idComponent","idInput","LabelForm","clearDate1","date1Element","SelectPeriod","getSalesInPeriodResponse","setDate1","setDate2","filterByClient","setDataClient","clearFields","filterByDateElement","filterByPeriod","filterByDateInPeriod","filterByDateInPeriod2","inputClientElement","clearAllFilters","target","flexDirection","TableHistory","clientHistory","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","Row","React","setOpen","borderBottom","IconButton","size","scope","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","gutterBottom","ClientHistory","isLoadingGetClients","serverError","setServerError","historyNotFound","setHistoryNotFound","setClientHistory","clientSelected","setClientSelected","clearSchedule","setClearSchedule","invalidParams","setInvalidParams","loaderHistory","setLoaderHistory","getHistoryInPeriodResponse","request","clearDates","date2Element","buttonSelector","CreateHistory","setClient","setDescription","setDate","historyResgisterSuccess","setHistoryRegisterSuccess","historyRegisterFail","setHistoryRegisterFail","alert","setAlert","saveSale","trim","includes","content","onSubmit","ScheduleForm","clientSaves","setProcedure","dateNewSchedule","setDateNewSchedule","setTime","setContact","clearStates","edit","addNewClientSchedule","errorClientSchedule","setPacoteFunc","setQtdTotalAtendimentoFuncion","form","mask","placeholder","CreateSchedule","isLoadingNewSchedule","setPacote","setQtdTotalAtendimento","setPrice","qtd","FormClients","setName","setEmail","setPhone","setSegmentSelect","segmentSelect","onChangeClient","required","CreateClient","onSaveClient","segmentSelected","ComeBack","EditClient","clientId","useParams","editClient","find","isLoadingUpdate","isSuccessUpdate","onUpdateClient","emailField","scheduleService","put","delete","EditScheduleForm","scheduleId","schedule","onChangeSchedule","Home","navbar","LoginPage","setUser","showPassword","setPassword","credentials","setCredentials","loadFetchClient","setLoadFetchClient","saveLoginUser","login","prop","alt","src","logo","onMouseDown","precision","decimalSeparator","thousandSeparator","allowNegative","prefix","suffix","maskedValue","undefined","String","digits","match","numberIsNegative","negativeSignCount","allDigitsAreZero","idx","unshift","splice","Number","join","toFixed","split","raw","decimalpos","x","push","salesService","moment","format","date1Valid","sales","parseInt","substring","reduce","acc","toLocaleString","currency","NewSale","clientName","setClientName","saleRegisterSuccess","setSaleRegisterSuccess","saleRegisterFail","setSaleRegisterFail","selectClientButton","ev","clientService","CardSales","nameClient","Set","Math","round","sort","a","b","TableSales","info","Reports","setClientSaves","salesForClient","setSalesForClient","setSegment","emptySale","setEmptySale","salesLastWeek","setSalesLastWeek","salesActualtWeek","setSalesActualWeek","salesLastMonth","setSalesLastMonth","salesActualMonth","setSalesActualMonth","clearTableSalesForClient","setClearTableSalesForClient","isMounted","primaryDateLastWeek","subtract","day","lastDateLastWeek","primaryDateWeek","lastDateWeek","getSalesLastWeek","getSalesActualWeek","dateStartLastMonth","startOf","dateEndLastMonth","endOf","dateStartActualMonth","dateEndActualMonth","getSalesLastMonth","getSalesActualMonth","Promise","all","getSalesWeek","getSaleMonth","reportClientInfo","HeaderModal","idCollapse","Sales","setSales","salesTodayNotFound","setSalesTodayNotFound","fetchSalesSuccess","setFetchSalesSuccess","setClearFields","salesNotFound","setSalesNotFound","loaderSales","setloaderSales","getSalesTodayResponse","CreateSalesBySchedule","salesCreate","isLoadingCreateSales","setIsLoadingCreateSales","ScheduleCard","setIdScheduleDeleted","expired","elevation","isDefeated","Schedule","schedules","setSchedule","expiredSchedules","setExpiredSchedules","idScheduleDeleted","scheduleDeletedSuccess","setScheduleDeletedSuccess","fetchScheduleSuccess","setFetchScheduleSuccess","scheduleNotFound","setScheduleNotFound","scheduleFinish","setScheduleFinish","loaderState","setLoaderState","result","getScheduleResponse","finishScheduleResponse","expiredScheduleFinish","deleteClientScheduleResponse","dateLoad","clickButtonSelect","filterByClientElement","expire","CardSegment","editSegment","actionCreate","actionUpdate","actionName","setNewSegment","ButtonFilterAction","dataToggle","dataTarget","Segments","addSegment","isLoadingAdd","titleCardSegment","setTitleCardSegment","setActionName","editSegmentName","setEditSegmentName","setEditSegment","segmentActual","setSegmentActual","selectSegment","setSelectSegment","getSegment","clearFindClients","formFieldsIsValids","onAddNewSegment","updateSegmentRequest","onDeleteSegment","showActions","NavBarResponsive","closeItens","scheduleElement","clientElement","salesElement","atendimentoElement","navGroupElement","closeNavResponsive","RoutesApp","path","element","App","ReactDOM","createRoot","render"],"mappings":"+hBAMMA,EAAsB,gBAStBC,EAAc,SAYMC,GACtBC,aAAaC,QAAQJ,EAAqBK,KAAKC,UAAUJ,GAC1D,EAdGD,EAAc,WAiBhBE,aAAaI,WAAWP,EACzB,EAlBGC,EAAc,SAoBFO,EAAcC,GAAsC,OAAD,2IAC3DC,EAD2D,UA/B7CC,mCA+B6C,8BAGlCC,IAC5BC,KAAKH,EAAK,CACTF,KAAMA,EACNC,SAAUA,IAEXK,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAAWD,EAAIC,SAASJ,KAAOG,EAAIC,SAC7CH,OAAQE,EAAIC,SAAWD,EAAIC,SAASH,OAASE,EAAIC,SAF5C,IATwD,uBAGzDJ,EAHyD,EAGzDA,KAAMC,EAHmD,EAGnDA,OAHmD,kBAc1D,CAAED,OAAMC,WAdkD,4CAelE,EAnCGhB,EAAc,SA0CLoB,GACX,IAEE,OADAC,IAAIC,OAAOF,EAtDIV,yCAuDR,CAGR,CAFC,MAAOa,GACP,OAAO,CACR,CACF,EAjDGvB,EAAc,SAmDCoB,GACjB,IAAMb,EAAYc,IAAIG,OAAOJ,GAE7B,OAAIb,EACKA,EAAKA,KAEP,EACR,ECrEGkB,EDWc,WAEhB,IAAMlB,EAAOL,aAAawB,QAAQ3B,GAClC,IAAKQ,EAAM,OAAO,KAClB,IAEE,OADiBH,KAAKuB,MAAMpB,EAI7B,CAFC,MAAOgB,GACP,OAAO,IACR,CACF,CCrByBvB,GAEtB4B,EAA0B,CAC9BC,SAAUJ,EAAsBA,EAAoBI,SAAW,KAC/DT,MAAOK,EAAsBA,EAAoBL,MAAQ,KACzDU,aAAcL,EAAsBA,EAAoBK,aAAe,KACvEC,qBAAsB,UAGlBC,EAAqBC,YAAY,CACrCC,KAAM,gBACNN,eACAO,SAAU,CACRC,WAAY,CACVC,QADU,SACFC,EAAkBC,GACxBvC,IACA,IAAMwC,EAAS,2BACVD,EAAOE,SADG,IAEbZ,SAAU7B,EACRuC,EAAOE,QAAQrB,SAGnBpB,EAAoCwC,GACpCF,EAAMT,SAAWW,EAAUX,SAC3BS,EAAMlB,MAAQmB,EAAOE,QAAQrB,KAC9B,EACDsB,QAbU,SAaFzC,GAGN,MAAO,CACLwC,QAAS,CACPrB,MAAOnB,EAAOmB,MACdU,aAAc7B,EAAO6B,cAG1B,GAEHa,cAAe,CACbN,QADa,SACLC,EAAkBC,GACpBvC,EAAyBuC,EAAOE,WAGpCH,EAAMlB,MAAQ,KACdpB,IACD,EACD0C,QARa,SAQLzC,GACN,MAAO,CAAEwC,QAASxC,EACnB,MAKA,EAAsC+B,EAAmBY,QAAjDR,EAAR,EAAQA,WAAYO,EAApB,EAAoBA,cAEZX,IAAf,Q,iBCxDaa,EAAWC,YAAU,CAChCC,YAAa,MACbC,UAAWC,YAAe,CACxBC,QAAQ,GAAD,OAAKxC,mCAAL,QACPyC,eAAgB,SAACC,EAAD,GAAiC,IACzChC,GAAQiC,EADgC,EAApBA,YACDC,cAAclC,MAEvC,OADAgC,EAAQG,IAAI,gBAAiBnC,GACtBgC,CACR,IAEHI,SAAU,CAAC,UAAW,YACtBC,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,iBAAM,aAAN,EACPC,aAAc,CAAC,aAEjBC,aAAcJ,EAAQK,SAAS,CAC7BH,MAAO,SAACI,GAAD,MAAoB,CACzBC,IAAK,iBACLC,OAAQ,OACRC,KAAMH,EAHD,EAKPI,gBAAiB,CAAC,aAEpBC,aAAcX,EAAQK,SAAS,CAC7BH,MAAO,SAACU,GAAD,MAAa,CAClBL,IAAK,iBACLC,OAAQ,MACRC,KAAMG,EAHD,EAKPF,gBAAiB,CAAC,aAEpBG,aAAcb,EAAQK,SAAS,CAC7BH,MAAO,SAACU,GAAD,MAAa,CAClBL,IAAK,UACLC,OAAQ,SACRjE,OAAQ,CAAEuE,GAAIF,GAHT,EAKPF,gBAAiB,CAAC,aAEpBK,YAAaf,EAAQE,MAAM,CACzBA,MAAO,iBAAM,WAAN,EACPC,aAAc,CAAC,cAEjBa,cAAehB,EAAQK,SAAS,CAC9BH,MAAO,SAACe,GAAD,MAAc,CACnBV,IAAK,kBACLC,OAAQ,OACRC,KAAMQ,EAHD,EAKPP,gBAAiB,CAAC,cAEpBQ,cAAelB,EAAQK,SAAS,CAC9BH,MAAO,SAACe,GAAD,MAAc,CACnBV,IAAK,kBACLC,OAAQ,MACRC,KAAMQ,EAHD,EAKPP,gBAAiB,CAAC,cAEpBS,cAAenB,EAAQK,SAAS,CAC9BH,MAAO,SAAC3D,GAAD,MAAa,CAClBgE,IAAK,WACLC,OAAQ,SACRjE,OAAQ,CAAEuE,GAAIvE,EAAOuE,GAAIG,QAAS1E,EAAO0E,SAHpC,EAKPP,gBAAiB,CAAC,cAEpBU,mBAAoBpB,EAAQE,MAAM,CAChCA,MAAO,SAAC3D,GAAD,MAAa,CAClBgE,IAAK,iBACLC,OAAQ,MACRjE,OAAQ,CAAE8E,KAAM9E,EAAO8E,MAHlB,IAMTC,qBAAsBtB,EAAQE,MAAM,CAClCA,MAAO,SAAC3D,GAAD,MAAa,CAClBgE,IAAK,mBACLC,OAAQ,MACRjE,OAAQ,CAAE8E,KAAM9E,EAAOqE,QAHlB,IAMTW,eAAgBvB,EAAQK,SAAS,CAC/BH,MAAO,SAAC3D,GAAD,MAAa,CAClBgE,IAAK,gBACLC,OAAQ,OACRC,KAAMlE,EAHD,IAxEA,IAkFXiF,EAWErC,EAXFqC,mBACAC,EAUEtC,EAVFsC,wBACAC,EASEvC,EATFuC,wBACAC,EAQExC,EARFwC,wBACAC,EAOEzC,EAPFyC,oBACAC,EAME1C,EANF0C,yBACAC,EAKE3C,EALF2C,yBACAC,EAIE5C,EAJF4C,yBAGAC,GACE7C,EAHF8C,2BAGE9C,EAFF+C,6BAEE/C,EADF6C,2BC5EIG,EAAgB5D,YAAY,CAChCC,KAAM,WACNN,aAf8B,CAC9B4C,GAAI,GACJF,OAAQ,GACRwB,UAAW,GACXf,KAAM,GACNgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,QAAQ,EACRC,oBAAqB,EACrBC,eAAgB,IAMhBjE,SAAU,CACRkE,aAAc,CACZhE,QADY,SACJC,EAAkBC,GACxBD,EAAMkC,GAAKjC,EAAOE,QAAQ+B,GAC1BlC,EAAMgC,OAAS/B,EAAOE,QAAQ6B,OAC9BhC,EAAMwD,UAAYvD,EAAOE,QAAQqD,UACjCxD,EAAMyC,KAAOxC,EAAOE,QAAQsC,KAC5BzC,EAAMyD,KAAOxD,EAAOE,QAAQsD,KAC5BzD,EAAM0D,MAAQzD,EAAOE,QAAQuD,MAC7B1D,EAAM2D,MAAQ1D,EAAOE,QAAQwD,MAC7B3D,EAAM4D,OAAS3D,EAAOE,QAAQyD,OAC9B5D,EAAM6D,oBAAsB5D,EAAOE,QAAQ0D,oBAC3C7D,EAAM8D,eAAiB7D,EAAOE,QAAQ2D,cACvC,EACD1D,QAbY,SAaJD,GACN,MAAO,CACLA,UAEH,MAKQoD,IAAf,QACeQ,EAAiBR,EAAcjD,QAA/ByD,aCrCTC,EAAarE,YAAY,CAC7BC,KAAM,QACNN,aAV2B,CAC3B4C,GAAI,GACJF,OAAQ,GACRwB,UAAW,GACXf,KAAM,GACNiB,MAAO,IAMP7D,SAAU,CACRoE,cAAe,CACblE,QADa,SACLC,EAAeC,GACrBD,EAAMkC,GAAKjC,EAAOE,QAAQ+B,GAC1BlC,EAAMgC,OAAS/B,EAAOE,QAAQ6B,OAC9BhC,EAAMwD,UAAYvD,EAAOE,QAAQqD,UACjCxD,EAAMyC,KAAOxC,EAAOE,QAAQsC,KAC5BzC,EAAM0D,MAAQzD,EAAOE,QAAQuD,KAC9B,EACDtD,QARa,SAQLD,GACN,MAAO,CACLA,UAEH,MAKQ6D,IAAf,QACeC,EAAkBD,EAAW1D,QAA7B2D,cCnCFC,EAAQC,YAAe,CAClCpE,SAAO,GACLiB,cAAeoD,GADV,cAEJ7D,EAASE,YAAcF,EAASR,SAF5B,yBAGKsE,GAHL,sBAIEC,GAJF,GAMPC,WAAY,SAACC,GAAD,OACVA,IAAuBC,OAAOlE,EAASgE,WAD7B,I,SCXP,SAASG,IACd,OAAOC,aACR,C,qCCFM,SAASC,GAAaC,GAC3B,IAAQC,EAAUD,EAAVC,MACR,OACE,eAACC,GAAA,EAAD,CACEC,SAAS,UACTC,MAAM,UACNC,UAAU,+CAHZ,SAKGJ,GAGN,CCXM,SAASK,GAAUN,GACxB,IAAQC,EAAUD,EAAVC,MACR,OACE,eAACC,GAAA,EAAD,CACEC,SAAS,OACTC,MAAM,OACNC,UAAU,+CAHZ,SAKGJ,GAGN,CCXM,SAASM,GAAWP,GACzB,IAAQC,EAAUD,EAAVC,MACR,OACE,eAACC,GAAA,EAAD,CACEC,SAAS,QACTC,MAAM,QACNC,UAAU,6CAHZ,SAKGJ,GAGN,CCHM,SAASO,GAAUR,GACxB,IAAQS,EAAST,EAATS,KAER,OACE,sBAAKJ,UAAU,OAAf,SACE,sBAAK,aAAW,kBAAhB,SACE,sBAAIA,UAAU,+BAAd,UACE,qBAAIA,UAAU,kBAAd,SACE,eAAC,IAAD,CAAMK,GAAG,QAAT,mBADmCb,KAGpCY,EAAKE,KAAI,SAACC,GACT,OAAIA,EAAKC,KAEL,qBACER,UAAU,yBACV,eAAa,OAFf,SAKE,eAAC,IAAD,CAAMK,GAAIE,EAAKC,KAAf,SAAgCD,EAAK7F,QAFhC8E,KAOT,qBACEQ,UAAU,yBACV,eAAa,OAFf,SAKGO,EAAK7F,MAFD8E,IAKV,UAKV,CC9CM,IAAMiB,GAAkB,SAE3BC,EACA5D,EACA6D,EACApD,EACAgB,EACAI,EACAC,EACAN,GAEAoC,EAAME,iBACN,IAAMC,EAAWlC,EAAmB,sBACpBC,EAAiB,EADG,0BAEhC,GACEkC,EAAU,IAAIC,KAAKxD,GAAMyD,mBAAmB,QAAS,CACzDC,SAAU,QAENC,EAAI,iBAAUpE,EAAV,iEAAsEgE,EAAtE,kBAAoFvC,EAApF,qBAAqGsC,EAArG,2BAAgIvC,EAAhI,2BACJrF,EAAG,gDAA4C0H,EAA5C,UACHQ,EAAWC,OAAOC,mBAAmBH,GAC3CE,OAAOE,KAAKrI,EAAMkI,EAAU,SAC7B,EAtBUV,GAAkB,SAwBVC,EAA6BC,GAC9CD,EAAME,iBACN,IAAM3H,EAAG,gDAA4C0H,EAAQY,QAC3D,WACA,KAEFH,OAAOE,KAAKrI,EAAK,SAClB,ECnBI,SAASuI,GAAY7B,GAC1B,IAAQ8B,EAAmB9B,EAAnB8B,QAASC,EAAU/B,EAAV+B,MAEjB,OACE,+BACGD,EACGA,EAAQnB,KAAI,SAACC,GACX,OACE,uBAAKP,UAAU,mCAAf,UACE,sBAAKA,UAAU,cAAf,SACE,uBAAKA,UAAU,WAAW2B,MAAO,CAAEC,WAAY,UAA/C,UACE,sBAAI5B,UAAU,yCAAd,qBACW,IACT,wBAAOA,UAAU,gBAAjB,SAAkCO,EAAK7F,UAGzC,uBACEiH,MAAO,CACLE,QAAS,QAFb,UAKE,yBACEC,KAAK,SACL9B,UAAU,qCACV+B,QAAS,SAACC,GAAD,OACPvB,GAAmCuB,EAAGzB,EAAK9B,MADpC,EAGTkD,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QATb,SAYE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QACLvC,UAAU,iBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,mjCAGZ,eAAC,IAAD,CAAMzC,UAAU,GAAGK,GAAE,sBAAiBE,EAAKvD,IAA3C,SACE,yBACE8E,KAAK,SACL9B,UAAU,oBAEV2B,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QAPb,SAUE,uBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLvC,UAAU,sBACVwC,QAAQ,YANV,UAQE,uBAAMC,EAAE,2NACR,uBACEC,SAAS,UACTD,EAAE,yLAlBDjD,OAuBT,yBACEsC,KAAK,SACL9B,UAAU,uCACV,cAAY,QACZ,cAAY,iBACZ+B,QAAS,SAACC,GAAD,OAAON,EAAMnB,EAAKvD,GAAlB,EACT2E,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QATb,SAYE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,MACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,2TAMlB,uBAAKzC,UAAU,2BAAf,UACGO,EAAKoC,MACJ,sBAAI3C,UAAU,2EAAd,oBACU,IACR,wBAAOA,UAAU,qBAAjB,SAAuCO,EAAKoC,WAE5C,KACJ,sBAAI3C,UAAU,mDAAd,sBACY,IACV,wBAAOA,UAAU,qBAAjB,SAAuCO,EAAK9B,WAE7C8B,EAAKpD,QACJ,sBAAI6C,UAAU,yEAAd,sBACY,IACV,wBAAOA,UAAU,qBAAjB,SACGO,EAAKpD,aAGR,UA3G+CoD,EAAKvD,GA+G/D,IACD,MAGT,CCrIM,SAAS4F,KACd,OACE,sBACEjB,MAAO,CACLE,QAAS,OACTgB,SAAU,QACVR,MAAO,MACPC,OAAQ,OACRQ,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,EACRf,gBAAiB,qBACjBgB,OAAQ,EACRC,eAAgB,SAChBvB,WAAY,UAbhB,SAgBE,sBAAK5B,UAAU,YAGpB,C,wBCXM,SAASoD,GAASzD,GACvB,IAAQC,EAAyDD,EAAzDC,MAAOyD,EAAkD1D,EAAlD0D,QAASC,EAAyC3D,EAAzC2D,YAAaC,EAA4B5D,EAA5B4D,MAAOvD,EAAqBL,EAArBK,UAAW2B,EAAUhC,EAAVgC,MAEvD,OACE,eAAC6B,GAAA,EAAD,CACEC,eAAa,EACbzG,GAAG,iBACH0G,UAAQ,EACRL,QAASA,EACTM,YAAa,SAAClL,GAAD,OAAY,eAACmL,GAAA,EAAD,2BAAenL,GAAf,IAAuBoL,MAAOjE,IAA1C,EACb2D,MAAOA,EACPO,cAAeR,EACfS,SAAUT,EACVtD,UAAWA,EACX2B,MAAOA,GAGZ,CC7BM,SAASqC,GAAUrE,GACxB,OAAO,qBAAIK,UAAU,aAAd,SAA4BL,EAAMC,OAC1C,CCUM,SAASqE,GAAStE,GACvB,IAAQ3C,EAA2D2C,EAA3D3C,GAAI4C,EAAuDD,EAAvDC,MAAOsE,EAAgDvE,EAAhDuE,OAAQC,EAAwCxE,EAAxCwE,MAAOC,EAAiCzE,EAAjCyE,YAAazH,EAAoBgD,EAApBhD,KAAMqD,EAAcL,EAAdK,UAErD,OACE,sBACEA,UAAU,aACVhD,GAAIA,EACJqH,UAAW,EACXC,KAAK,SACL,kBAAgB,oBAChB,cAAY,OACZ,cAAY,QAPd,SASE,sBAAKtE,UAAU,qCAAqCsE,KAAK,WAAzD,SACE,uBAAKtE,UAAU,gBAAf,UACE,uBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,cAAchD,GAAG,oBAA/B,SACG4C,IAEH,yBACEkC,KAAK,SACL9B,UAAU,QACV,eAAa,QACb,aAAW,SAJb,SAME,uBAAM,cAAY,OAAlB,uBAGJ,sBAAKA,UAAU,uBAAf,SAAuCrD,IACvC,uBAAKqD,UAAU,eAAf,UACE,yBACE8B,KAAK,SACL9B,UAAU,oBACV,eAAa,QAHf,oBAOCkE,GACC,yBACEpC,KAAK,SACLC,QAASoC,EACT,cAAaC,EACbpE,UAAWA,EACX,eAAa,QALf,SAOGkE,aAQhB,CCjEM,IAAMK,GAAgB,CAC3BC,QAAS,CAAC,IAAK,KACfC,YAAa,IACbC,UAAW,IACXC,aAAc,IACdC,SAAU,IACVC,MAAO,KAGIC,GACI,ICHV,SAASC,GAAmBpF,GACjC,OACE,sBACEK,UAAU,iBACV2B,MAAO,CACLE,QAAS,gBAHb,SAME,0BACE7B,UAAU,uBACV2B,MAAO,CACLE,QAAS,OACTD,WAAY,SACZoD,aAAc,QAEhBjD,QAASpC,EAAMoC,QAPjB,UAUE,sBAAK/B,UAAU,wBAAf,SAAwCL,EAAMuB,OAC9C,sBACEkB,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLvC,UAAU,eACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,kMAXLjD,MAgBZ,CCnCM,SAASyF,GAAwBtF,GACtC,OACE,sBACEK,UAAU,iBACV2B,MAAO,CACLE,QAAS,gBAHb,SAME,yBACE7B,UAAU,2CACV2B,MAAO,CACLqD,aAAc,OACd/C,OAAQ,aAEVF,QAASpC,EAAMoC,QANjB,4BAYL,CCnBM,SAASmD,GAAavF,GAC3B,OACE,yBACEK,UAAU,iCACV+B,QAASpC,EAAMoC,QACfJ,MAAOhC,EAAMgC,MAHf,SAKE,sBACES,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,eACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,iMAIf,CCMM,SAAS0C,KACd,IAoCIC,EApCAC,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IAEzB,EAKI4B,EAAmB,IALvB,IACEnE,KAAMkI,OADR,MACkB,GADlB,EAEEgE,EAFF,EAEEA,UACAC,EAHF,EAGEA,UAHF,IAIE3L,MAAO4L,OAJT,MAI6B,CAAC,EAJ9B,EAOA,EAAgC7H,EAAoB,IAA5CvE,KAAMqM,OAAd,MAAyB,GAAzB,EAEA,EACE/H,IADF,mBAAOd,EAAP,KAAkC8I,EAAlC,KAAuBJ,UAGvB,EAAoBK,mBAAwB,MAA5C,mBAAO9I,EAAP,KAAW0E,EAAX,KACA,EAA0CoE,qBAA1C,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAoCF,mBAAoB,IAAxD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EACEJ,oBAAkB,GADpB,mBAAOK,EAAP,KAA6BC,EAA7B,KAGA,EAAgDN,mBAAiB,IAAjE,mBAAOO,EAAP,KAAyBC,EAAzB,KACA,EACER,mBAAiB,IADnB,mBAAOS,EAAP,KAA8BC,EAA9B,KAGMC,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAE7CE,EAAQmF,OAAS,GAAGV,EAAczE,EACvC,GAAE,CAAC8D,EAAMF,EAAU5D,EAASgF,IAIzBhB,GAAaI,EACfT,EAAS,eAACxC,GAAD,IACA8C,IACTN,EAAS,MAGX,IAAMyB,EAAc,iDAAG,WACrBnG,EACA1D,GAFqB,kFAIrB0D,EAAME,iBAJe,kBAOb7D,EAAaC,GAAI8J,SAPJ,OAQnBV,GAAwB,GARL,gDAUnBW,QAAQC,IAAR,MAVmB,yDAAH,wDA0CdC,EAAe,SAACvG,GACpBA,EAAME,iBAEN,IAAMsG,EAAkBC,SAASC,cAAT,gEAIpBF,GAAiBA,EAAgB/C,QAErC,IAAMkD,EAAqBF,SAASC,cAAT,oEAIvBC,GAAoBA,EAAmBlD,QAE3C+B,EAAczE,EACf,EAEG0E,GACFmB,YAAW,kBAAMlB,GAAwB,EAA9B,GAAsCtB,IAG/CiB,GACFuB,YAAW,kBAAMtB,EAAiB,KAAvB,GAA8BlB,IAG3C,IAAIyC,EAAgB,KAUpB,OARI5B,EAAkBnM,SAAW+K,GAAcG,UAC7C6C,EAAgB,eAACtH,GAAD,CAAWL,MAAM,kCACxB+F,EAAkBnM,SAAW+K,GAAcM,QACpD0C,EACE,eAACrH,GAAD,CAAYN,MAAM,0DAKpB,uBAAKI,UAAU,iBAAf,UACE,eAACG,GAAD,CAAWC,KAAM,CAAC,CAAEI,MAAM,EAAO9F,KAAM,eAEvC,eAACsJ,GAAD,CAAWpE,MAAM,aAEjB,uBAAKI,UAAU,YAAf,UACE,+DACCiG,EAAWW,UAGd,uBACE5G,UAAU,YACV2B,MAAO,CACL6F,SAAU,OACVC,WAAY,SACZ5F,QAAS,QACTD,WAAY,UANhB,UASE,eAACmD,GAAD,CACEhD,QAAS,SAACC,GACRiF,EAAajF,GACb,IAAM0F,EACJP,SAASQ,eAAe,oBACpBC,EAAsBT,SAASQ,eAAe,gBAEN,UAApB,OAAtBD,QAAsB,IAAtBA,OAAA,EAAAA,EAAwB/F,MAAME,SAChC6F,EAAuB/F,MAAME,QAAU,OAEnC6F,IACFA,EAAuB/F,MAAME,QAAU,QAGvC+F,IAAqBA,EAAoBjG,MAAME,QAAU,OAC9D,EACDX,KAAK,aAGP,eAAC6D,GAAD,CACEhD,QAAS,SAACC,GACRiF,EAAajF,GACb,IAAM0F,EACJP,SAASQ,eAAe,oBACpBC,EAAsBT,SAASQ,eAAe,gBAET,UAApB,OAAnBC,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBjG,MAAME,SAC7B+F,EAAoBjG,MAAME,QAAU,OAEhC+F,IACFA,EAAoBjG,MAAME,QAAU,QAGpC6F,IACFA,EAAuB/F,MAAME,QAAU,OAC1C,EACDX,KAAK,SAGP,eAAC+D,GAAD,CACElD,QAAS,SAACC,GACRiF,EAAajF,GAEb,IAAM6F,EACJV,SAASQ,eAAe,gBACtBE,IACFA,EAAqBlG,MAAME,QAAU,QACvC,IAAMiG,EACJX,SAASQ,eAAe,oBAEtBG,IAAoBA,EAAmBnG,MAAME,QAAU,OAC5D,OAIL,uBACE7B,UAAU,kBACV2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,eALL,UAOE,eAACoG,GAAD,CACExD,MAAM,mBACNyD,QAAS5B,EAAQnB,KAAI,SAACC,GAAD,MAAoB,CACvCsD,MAAOtD,EAAK7F,KACZsC,GAAIuD,EAAKvD,GAFU,IAIrBsG,YAAa,SACXtB,EACAzB,GAFW,OAGR+F,EAAoB/F,EAAOA,EAAKvD,GAAK,GAH7B,EAIb2E,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GAAD,OAjKgB,SAC/BtB,EACA1D,GAIA,GAFA0D,EAAME,iBAEF5D,EAAJ,CACE,IAAM+K,EAActG,EAAQuG,QAAO,SAAClL,GAAD,OAAqBA,EAAOE,KAAOA,CAAnC,IACnCkJ,EAAc6B,EAEf,CACF,CAuJSE,CAAyBjG,EAAGqE,EADrB,OAKb,uBACErG,UAAU,kBACV2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,mBALL,UAOE,eAACoG,GAAD,CACExD,MAAM,uBACNyD,QAASuC,EAAStF,KAAI,SAACC,GAAD,MAAqB,CACzCsD,MAAOtD,EAAKpD,QACZH,GAAIuD,EAAKvD,GAFW,IAItBsG,YAAa,SACXtB,EACAzB,GAFW,OAGRiG,EAAyBjG,EAAOA,EAAKsD,MAAQ,GAHrC,EAIblC,MAAO,CACLU,MAAO,WAIX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GAAD,OAhLqB,SACpCtB,EACAvD,GAIA,GAFAuD,EAAME,iBAEFzD,EAAJ,CACE,IAAM+K,EAAmBzG,EAAQuG,QAC/B,SAAClL,GAAD,OAAqBA,EAAOK,UAAYA,CAAxC,IAEF+I,EAAcgC,EAEf,CACF,CAoKSC,CAA8BnG,EAAGuE,EAD1B,OAMZnB,EAED,eAACnB,GAAD,CACEjE,UAAU,iBACVhD,GAAG,gBACH4C,MAAM,mBACNjD,KAAK,+CACLwH,MAAO,SAACnC,GAAD,OAAiC6E,EAAe7E,EAAGhF,GAAU,GAA7D,EACPkH,OAAO,YAGT,sBAAKlE,UAAU,OAAf,SAAuBuH,KAEG,IAAzBpB,EACC,eAACzG,GAAD,CAAcE,MAAM,qCAClB,KAEJ,eAAC4B,GAAD,CAAaC,QAASwE,EAAYvE,MAAOA,MAG9C,CC7SD,IAAM0G,GAAkBlP,mCAEXmP,GAAuB,SAEhCzO,EACAkD,EACAwL,EACA/K,GACoB,OAAD,2IACbgL,EADa,UACJH,GADI,yCAGcjP,IAC5BC,KACCmP,EACA,CACEzL,SACAwL,cACA/K,QAEF,CAAE3B,QAAS,CAAE4M,cAAe5O,KAE7BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAdQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAmBV,CAAED,OAAMC,WAnBE,4HAuBpB,EA7BU6O,GAAuB,SA+BTzO,EAAekD,GAAoC,OAAD,2IACnEyL,EADmE,UAC1DH,GAD0D,yCAGxCjP,IAC5BsP,IAAIF,EAAK,CACR9P,OAAQ,CAAEqE,UACVlB,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAT8D,uBAG/DD,EAH+D,EAG/DA,KAAMC,EAHyD,EAGzDA,OAHyD,kBAchE,CAAED,OAAMC,WAdwD,4HAkB1E,EAjDU6O,GAAuB,SAmDXzO,EAAe2D,GAAkC,OAAD,2IAC/DgL,EAD+D,UACtDH,GADsD,uCAGpCjP,IAC5BsP,IAAIF,EAAK,CACR9P,OAAQ,CAAE8E,QACV3B,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAT0D,uBAG3DD,EAH2D,EAG3DA,KAAMC,EAHqD,EAGrDA,OAHqD,kBAc5D,CAAED,OAAMC,WAdoD,4HAkBtE,EArEU6O,GAAuB,SAwEhCzO,EACA8O,EACAC,GACoB,OAAD,2IACbJ,EADa,UACJH,GADI,yCAGcjP,IAC5BsP,IAAIF,EAAK,CACR9P,OAAQ,CAAEiQ,QAAOC,SACjB/M,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IATQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAcV,CAAED,OAAMC,WAdE,4HAkBpB,EA7FU6O,GAAuB,SAgGhCzO,EACAkD,EACA4L,EACAC,GACoB,OAAD,2IACb1P,EADa,UACJmP,GADI,8CAGcjP,IAC5BsP,IAAIxP,EAAK,CACR2C,QAAS,CAAE4M,cAAe5O,GAC1BnB,OAAQ,CAAEqE,SAAQ4L,QAAOC,WAE1BtP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IATQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAcV,CAAED,OAAMC,WAdE,4HAkBpB,ECrHI,SAASoP,GAAYjJ,GAC1B,IAAQkJ,EAA+BlJ,EAA/BkJ,SAAUjJ,EAAqBD,EAArBC,MAAOI,EAAcL,EAAdK,UAEzB,OACE,yBACE8B,KAAK,SACL9B,UAAS,gDAA2CA,GACpD,cAAY,QACZ+B,QAAS,SAACC,GAAD,OAAO6G,EAAS7G,EAAhB,EAJX,SAMGpC,GAGN,CCjBM,SAASkJ,GAAUnJ,GACxB,IAAQmC,EAAuDnC,EAAvDmC,KAAM9E,EAAiD2C,EAAjD3C,GAAI6G,EAA6ClE,EAA7CkE,MAAOE,EAAsCpE,EAAtCoE,SAAU/D,EAA4BL,EAA5BK,UAAWuD,EAAiB5D,EAAjB4D,MAAO5B,EAAUhC,EAAVgC,MAErD,OACE,eAACiC,GAAA,EAAD,CACE9B,KAAMA,EACN9E,GAAIA,EACJ6G,MAAOA,EACPN,MAAOA,EACPwF,QAAQ,WACRhF,SAAUA,EACViF,GAAI,CACF3G,MAAO,OACP4G,WAAY,cAEdjJ,UAAWA,EACX2B,MAAOA,GAGZ,CCXM,SAASuH,GAAUvJ,GACxB,OACE,sBACEK,UAAS,UAAKL,EAAMK,WACpB2B,MAAK,aACHU,MAAO,SACJ1C,EAAMgC,OAEX3E,GAAI2C,EAAMwJ,YANZ,SAQE,eAACL,GAAD,CACEhH,KAAK,OACL+B,MAAM,IACN7G,GAAI2C,EAAMyJ,QACVrF,SAAUpE,EAAMoE,YAIvB,CC5BM,SAASsF,GAAU1J,GACxB,OAAO,wBAAOK,UAAU,OAAjB,SAAyBL,EAAMuB,MACvC,CCeD,SAASoI,KACP,IAAMC,EAAepC,SAASQ,eAC5B,eAEE4B,IAAcA,EAAahG,MAAQ,GACxC,CAuBM,SAASiG,GAAa7J,GAC3B,IACE8J,EAME9J,EANF8J,yBACAC,EAKE/J,EALF+J,SACAC,EAIEhK,EAJFgK,SACAC,EAGEjK,EAHFiK,eACAC,EAEElK,EAFFkK,cACAC,EACEnK,EADFmK,YAGF,OACE,uBAAK9J,UAAU,eAAf,UACE,uBACEA,UAAU,OACV2B,MAAO,CACL6F,SAAU,OACVC,WAAY,SACZ5F,QAAS,QACTD,WAAY,UANhB,UASE,eAACmD,GAAD,CACEhD,QAAS,SAACC,GACR8H,EAAY9H,GACZsH,KACA,IAAMS,EAAsB5C,SAASQ,eAAe,gBAC9CqC,EAAiB7C,SAASQ,eAAe,kBACzCsC,EAAuB9C,SAASQ,eACpC,wBAEIuC,EAAwB/C,SAASQ,eACrC,yBAEIiC,EAAiBzC,SAASQ,eAAe,kBAEJ,WAApB,OAAnBoC,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBpI,MAAME,SAC7BkI,EAAoBpI,MAAME,QAAU,OAEhCkI,IACFA,EAAoBpI,MAAME,QAAU,SAGpCmI,IAAgBA,EAAerI,MAAME,QAAU,QAC/CoI,IACFA,EAAqBtI,MAAME,QAAU,QACnCqI,IACFA,EAAsBvI,MAAME,QAAU,QACpC+H,IAAgBA,EAAejI,MAAME,QAAU,OACpD,EACDX,KAAK,SAGP,eAAC6D,GAAD,CACEhD,QAAS,SAACC,GACR8H,EAAY9H,GACZsH,KACA,IAAMS,EAAsB5C,SAASQ,eAAe,gBAC9CqC,EAAiB7C,SAASQ,eAAe,kBACzCsC,EAAuB9C,SAASQ,eACpC,wBAEIuC,EAAwB/C,SAASQ,eACrC,yBAEIiC,EAAiBzC,SAASQ,eAAe,kBAE3CoC,IAAqBA,EAAoBpI,MAAME,QAAU,QAEvB,UAApB,OAAdmI,QAAc,IAAdA,OAAA,EAAAA,EAAgBrI,MAAME,SACxBmI,EAAerI,MAAME,QAAU,QAE3BmI,IAAgBA,EAAerI,MAAME,QAAU,QAC/CoI,IACFA,EAAqBtI,MAAME,QAAU,SACnCqI,IACFA,EAAsBvI,MAAME,QAAU,UAGtC+H,IAAgBA,EAAejI,MAAME,QAAU,OACpD,EACDX,KAAK,eAGP,eAAC6D,GAAD,CACEhD,QAAS,SAACC,GACR8H,EAAY9H,GACZsH,KACA,IAAMS,EAAsB5C,SAASQ,eAAe,gBAC9CqC,EAAiB7C,SAASQ,eAAe,kBACzCsC,EAAuB9C,SAASQ,eACpC,wBAEIuC,EAAwB/C,SAASQ,eACrC,yBAEIiC,EAAiBzC,SAASQ,eAAe,kBAE3CsC,IACFA,EAAqBtI,MAAME,QAAU,QACnCmI,IAAgBA,EAAerI,MAAME,QAAU,QAC/CqI,IACFA,EAAsBvI,MAAME,QAAU,QACpCkI,IAAqBA,EAAoBpI,MAAME,QAAU,QAEvB,WAApB,OAAd+H,QAAc,IAAdA,OAAA,EAAAA,EAAgBjI,MAAME,SACxB+H,EAAejI,MAAME,QAAU,OAE3B+H,IAAgBA,EAAejI,MAAME,QAAU,QAEtD,EACDX,KAAK,YAGP,eAAC+D,GAAD,CACElD,QAAS,SAACC,GACR8H,EAAY9H,GAxIxB,WACE,IAAM+H,EAAsB5C,SAASQ,eAAe,gBAC9CqC,EAAiB7C,SAASQ,eAAe,kBACzCsC,EAAuB9C,SAASQ,eAAe,wBAC/CuC,EAAwB/C,SAASQ,eACrC,yBAEIiC,EAAiBzC,SAASQ,eAAe,kBACzCwC,EAAqBhD,SAASC,cAClC,0DAGE+C,GAAoBA,EAAmBhG,QACvCyF,IAAgBA,EAAejI,MAAME,QAAU,QAC/CmI,IAAgBA,EAAerI,MAAME,QAAU,QAC/CoI,IAAsBA,EAAqBtI,MAAME,QAAU,QAC3DqI,IAAuBA,EAAsBvI,MAAME,QAAU,QAC7DkI,IAAqBA,EAAoBpI,MAAME,QAAU,QAC7DyH,IACD,CAsHWc,EACD,OAIL,uBACEzI,MAAO,CACLE,QAAS,QAEX7E,GAAG,eACHgD,UAAU,gBALZ,UAOE,eAACqJ,GAAD,CAAWnI,KAAK,SAChB,uBACES,MAAO,CACLE,QAAS,QAFb,UAKE,eAACqH,GAAD,CACEC,YAAY,iBACZC,QAAQ,QACRrF,SAAU,SAAC/B,GAAD,OAAiC0H,EAAS1H,EAAEqI,OAAO9G,MAAnD,EACVvD,UAAU,KAEZ,eAACkF,GAAD,CACEnD,QAAS,SAACC,GACRyH,EAAyBzH,EAC1B,UAKP,sBACEL,MAAO,CACLE,QAAS,OACTyI,cAAe,UAEjBtN,GAAG,iBACHgD,UAAU,gBANZ,SAQE,uBACE2B,MAAO,CACLE,QAAS,OACTsB,eAAgB,gBAChBd,MAAO,QACPT,WAAY,YALhB,UAQE,uBACED,MAAO,CACLE,QAAS,SAFb,UAKE,eAACwH,GAAD,CAAWnI,KAAK,YAChB,eAACgI,GAAD,CACEC,YAAY,uBACZC,QAAQ,cACRrF,SAAU,SAAC/B,GAAD,OACR0H,EAAS1H,EAAEqI,OAAO9G,MADV,OAMd,uBACE5B,MAAO,CACLE,QAAS,SAFb,UAKE,eAACwH,GAAD,CAAWnI,KAAK,UAChB,eAACgI,GAAD,CACEC,YAAY,wBACZC,QAAQ,QACRrF,SAAU,SAAC/B,GAAD,OACR2H,EAAS3H,EAAEqI,OAAO9G,MADV,OAKd,eAAC2B,GAAD,CACEnD,QAAS,SAACC,GACRyH,EAAyBzH,EAC1B,EACDL,MAAO,CACLW,OAAQ,eAMhB,sBACEtC,UAAU,uBACV2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,iBALL,SAOsB,OAAnB4M,EACC,uBACEjI,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,8BACNyD,QAASuG,EAAetJ,KAAI,SAACC,GAAD,OAAUA,EAAK7F,IAAf,IAC5B4I,YAAa,SAACtB,EAA6BzB,GAA9B,OACXsJ,EAAc7H,EAAGzB,EADN,EAGboB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GACRyH,EAAyBzH,EAC1B,OAIL,uBACEL,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,8BACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAA9B,OACXsJ,EAAc7H,EAAGzB,EADN,EAGboB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GACRyH,EAAyBzH,EAC1B,WAOd,C,4JC1RM,SAASuI,GAAa5K,GAC3B,IAAQ6K,EAAkB7K,EAAlB6K,cAER,OACE,eAACC,GAAA,EAAD,CAAgBC,UAAWC,KAAO3K,UAAU,OAA5C,SACE,gBAAC4K,GAAA,EAAD,CAAO,aAAW,oBAAlB,UACE,eAACC,GAAA,EAAD,CACElJ,MAAO,CACLO,gBAAiB,WAFrB,SAKE,gBAAC4I,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,CACEpJ,MAAO,CACL5B,MAAO,SAFX,qBAOA,eAACgL,GAAA,EAAD,CACEC,MAAM,SACNrJ,MAAO,CACL5B,MAAO,SAHX,uBAUJ,eAACkL,GAAA,EAAD,UACGT,EAAclK,KAAI,SAAC4K,GAAD,OACjB,eAACC,GAAD,CAEED,KASMpO,EATUoO,EAAIpO,OASES,EATM2N,EAAI3N,KASI+K,EATE4C,EAAI5C,YAU/C,CACLxL,SACAS,OACA+K,iBAde9I,KAUnB,IAAoB1C,EAAgBS,EAAc+K,CAZrB,UAU5B,CAUD,SAAS6C,GAAIxL,GACX,IAAQuL,EAAQvL,EAARuL,IACR,EAAwBE,YAAe,GAAvC,mBAAO9J,EAAP,KAAa+J,EAAb,KAEA,OACE,gBAAC,WAAD,WACE,gBAACP,GAAA,EAAD,CAAU9B,GAAI,CAAE,QAAS,CAAEsC,aAAc,UAAzC,UACE,eAACP,GAAA,EAAD,UACE,eAACQ,GAAA,EAAD,CACE,aAAW,aACXC,KAAK,QACLzJ,QAAS,kBAAMsJ,GAAS/J,EAAf,EACTK,MAAO,CAAEQ,QAAS,QAJpB,SAMGb,EAAO,eAAC,KAAD,IAA0B,eAAC,KAAD,QAGtC,eAACyJ,GAAA,EAAD,CAAWL,UAAU,KAAKe,MAAM,MAAhC,SACGP,EAAIpO,SAEP,eAACiO,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACG,IAAIjK,KAAKmK,EAAI3N,MAAMyD,mBAAmB,QAAS,CAC9CC,SAAU,aAIhB,eAAC6J,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAWpJ,MAAO,CAAE+J,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,eAACC,GAAA,EAAD,CAAUC,GAAIxK,EAAMyK,QAAQ,OAAOC,eAAa,EAAhD,SACE,gBAACC,GAAA,EAAD,CAAKjD,GAAI,CAAEkD,OAAQ,GAAnB,UACE,eAACC,GAAA,EAAD,CAAYpD,QAAQ,UAAUqD,cAAY,EAAC1B,UAAU,MAArD,SACE,wDAEF,eAACyB,GAAA,EAAD,CAAYpD,QAAQ,QAAQqD,cAAY,EAAC1B,UAAU,MAAnD,SACGQ,EAAI5C,yBAQpB,CC7FM,SAAS+D,KACd,IAAIhH,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EAA0BK,mBAAiB,IAA3C,mBAAO4C,EAAP,KAAcgB,EAAd,KACA,EAA0B5D,mBAAiB,IAA3C,mBAAO6C,EAAP,KAAcgB,EAAd,KAEA,EAAsC7D,oBAAkB,GAAxD,mBAAOyG,EAAP,KAAoBC,EAApB,KACA,EAA8C1G,oBAAkB,GAAhE,mBAAO2G,EAAP,KAAwBC,EAAxB,KAEA,EAA0C5G,mBAA2B,IAArE,mBAAO0E,EAAP,KAAsBmC,EAAtB,KACA,EAA4C7G,mBAAwB,IAApE,mBAAO8G,EAAP,KAAuBC,EAAvB,KAEA,EAA0C/G,oBAAkB,GAA5D,mBAAOgH,EAAP,KAAsBC,EAAtB,KACA,EAA0CjH,oBAAkB,GAA5D,mBAAOkH,EAAP,KAAsBC,EAAtB,KACA,EAA0CnH,oBAAkB,GAA5D,mBAAOoH,EAAP,KAAsBC,EAAtB,KAEM1G,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAAC8D,EAAUoB,EAAUlB,IAExB,IAAM6H,EAA0B,iDAAG,WAAO1M,GAAP,oFACjCA,EAAME,kBAEAgM,GAAmBlE,GAAUC,KAAYD,IAASC,GAHvB,uBAI/BsE,GAAiB,GACjBN,EAAiB,IALc,6BASjCQ,GAAiB,GAEbE,EAAU,OAETT,GAAkBlE,GAAWkE,GAAkBlE,GAASC,GAb5B,kCAcfN,GACd9C,EAAK3L,MACLgT,EACAlE,EACAC,GAlB6B,QAc/B0E,EAd+B,mCAoBtBT,EApBsB,kCAqBfvE,GACd9C,EAAK3L,MACLgT,GAvB6B,QAqB/BS,EArB+B,mCAyBtB3E,GAAUC,EAzBY,kCA0BfN,GAAsC9C,EAAK3L,MAAO8O,GA1BnC,QA0B/B2E,EA1B+B,mCA2BtB3E,IAASC,EA3Ba,kCA4BfN,GACd9C,EAAK3L,MACL8O,EACAC,GA/B6B,QA4B/B0E,EA5B+B,kBAmCjCF,GAAiB,GAEZE,EArC4B,sDAuC7BA,EAAQ7T,SAAW+K,GAAcG,UAvCJ,wBAwC/BgI,GAAmB,GACnBC,EAAiB,IAzCc,8BA6C7BU,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,OA7CtB,wBA8C/BgT,GAAe,GA9CgB,2BAkDjCG,EAAiBU,EAAQ9T,MAlDQ,4CAAH,sDAwE1B+T,EAAa,WACjB,IAAM/D,EAAepC,SAASQ,eAC5B,SAEI4F,EAAepG,SAASQ,eAC5B,SAEE4B,IAAcA,EAAahG,MAAQ,IACnCgK,IAAcA,EAAahK,MAAQ,IACvCmG,EAAS,IACTC,EAAS,GACV,EAEG8C,GACFnF,YAAW,kBAAMoF,GAAmB,EAAzB,GAAiC5H,IAG1CyH,GACFjF,YAAW,kBAAMkF,GAAe,EAArB,GAA6B1H,IAGtCgI,GACFxF,YAAW,kBAAMyF,GAAiB,EAAvB,GAA+BjI,KAGtB,IAAlBkI,GACF1F,YAAW,kBAAM2F,GAAiB,EAAvB,GAA+BnI,IAG5C,IAAIM,EAAS,KAOb,OALEA,EADEkH,GAAuBY,EAChB,eAACtK,GAAD,IAEA,KAIT,uBAAK5C,UAAU,iBAAf,UACGoF,EACD,eAACjF,GAAD,CAAWC,KAAM,CAAC,CAAEI,MAAM,EAAO9F,KAAM,mBACvC,eAACsJ,GAAD,CAAWpE,MAAM,iBAEjB,eAAC4J,GAAD,CACEC,yBAA0B2D,EAC1B1D,SAAUA,EACVC,SAAUA,EACVC,eAAgBnI,EAChBoI,cAAe,SAAC7H,EAA6BzB,GAA9B,OACbsM,EAAkBtM,EADL,EAGfuJ,YAAa,SAAC9H,GAAD,OA5DE,SAACtB,GACpBA,EAAME,iBACNiM,EAAkB,IAClBS,IACA,IAAME,EAAiBrG,SAASC,cAC9B,mIAEEoG,GAAgBA,EAAerJ,OACpC,CAoDmD8C,CAAajF,EAA9C,KAGM,IAApByK,EACC,eAACxM,GAAD,CAAWL,MAAM,oCACf,MACa,IAAhB2M,EACC,eAACrM,GAAD,CAAYN,MAAM,yDAChB,MACe,IAAlBkN,EACC,eAACpN,GAAD,CAAcE,MAAM,0BAClB,MACe,IAAlBoN,GACC,eAAC9M,GAAD,CAAYN,MAAM,qCAGnB4K,EAAc5D,OAAS,EACtB,iCACE,uBAAK5G,UAAU,WAAf,WACI0I,GAASC,IACT,uBAAK3I,UAAU,WAAf,UACE,mDACC0I,GACC,IAAI3H,KAAK2H,GAAO1H,mBAAmB,QAAS,CAC1CC,SAAU,QAEb0H,GACC,MACE,IAAI5H,KAAK4H,GAAO3H,mBAAmB,QAAS,CAC1CC,SAAU,WAKnB2L,GACC,uBAAK5M,UAAU,WAAf,UACE,gDACA,sBAAKA,UAAU,WAAf,SAA2B4M,UAKjC,eAAChE,GAAD,CAAahJ,MAAM,kBAAkBiJ,SA/GzB,SAACnI,GACnBA,EAAME,iBACN+L,EAAiB,IACjBE,EAAkB,IAClBnD,EAAS,IACTC,EAAS,IACToD,GAAiB,EAClB,IA0GO,eAACxC,GAAD,CAAcC,cAAeA,IAE7B,sBAAKxK,UAAU,cAAf,SACE,+BACE,kEAA6C,IAC5CwK,EAAc5D,OAAS,EAAI4D,EAAc5D,OAAS,aAKzD,sDAIP,CClNM,SAAS6G,KACd,IAAIpI,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EAA4BK,mBAAiB,IAA7C,mBAAOhJ,EAAP,KAAe4Q,EAAf,KACA,EAAsC5H,mBAAiB,IAAvD,mBAAOwC,EAAP,KAAoBqF,EAApB,KACA,EAAwB7H,mBAAiB,IAAzC,mBAAOvI,EAAP,KAAaqQ,EAAb,KAEA,EAAsC9H,oBAAkB,GAAxD,mBAAOyG,EAAP,KAAoBC,EAApB,KACA,EAA0C1G,oBAAkB,GAA5D,mBAAOkH,EAAP,KAAsBC,EAAtB,KAEA,EACEnH,oBAAkB,GADpB,mBAAO+H,EAAP,KAAgCC,EAAhC,KAEA,EACEhI,oBAAkB,GADpB,mBAAOiI,EAAP,KAA4BC,EAA5B,KAEA,EAA0BlI,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMzH,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMF,EAAUoB,IAEpB,IAcM0H,EAAQ,iDAAG,WAAOzN,GAAP,oFACfA,EAAME,kBAdD9D,EAAOsR,QAAUtR,EAAO8J,OAAS,IACpCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,qCACnB,IACG0I,GAAeA,EAAY1B,OAAS,KAC9CsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,6CACnB,GACGrC,KAAQA,EAAKqJ,OAAS,MAChCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,kCACnB,GAKM,iEAKOyI,GACpB9C,EAAK3L,MACLkD,EAAOsR,OACP9F,EACA/K,GATa,UAKT8P,EALS,QAYX9I,GAAcC,QAAQ6J,SAAShB,EAAQ7T,QAZ5B,wBAabkU,EAAU,IACVC,EAAe,IACfC,EAAQ,IACRE,GAA0B,GAhBb,8BAoBXT,EAAQ7T,SAAW+K,GAAcE,YApBtB,wBAqBbwI,GAAiB,GArBJ,2BAyBXI,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,QACrDgT,GAAe,GA1BF,4CAAH,sDAyCVD,GACFjF,YAAW,kBAAMkF,GAAe,EAArB,GAA6B1H,KAGV,IAA5B+I,IAAgE,IAA5BA,GACtCvG,YAAW,kBAAMwG,GAA0B,EAAhC,GAAwChJ,IAGjDiJ,GACFzG,YAAW,kBAAM0G,GAAuB,EAA7B,GAAqClJ,KAG5B,IAAlBkI,GACF1F,YAAW,kBAAM2F,GAAiB,EAAvB,GAA+BnI,IAGxCmJ,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAGnC,IAAIwJ,EAAU,KAOd,OALEA,EADEhC,EACQ,eAAC1J,GAAD,IAEA,KAIV,uBAAK5C,UAAU,iBAAf,UACGsO,EACD,eAACnO,GAAD,CACEC,KAAM,CACJ,CAAEI,KAAM,WAAY9F,KAAM,gBAC1B,CAAE8F,MAAM,EAAO9F,KAAM,iBAGzB,eAACsJ,GAAD,CAAWpE,MAAM,eAEjB,uBAAM2O,SAAUJ,EAAUnO,UAAU,YAApC,SACE,uBAAKA,UAAU,WAAf,UACE,uBAAKA,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,cAChB,+BACGO,EACC,eAAC2B,GAAD,CACExD,MAAM,qBACNyD,QAAS5B,EAAQnB,KAAI,SAACC,GAAD,OAAmBA,EAAK7F,IAAxB,IACrB4I,YAAa,SAACtB,EAA6BzB,GAA9B,OACXmN,EAAUnN,EADC,IAKf,eAAC6C,GAAD,CACExD,MAAM,qBACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAA9B,OACXmN,EAAUnN,EADC,SAOrB,uBAAKP,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,sBAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACLyB,MAAO+E,EACPvE,SAAU,SAAC/B,GAAD,OACR2L,EAAe3L,EAAEqI,OAAO9G,MADhB,EAGVvG,GAAG,OACH6G,MAAM,gCAGV,uBAAK7D,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,WAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL9E,GAAG,OACH6G,MAAM,IACNN,MAAOhG,EACPwG,SAAU,SAAC/B,GAAD,OACR4L,EAAQ5L,EAAEqI,OAAO9G,MADT,OAKd,uBAAKvD,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACL9B,UAAU,2CACV+B,QAAS,SAACC,GAAD,OAxGH,SAACtB,GACnBA,EAAME,iBAEN+M,EAAe,IACfC,EAAQ,IACR,IAAMJ,EAAiBrG,SAASC,cAC9B,2GAEEoG,GAAgBA,EAAerJ,OACpC,CA+FuD2F,CAAY9H,EAA7C,EAHX,6BAQF,sBAAKhC,UAAU,iBAAf,SACE,yBAAQ8B,KAAK,SAAS9B,UAAU,iCAAhC,4BAKJ,uBAAKA,UAAU,OAAf,WAC+B,IAA5B6N,GACC,eAACnO,GAAD,CAAcE,MAAM,yCAEG,IAAxBmO,GACC,eAAC7N,GAAD,CAAYN,MAAM,sCAEH,IAAhB2M,GACC,eAACrM,GAAD,CAAYN,MAAM,0DAED,IAAlBoN,GACC,eAAC9M,GAAD,CAAYN,MAAM,qCAEnBqO,YAMZ,C,yBC5NM,SAASO,GAAa7O,GAC3B,IACE8O,EAoBE9O,EApBF8O,YACA5E,EAmBElK,EAnBFkK,cACA/M,EAkBE6C,EAlBF7C,OACAwB,EAiBEqB,EAjBFrB,UACAoQ,EAgBE/O,EAhBF+O,aACAC,EAeEhP,EAfFgP,gBACAC,EAcEjP,EAdFiP,mBACArQ,EAaEoB,EAbFpB,KACAsQ,EAYElP,EAZFkP,QACAlO,EAWEhB,EAXFgB,QACAmO,EAUEnP,EAVFmP,WACAC,EASEpP,EATFoP,YACAC,EAQErP,EARFqP,KACAC,EAOEtP,EAPFsP,qBACAC,EAMEvP,EANFuP,oBACAC,EAKExP,EALFwP,cACAzQ,EAIEiB,EAJFjB,OACA0Q,EAGEzP,EAHFyP,8BACAzQ,EAEEgB,EAFFhB,oBACAsP,EACEtO,EADFsO,MAGF,OACE,+BACE,uBAAKjO,UAAU,aAAf,UACE,kCACGgP,GACC,qBAAIhP,UAAU,sCAAd,oBAEF,eAACqJ,GAAD,CAAWnI,KAAK,cAEhB,sBAAKlB,UAAU,OAAf,SACGgP,EACC,eAAC5L,GAAD,CACExD,MAAM,sBACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAKzCsJ,EAActJ,EACf,EACDgD,MAAOzG,IAGT,+BACG2R,GAAeA,EAAY7H,OAAS,EACnC,eAACxD,GAAD,CACExD,MAAM,sBACNyD,QAASoL,EAAYnO,KAAI,SAACC,GAAD,MAAoB,CAC3CsD,MAAOtD,EAAK7F,KACZ+D,MAAO8B,EAAK9B,MAFW,IAIzB6E,YAAa,SACXtB,EACAzB,GAMAsJ,EAAc7H,EAAGzB,EAClB,IAGH,eAAC6C,GAAD,CACExD,MAAM,sBACNyD,QAAS,GACTC,YAAa,SACXtB,EACAzB,GAMAsJ,EAAc7H,EAAGzB,EAClB,QAOX,eAAC8I,GAAD,CAAWnI,KAAK,sBAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL9E,GAAG,YACHuG,MAAOjF,EACPyF,SAAU,SAAC/B,GAAD,OACR0M,EAAa1M,EAAEqI,OAAO9G,MADd,EAGVM,MAAM,6BAGR,uBAAK7D,UAAU,qBAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,WAEhB,uBAAKlB,UAAU,OAAf,UACE,yBACEA,UAAU,yBACV8B,KAAK,SACL9E,GAAG,qBACH,cAAY,WACZ,gBAAc,OACd,gBAAc,QANhB,SAQE,uBAAKgD,UAAU,WAAf,UACE,uBAAKA,UAAU,UAAf,WACc,IAAXtB,GAAmB,OACR,IAAXA,GAAoB,SACT,OAAXA,GAA8B,KAAXA,EAAgB,aAAe,QAErD,sBAAKsB,UAAU,iCAGnB,uBACEA,UAAU,oBACV,kBAAgB,qBAChBhD,GAAG,iBAHL,UAKE,sBAAKgD,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOmN,EAAcnN,GAAG,EAAxB,EACThC,UAAU,6BAHZ,mBAQF,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOmN,EAAcnN,GAAG,EAAxB,EACThC,UAAU,6BAHZ,+BAWR,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,0BAEhB,uBAAKlB,UAAU,OAAf,UACE,yBACEA,UAAU,yBACV8B,KAAK,SACL9E,GAAG,qBACH,cAAY,WACZ,gBAAc,OACd,gBAAc,QANhB,SAQE,uBAAKgD,UAAU,eAAf,UACE,sBAAKA,UAAU,MAAf,SACGrB,GAA4C,eAE/C,sBAAKqB,UAAU,iCAGnB,uBACEA,UAAU,oBACV,kBAAgB,qBAChBhD,GAAG,iBAHL,UAKE,sBAAKgD,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOoN,EAA8BpN,EAAG,EAAxC,EACThC,UAAU,wBAHZ,mBASJ,sBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOoN,EAA8BpN,EAAG,EAAxC,EACThC,UAAU,wBAHZ,mBASJ,sBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOoN,EAA8BpN,EAAG,EAAxC,EACThC,UAAU,wBAHZ,mBASJ,sBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOoN,EAA8BpN,EAAG,EAAxC,EACThC,UAAU,wBAHZ,mBASJ,sBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOoN,EAA8BpN,EAAG,EAAxC,EACThC,UAAU,wBAHZ,+BAcZ,uBAAKA,UAAU,WAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,WAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL+B,MAAM,IACN7G,GAAG,OACHuG,MAAOoL,EACP5K,SAAU,SAAC/B,GAAD,OACR4M,EAAmB5M,EAAEqI,OAAO9G,MADpB,IAIZ,wBAAOvD,UAAU,uBAAjB,kCAEF,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,iBAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL+B,MAAM,IACN7G,GAAG,OACHuG,MAAOhF,EACPwF,SAAU,SAAC/B,GAAD,OACR6M,EAAQ7M,EAAEqI,OAAO9G,MADT,IAIZ,wBAAOvD,UAAU,uBAAjB,yCAGJ,sBAAKA,UAAU,WAAf,SACE,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,aAEhB,eAAC,KAAD,CACEY,KAAK,OACLuN,KAAK,WACLrP,UAAU,mBACVuD,MAAO5C,EACP3D,GAAG,UACHsS,KAAK,mBACLvL,SAAU,SAAC/B,GAAD,OAAO8M,EAAW9M,EAAEqI,OAAO9G,MAA3B,EACVgM,YAAY,uBAEd,wBAAOvP,UAAU,4BAAjB,sDAMN,uBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACLC,QAASgN,EACT/O,UAAU,gCACV,eAAa,QAJf,6BASF,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACLC,QAASkN,EACTjP,UAAU,sBAHZ,4BAUHiO,GAEwB,IAAxBiB,EACC,eAACjP,GAAD,CAAWL,MAAM,oCACf,MAEqB,IAAxBsP,EACC,eAACxP,GAAD,CAAcE,MAAM,uCAClB,SAIX,CCjTM,SAAS4P,KACd,IAAInK,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EACEvH,IADF,mBAAOT,EAAP,KAAoCgS,EAApC,KAAyBhK,UAGzB,EAA4BK,mBAAiB,IAA7C,mBAAOhJ,EAAP,KAAe4Q,EAAf,KACA,EAA4B5H,oBAAkB,GAA9C,mBAAOpH,EAAP,KAAegR,EAAf,KACA,EAAsD5J,mBACpD,MADF,mBAAOnH,EAAP,KAA4BgR,EAA5B,KAGA,EAAkC7J,mBAAiB,IAAnD,mBAAOxH,EAAP,KAAkBoQ,EAAlB,KACA,EAA8C5I,mBAAiB,IAA/D,mBAAO6I,EAAP,KAAwBC,EAAxB,KACA,EAAwB9I,mBAAiB,IAAzC,mBAAOvH,EAAP,KAAasQ,EAAb,KACA,EAA0B/I,mBAAiB,IAA3C,mBAAOtH,EAAP,KAAcoR,EAAd,KACA,EAA8B9J,mBAAiB,IAA/C,mBAAOnF,EAAP,KAAgBmO,EAAhB,KAEA,EAA0BhJ,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,GAAd,KAEMzH,GAAWC,cAEjBC,qBAAU,WACRF,GAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMF,EAAUoB,KAEpB,IAkBMsI,GAAc,WAClBrB,EAAU,IACVgB,EAAa,IACbE,EAAmB,IACnBC,EAAQ,IACRe,EAAS,IACTd,EAAW,IACXY,GAAU,GACVC,EAAuB,MACvB,IAAMnC,EAAiBrG,SAASC,cAC9B,2GAEEoG,GAAgBA,EAAerJ,OACpC,EAmBK8K,GAAoB,iDAAG,WAAOvO,GAAP,8EAC3BA,EAAME,kBAjBD9D,EAAOsR,QAAUtR,EAAO8J,OAAS,IACpCsH,GAAS,eAACjO,GAAD,CAAWL,MAAM,sCACnB,IACGtB,GAAaA,EAAUsI,OAAS,IAC1CsH,GAAS,eAACjO,GAAD,CAAWL,MAAM,8CACnB,IACG+O,GAAmBA,EAAgB/H,OAAS,IACtDsH,GAAS,eAACjO,GAAD,CAAWL,MAAM,sCACnB,GACGrB,KAAQA,EAAKqI,OAAS,MAChCsH,GAAS,eAACjO,GAAD,CAAWL,MAAM,yCACnB,GAKkB,0EAMnBnC,EAAe,CACnBX,OAAQA,EACRwB,UAAWA,EACXf,KAAMoR,EACNpQ,KAAMA,EACNC,MAAOA,EACPmC,QAASA,EACTjC,OAAQA,EACRC,oBAAqBA,IACpBmI,SAfsB,OAgBzBiI,KACAb,GAAS,eAACxO,GAAD,CAAcE,MAAM,wCAjBJ,qDAmBrB,KAAIpG,SAAW+K,GAAcK,SAnBR,wBAoBvBsJ,GAAS,eAACjO,GAAD,CAAWL,MAAM,mCApBH,8BAuBrB,KAAIpG,SAAW+K,GAAcE,YAvBR,wBAwBvByJ,GAAS,eAACjO,GAAD,CAAWL,MAAM,sCAxBH,2BA2BzBsO,GAAS,eAAChO,GAAD,CAAYN,MAAM,0DA3BF,0DAAH,sDA+BtB0O,GAAU,KAWd,OATEA,GADEhC,GAAuBmD,EACf,eAAC7M,GAAD,IAEA,KAGRqL,GACF3G,YAAW,kBAAM4G,GAAS,KAAf,GAAsBpJ,IAIjC,uBAAK9E,UAAU,iBAAf,UACGsO,GACD,eAACnO,GAAD,CACEC,KAAM,CACJ,CAAEI,KAAM,YAAa9F,KAAM,UAC3B,CAAE8F,MAAM,EAAO9F,KAAM,kBAGzB,eAACsJ,GAAD,CAAWpE,MAAM,gBAEjB,sBAAKI,UAAU,OAAf,SACE,eAACwO,GAAD,CACEC,YAAahN,EACboI,cAAe,SAAC7H,EAA6BzB,GAA9B,OA1GA9H,EA2GC8H,IApGA,kBAAX9H,GACTiV,EAAUjV,GAGU,kBAAXA,GAAuBA,EAAOoL,OAASpL,EAAOgG,OACvDiP,EAAUjV,EAAOoL,YACjBiL,EAAWrW,EAAOgG,aAFpB,IATEiP,EAAU,SACVoB,EAAW,KAHO,IAACrW,CA0GA,EAGfqE,OAAQA,EACR4Q,UAAWA,EACXpP,UAAWA,EACXoQ,aAAcA,EACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBrQ,KAAMA,EACNsQ,QAASA,EACTlO,QAASA,EACTmO,WAAYA,EACZC,YAAa,SAAC/M,GAAD,OAAiC+M,IAAjC,EACbC,MAAM,EACNC,qBAAsB,SAACjN,GAAD,OACpBiN,GAAqBjN,EADD,EAGtBmN,cAAe,SAACnN,EAA6BtD,GAA9B,OACbgR,EAAUhR,EADG,EAGfA,OAAQA,EACR0Q,8BAA+B,SAC7BpN,EACA6N,GAF6B,OAG1BF,EAAuBE,EAHG,EAI/BlR,oBAAqBA,EACrBsP,MAAOA,QAKhB,CCtKM,SAAS6B,GAAYnQ,GAC1B,MAAgC7B,EAAoB,IAA5CvE,KAAMqM,OAAd,MAAyB,GAAzB,EAGEoJ,EAYErP,EAZFqP,KACAD,EAWEpP,EAXFoP,YACArU,EAUEiF,EAVFjF,KACAqV,EASEpQ,EATFoQ,QACApN,EAQEhD,EARFgD,MACAqN,EAOErQ,EAPFqQ,SACAvR,EAMEkB,EANFlB,MACAwR,EAKEtQ,EALFsQ,SACAC,EAIEvQ,EAJFuQ,iBACAC,EAGExQ,EAHFwQ,cACAC,EAEEzQ,EAFFyQ,eACAnC,EACEtO,EADFsO,MAGF,OACE,uBAAKjO,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,SACGgP,EACC,qBAAIhP,UAAU,cAAd,oBAEA,qBAAIA,UAAU,cAAd,qBAGJ,sBAAKA,UAAU,aAAf,SACE,kCACE,eAACqJ,GAAD,CAAWnI,KAAK,WAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL9B,UAAU,OACVhD,GAAG,SACHuG,MAAO7I,EACPqJ,SAAU,SAAC/B,GAAD,OAAiC+N,EAAQ/N,EAAEqI,OAAO9G,MAAlD,EACVM,MAAM,6BAER,eAACwF,GAAD,CAAWnI,KAAK,WAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL9B,UAAU,OACVhD,GAAG,YACHuG,MAAOZ,EACPoB,SAAU,SAAC/B,GAAD,OAAiCgO,EAAShO,EAAEqI,OAAO9G,MAAnD,EACVM,MAAM,mBAER,eAACwF,GAAD,CAAWnI,KAAK,eAEhB,eAAC,KAAD,CACEY,KAAK,OACLuN,KAAK,WACLrP,UAAU,wBACVuD,MAAO9E,EACPzB,GAAG,UACHsS,KAAK,mBACLvL,SAAU,SAAC/B,GAAD,OAAOiO,EAASjO,EAAEqI,OAAO9G,MAAzB,EACVgM,YAAY,qBACZc,UAAU,IAEXzK,GAAYA,EAASgB,OAAS,GAC7B,iCACE,eAACyC,GAAD,CAAWnI,KAAK,aAChB,eAACkC,GAAD,CACExD,MAAM,sBACNyD,QAASuC,EAAStF,KAAI,SAACC,GAAD,OAAoBA,EAAKpD,OAAzB,IACtBmG,YAAa,SAACtB,EAA6BzB,GAA9B,OACX2P,EAAiB3P,EADN,OAOlB4P,GACC,uBAAKnQ,UAAU,+CAAf,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGmQ,GAAiB,cAIxB,uBAAKnQ,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,QACLC,QAASgN,EACT/O,UAAU,gCACV,eAAa,QAJf,0BAKO,KAKT,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACLC,QAASqO,EACTpQ,UAAU,sBAHZ,mBAIO,QAMViO,SAKV,CCnHM,SAASqC,KACd,IAAIjL,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EAAsC6B,IAAtC,mBAAOrB,EAAP,KAAuBmJ,EAAvB,KAAuBA,UAEvB,EAAwBK,mBAAiB,IAAzC,mBAAOpL,EAAP,KAAaqV,EAAb,KACA,EAA0BjK,mBAAiB,IAA3C,mBAAOnD,EAAP,KAAcqN,EAAd,KACA,EAA0BlK,mBAAiB,IAA3C,mBAAOrH,EAAP,KAAcwR,EAAd,KACA,EAA0CnK,mBAAiB,IAA3D,mBAAOqK,EAAP,KAAsBD,EAAtB,KAEA,EAA0BpK,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMzH,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMF,EAAUoB,IAEpB,IAAMsI,EAAc,WAClBgB,EAAQ,IACRC,EAAS,IACTC,EAAS,IACTC,EAAiB,IACjB,IAAM1C,EAAiBrG,SAASC,cAC9B,mIAEEoG,GAAgBA,EAAerJ,OACpC,EAaKoM,EAAY,iDAAG,WAAO7P,GAAP,oFACnBA,EAAME,kBAXDlG,EAAK0T,QAAU1T,EAAKkM,OAAS,IAChCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,mCACnB,GACGnB,KAASA,EAAMmI,OAAS,MAClCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,uCACnB,GAKU,wDAKb4Q,EAAkBL,GAAgC,KALrC,kBAQX7T,EAAa,CACjB5B,KAAMA,EAAK0T,OACXzL,MAAOA,EAAMyL,OACb3P,MAAOA,EACPtB,QAASqT,IACR1J,SAbc,OAcjBiI,IACAb,EAAS,eAACxO,GAAD,CAAcE,MAAM,qCAfZ,qDAiBb,KAAIpG,SAAW+K,GAAcK,SAjBhB,wBAkBfsJ,EAAS,eAACjO,GAAD,CAAWL,MAAM,gCAlBX,2BAqBjBsO,EAAS,eAAChO,GAAD,CAAYN,MAAM,0DArBV,0DAAH,sDAyBdwF,EAAS,KAWb,OATEA,EADEK,EACO,eAAC7C,GAAD,IAEA,KAGPqL,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAIjC,uBAAK9E,UAAU,iBAAf,UACGoF,EACD,eAACjF,GAAD,CACEC,KAAM,CACJ,CAAEI,KAAM,UAAW9F,KAAM,YACzB,CAAE8F,MAAM,EAAO9F,KAAM,oBAIzB,eAACsJ,GAAD,CAAWpE,MAAM,iBAEjB,+BACE,eAACkQ,GAAD,CACEf,YAAaA,EACbrU,KAAMA,EACNqV,QAASA,EACTpN,MAAOA,EACPqN,SAAUA,EACVvR,MAAOA,EACPwR,SAAUA,EACVC,iBAAkBA,EAClBC,cAAa,OAAEA,QAAF,IAAEA,IAAiB,GAChCC,eAAgBG,EAChBtC,MAAOA,QAKhB,CC7HM,SAASwC,KACd,IAAMpL,EAAWC,cAEjB,OACE,0BACEtF,UAAU,sEACV+B,QAAS,kBAAMsD,GAAU,EAAhB,EAFX,UAIE,sBACEjD,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,+BACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,wMAZZ,WAiBH,CCRM,SAASiO,KACd,IAAMrL,EAAWC,cACXmB,EAAWC,cAEXnB,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IAEzB6K,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMkB,EAAUpB,IAEpB,IAAQsL,EAAaC,cAAbD,SAER,EACEjT,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAGtBoL,EAAapP,EAAQqP,MAAK,SAAChU,GAAD,OAAqBA,EAAOE,KAAO2T,CAAnC,IAEhC,EAGI/S,IAHJ,mBACEf,EADF,YAEekU,EAFf,EAEItL,UAAuCuL,EAF3C,EAEgCtL,UAG3BmL,GACHxL,GAAU,GAGZ,IAuCID,EAvCJ,EAAwBU,mBAAiB+K,EAAaA,EAAWnW,KAAO,IAAxE,mBAAOA,EAAP,KAAaqV,EAAb,KACA,EAA0BjK,mBACxB+K,EAAaA,EAAWlO,MAAQ,IADlC,mBAAOA,EAAP,KAAcqN,EAAd,KAGA,EAA0BlK,mBACxB+K,EAAaA,EAAWpS,MAAQ,IADlC,mBAAOA,EAAP,KAAcwR,EAAd,KAGA,EAA0CnK,mBACxC+K,EAAaA,EAAW1T,QAAU,MADpC,mBAAOgT,EAAP,KAAsBD,EAAtB,KAGA,EAA0BpK,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMa,EAAc,WAClBgB,EAAQ,IACRC,EAAS,IACTC,EAAS,IACTC,EAAiB,KAClB,EAEKe,EAAc,iDAAG,WAAOvQ,GAAP,wFACrBA,EAAME,iBAEAsQ,EAAavO,EAAQA,EAAMyL,OAAS,KAHrB,kBAMbvR,EAAa,CACjBG,GAAI6T,EAAW7T,GACftC,KAAMA,EAAK0T,OACXzL,MAAOuO,EACPzS,MAAOA,EAAM2P,OACbjR,QAASgT,IACRrJ,SAZgB,OAanBiI,IACAzH,YAAW,kBAAMjC,GAAU,EAAhB,GAAoB,KAdZ,gDAgBnB6I,EAAS,eAAChO,GAAD,CAAYN,MAAM,0CAhBR,yDAAH,sDA+BpB,OAVImR,GAAmBzE,EACrBlH,EAAS,eAACxC,GAAD,IACAoO,IACT5L,EAAS,MAGP6I,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAIjC,2BAAS9E,UAAU,iBAAnB,UACGoF,EAED,eAACqL,GAAD,IAEA,eAACX,GAAD,CACEd,MAAM,EACND,YAAaA,EACbrU,KAAMA,EACNqV,QAASA,EACTpN,MAAOA,EACPqN,SAAUA,EACVvR,MAAOA,EACPwR,SAAUA,EACVC,iBAAkBA,EAClBC,cAAeA,EACfC,eAAgBa,EAChBhD,MAAOA,MAId,CCjHD,IAAM7F,GAAkBlP,mCAElBiY,GAAkB,SACGvX,EAAe2D,GAAkC,OAAD,2IACjEtE,EADiE,UACxDmP,GADwD,wCAGtCjP,IAC5BsP,IAAIxP,EAAK,CACRR,OAAQ,CAAE8E,KAAMA,GAChB3B,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAT4D,uBAG7DD,EAH6D,EAG7DA,KAAMC,EAHuD,EAGvDA,OAHuD,kBAc9D,CAAED,OAAMC,WAdsD,4HAkBxE,EAnBG2X,GAAkB,SA4DpBvX,EACAoD,EACAF,EACAwB,EACAf,EACAgB,EACAoC,EACAjC,EACAC,EACAC,GACoB,OAAD,2IACb3F,EADa,UACJmP,GADI,0CAGcjP,IAC5BiY,IACCnY,EACA,CACE+D,GAAIA,EACJF,OAAQA,EACRwB,UAAWA,EACXf,KAAMA,EACNgB,KAAMA,EACNoC,QAASA,EACTjC,OAAQA,EACRC,oBAAqBA,EACrBC,kBAEF,CAAEhD,QAAS,CAAE4M,cAAe5O,KAE7BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IApBQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAyBV,CAAED,OAAMC,WAzBE,4HA6BpB,EAnGG2X,GAAkB,SAqGKvX,EAAeoD,GAAgC,OAAD,2IACjE/D,EADiE,UACxDmP,GADwD,mCAGtCjP,IAC5BkY,OAAOpY,EAAK,CACXR,OAAQ,CAAEuE,MACVpB,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAT4D,uBAG7DD,EAH6D,EAG7DA,KAAMC,EAHuD,EAGvDA,OAHuD,kBAc9D,CAAED,OAAMC,WAdsD,4HAkBxE,EAvHG2X,GAAkB,SAyHKvX,EAAeoD,GAAgC,OAAD,2IACjE/D,EADiE,UACxDmP,GADwD,0CAGtCjP,IAC5BC,KACCH,EACA,CACE+D,GAAIA,GAEN,CAAEpB,QAAS,CAAE4M,cAAe5O,KAE7BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAZ4D,uBAG7DD,EAH6D,EAG7DA,KAAMC,EAHuD,EAGvDA,OAHuD,kBAiB9D,CAAED,OAAMC,WAjBsD,4HAqBxE,EA9IG2X,GAAkB,SAgJOvX,GAAmC,OAAD,2IACvDX,EADuD,UAC9CmP,GAD8C,4CAI5BjP,IAC5BsP,IAAIxP,EAAK,CAAE2C,QAAS,CAAE4M,cAAe5O,KACrCP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAPkD,uBAInDD,EAJmD,EAInDA,KAAMC,EAJ6C,EAI7CA,OAJ6C,kBAYpD,CAAED,OAAMC,WAZ4C,4HAgB9D,EAhKG2X,GAAkB,SAkKIvX,EAAekD,GAAoC,OAAD,2IACpE7D,EADoE,UAC3DmP,GAD2D,0CAIzCjP,IAC5BsP,IAAIxP,EAAK,CACRR,OAAQ,CAAEqE,UACVlB,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAV+D,uBAIhED,EAJgE,EAIhEA,KAAMC,EAJ0D,EAI1DA,OAJ0D,kBAejE,CAAED,OAAMC,WAfyD,4HAmB3E,EC5KI,SAAS8X,KACd,IAAIjM,EAAWC,cACPiM,EAAeX,cAAfW,WACFhM,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACnB0V,EAAWhM,aAAY,SAAC1K,GAAD,OAAyBA,EAAM0W,QAA/B,IAE7B,EAA4B1L,mBAAkB0L,EAAS9S,QAAvD,mBAAOA,EAAP,KAAegR,EAAf,KACA,EAA4B5J,mBAAiB0L,EAAS1U,QAAtD,mBAAOA,EAAP,KAAe4Q,EAAf,KACA,EAAsD5H,mBACpD0L,EAAS7S,qBADX,mBAAOA,EAAP,KAA4BgR,EAA5B,KAGA,EAAkC7J,mBAAiB0L,EAASlT,WAA5D,mBAAOA,EAAP,KAAkBoQ,EAAlB,KACA,EAA8C5I,mBAAiB0L,EAASjU,MAAxE,mBAAOoR,EAAP,KAAwBC,EAAxB,KACA,EAAwB9I,mBAAiB0L,EAASjT,MAAlD,mBAAOA,EAAP,KAAasQ,EAAb,KACA,EAA8B/I,mBAAiB0L,EAAS/S,OAAxD,mBAAOkC,EAAP,KAAgBmO,EAAhB,KACA,EAA0BhJ,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMzH,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAE5CiQ,EAASxU,IACZqI,GAAU,EAEb,GAAE,CAACE,EAAMF,EAAUmM,EAASxU,GAAIyJ,IAEjC,IAcMgL,EAAgB,iDAAG,WAAO/Q,GAAP,wFACvBA,EAAME,iBADiB,SAGDuQ,GACpB5L,EAAK3L,MACL2X,EACAzU,EACAwB,EACAqQ,EACApQ,EACAoC,EACAjC,EACAC,EACA6S,EAAS5S,gBAbY,OAGjByO,EAHiB,OAgBnB9I,GAAcC,QAAQ6J,SAAShB,EAAQ7T,UACzC0U,EAAS,eAACxO,GAAD,CAAcE,MAAM,wCAC7B0H,YAAW,kBAAMjC,GAAU,EAAhB,GAAoB,MAI/BgI,EAAQ7T,SAAW+K,GAAcE,aACjC4I,EAAQ7T,SAAW+K,GAAcM,OAChCwI,EAAQ7T,QAET0U,EAAS,eAAChO,GAAD,CAAYN,MAAM,oCA1BN,2CAAH,sDAkCtB,OAJIqO,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAIjC,uBAAK9E,UAAU,iBAAf,UACE,eAACyQ,GAAD,IAEA,sBAAKzQ,UAAU,OAAf,SACE,eAACwO,GAAD,CACE3E,cAAe,SAAC/M,GAAD,OAAoB4Q,EAAU5Q,EAA9B,EACfA,OAAQA,EACR4Q,UAAWA,EACXpP,UAAWA,EACXoQ,aAAcA,EACdC,gBAAiBA,EACjBC,mBAAoBA,EACpBrQ,KAAMA,EACNsQ,QAASA,EACTlO,QAASA,EACTmO,WAAYA,EACZC,YAAa,SAAC/M,GAAD,OAjED,WAClB0L,EAAU,IACVgB,EAAa,IACbE,EAAmB,IACnBC,EAAQ,IACRC,EAAW,IACXY,GAAU,GACVC,EAAuB,MACvB,IAAMnC,EAAiBrG,SAASC,cAC9B,oHAEEoG,GAAgBA,EAAerJ,OACpC,CAqDqD4K,EAAjC,EACbC,MAAM,EACNC,qBAAsB,SAACjN,GAAD,OACpByP,EAAiBzP,EADG,EAGtBmN,cAAe,SAACnN,EAA6BtD,GAA9B,OACbgR,EAAUhR,EADG,EAGfA,OAAQA,EACR0Q,8BAA+B,SAC7BpN,EACA6N,GAF6B,OAG1BF,EAAuBE,EAHG,EAI/BlR,oBAAqBA,EACrBsP,MAAOA,QAKhB,CClHM,SAASyD,KACd,IAAMnM,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACnB2K,EAAWC,cACbrB,EAAWC,cAWf,OATAqB,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAEjD,IAAMoQ,EAASxK,SAASC,cAAc,qBAClCuK,IAAQA,EAAOhQ,MAAME,QAAU,OACpC,GAAE,CAAC0D,EAAMF,EAAUoB,IAGlB,uBAAKzG,UAAU,iBAAf,UACE,eAACG,GAAD,CAAWC,KAAM,KAEjB,eAAC4D,GAAD,CAAWpE,MAAK,kBAAU2F,EAAOA,EAAKlL,SAAW,iBAAjC,OAChB,8CACW,0DADX,qDAIA,0LAKA,uBAAK2F,UAAU,sBAAf,UACE,qBAAIA,UAAU,aAAd,mBACA,yIAIA,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOvB,GAAmCuB,EAAG,cAA7C,EACThC,UAAU,sBAHZ,kCAQF,oBAAGA,UAAU,mCAAb,wCAKL,C,wDC5Dc,OAA0B,wCCmBzC,SAAS4R,KACP,MAAwB9L,mBAAiB,IAAzC,mBAAO/M,EAAP,KAAa8Y,EAAb,KACA,EAAgC/L,mBAAS,CACvC9M,SAAU,GACV8Y,cAAc,IAFhB,mBAAO9Y,EAAP,KAAiB+Y,EAAjB,KAIA,EAAsCjM,mBAAyB,MAA/D,mBAAOkM,EAAP,KAAoBC,EAApB,KACA,EAAsCnM,mBAAyB,MAA/D,mBAAOyG,EAAP,KAAoBC,EAApB,KAEA,EAA8C1G,oBAAkB,GAAhE,mBAAOoM,EAAP,KAAwBC,EAAxB,KAEM1L,EAAWC,cACbrB,EAAWC,cAEfqB,qBAAU,WACR,IAAMgL,EAASxK,SAASC,cAAc,qBAClCuK,IAAQA,EAAOhQ,MAAME,QAAU,OACpC,GAAE,IAEH,IAAIuD,EAAS,KAEXA,EADE8M,EACO,eAACtP,GAAD,IAEA,KAGX,IAAMwP,EAAgB,SAACC,GACrB5L,EACE7L,EAAW,CAAEhB,MAAOyY,EAAMzY,MAAOU,aAAc+X,EAAM/X,gBAEvD+K,EAAS,QAAS,CAAE9D,SAAS,IAC7B4Q,GAAmB,EACpB,EAEKE,EAAK,iDAAG,WAAO3R,GAAP,wFACZA,EAAME,iBACNuR,GAAmB,GAFP,SAIU3Z,EACpBO,EAAKqV,OACLpV,EAASA,SAASoV,QANR,UAINf,EAJM,QASR9I,GAAcC,QAAQ6J,SAAShB,EAAQ7T,QAT/B,uBAUV4Y,EAAc/E,EAAQ9T,MAVZ,0BAcR8T,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,QACrDgT,GAAe,GAGba,EAAQ7T,SAAW+K,GAAcI,cACnCsN,GAAe,GAGjBE,GAAmB,GAtBP,4CAAH,uDAyBS,IAAhBH,GACF1K,YAAW,kBAAM2K,EAAe,KAArB,GAA4BnN,KAGrB,IAAhByH,GACFjF,YAAW,kBAAMkF,EAAe,KAArB,GAA4B1H,IAGzC,IACGwN,EAKH,OACE,uBAAKtS,UAAU,kBAAf,UACGoF,EACD,sBAAKpF,UAAU,mBAAf,SACE,sBAAKA,UAAU,WAAWuS,IAAI,mBAAmBC,IAAKC,OAExD,sBAAKzS,UAAU,aAAf,SACE,uBAAKA,UAAU,uBAAf,UACE,wBAAMuO,SAAU8D,EAAhB,UACE,uBAAKrS,UAAU,cAAf,UACE,qBAAIA,UAAU,cAAd,+BACA,qBAAGA,UAAU,gCAAb,4BAEE,wBAAOA,UAAU,4BAAjB,yDAKJ,uBAAKA,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,eAEhB,uBAAKlB,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,mBAAf,iBAEF,wBACE8B,KAAK,OACL9B,UAAU,eACVuD,MAAOxK,EACPgL,SAAU,SAAC/B,GAAD,OAAO6P,EAAQ7P,EAAEqI,OAAO9G,MAAxB,EACVvG,GAAG,OACHuS,YAAY,8BACZc,UAAU,UAIhB,uBAAKrQ,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,UAEhB,uBAAKlB,UAAU,cAAf,UACE,sBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,mBAAf,SACE,uBACEoC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,YACVwC,QAAQ,YANV,UAQE,uBAAMC,EAAE,6bACR,uBAAMA,EAAE,6CAId,wBACEX,KAAM9I,EAAS8Y,aAAe,OAAS,WACvC9R,UAAU,eACVuD,MAAOvK,EAASA,SAChB+K,UAhEbuO,EAgE4C,WAhE9B,SAAC5R,GACdA,EAAME,iBACNmR,EAAY,2BAAK/Y,GAAN,kBAAiBsZ,EAAO5R,EAAM2J,OAAO9G,QACjD,GA8DavG,GAAG,WACHuS,YAAY,iBACZc,UAAU,IAEZ,sBAAKrQ,UAAU,qBAAf,SACE,eAAC,KAAD,CACE+B,QAAS,SAACC,GAAD,OACP+P,EAAY,2BACP/Y,GADM,IAET8Y,cAAe9Y,EAAS8Y,eAHnB,EAMTY,YAAa,SAAC1Q,GAAD,OAAOA,EAAEpB,gBAAT,EACbZ,UAAU,mBARZ,SAUGhH,EAAS8Y,aAAe,eAAC,KAAD,IAAiB,eAAC,KAAD,cAKlD,yBACEhQ,KAAK,SACL9B,UAAU,sCAFZ,uBAOF,uBAAKA,UAAU,cAAf,WACmB,IAAhBgS,EACC,eAAC9R,GAAD,CAAYN,MAAM,oCAChB,MACa,IAAhB2M,EACC,eAACrM,GAAD,CAAYN,MAAM,4CAChB,aAIV,oBAAGI,UAAU,mCAAb,wCAKL,CClMD,SAASsP,GACP/L,GAOC,IANDoP,EAMA,uDANY,EACZC,EAKA,uDALmB,IACnBC,EAIA,uDAJoB,IACpBC,EAGA,wDAFAC,EAEA,uDAFS,GACTC,EACA,uDADS,GAGT,GAAc,QAAVzP,EACF,MAAO,CACLA,MAAO,GACP0P,YAAa,IAYjB,GAPIN,EAAY,IACdA,EAAY,GAEVA,EAAY,KACdA,EAAY,IAGA,OAAVpP,QAA4B2P,IAAV3P,EACpB,MAAO,CACLA,MAAO,EACP0P,YAAa,IAMjB,GAAqB,KAFrB1P,EAAQ4P,OAAO5P,IAELqD,OACR,MAAO,CACLrD,MAAO,EACP0P,YAAa,IAKjB,IAAIG,EAAS7P,EAAM8P,MAAM,QAAU,CAAC,KAEhCC,GAAmB,EACvB,GAAIR,EAAe,CACjB,IAAIS,GAAqBhQ,EAAM8P,MAAM,OAAS,IAAIzM,OAIlD0M,EAAmBC,EAAoB,IAAM,EAI7C,IADA,IAAIC,GAAmB,EACdC,EAAM,EAAGA,EAAML,EAAOxM,OAAQ6M,GAAO,EAC5C,GAAoB,MAAhBL,EAAOK,GAAc,CACvBD,GAAmB,EACnB,KACD,CAECA,IACFF,GAAmB,EAEtB,CAGD,KAAOF,EAAOxM,QAAU+L,GACtBS,EAAOM,QAAQ,KAGbf,EAAY,GAEdS,EAAOO,OAAOP,EAAOxM,OAAS+L,EAAW,EAAG,KAI9CS,EAASQ,OAAOR,EAAOS,KAAK,KAAKC,QAAQnB,GAAWoB,MAAM,IAC1D,IAAIC,EAAMJ,OAAOR,EAAOS,KAAK,KAEzBI,EAAab,EAAOxM,OAAS+L,EAAY,EACzCA,EAAY,EAEdS,EAAOa,GAAcrB,EAGrBqB,EAAab,EAAOxM,OAItB,IAAK,IAAIsN,EAAID,EAAa,EAAGC,EAAI,EAAGA,GAAQ,EAC1Cd,EAAOO,OAAOO,EAAG,EAAGrB,GAkBtB,OAdIE,EAAOnM,OAAS,GAClBwM,EAAOM,QAAQX,GAEbC,EAAOpM,OAAS,GAClBwM,EAAOe,KAAKnB,GAKVF,GAAiBQ,IACnBF,EAAOM,QAAQ,KACfM,GAAOA,GAGF,CACLzQ,MAAOyQ,EACPf,YAAaG,EAAOS,KAAK,IAAIzF,OAEhC,C,wBC5GKhG,GAAkBlP,mCAElBkb,GAAe,SACCxa,GAAmC,OAAD,6IAC9CX,EAD8C,UACrCmP,GADqC,oBAE9C7K,EAAO8W,KAAO,IAAItT,MAAQuT,OAAO,cAFa,kBAInBnb,IAC5BsP,IAAIxP,EAAK,CACRR,OAAQ,CAAE8E,KAAMA,GAChB3B,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAVyC,uBAI1CD,EAJ0C,EAI1CA,KAAMC,EAJoC,EAIpCA,OAJoC,kBAe3C,CAAED,OAAMC,WAfmC,4HAmBrD,EApBG4a,GAAe,SAuBjBxa,EACA8O,EACAC,GACoB,OAAD,6IACb1P,EADa,UACJmP,GADI,qBAEfmM,EAAa7L,EACZA,IACH6L,EAAaF,KAAO,IAAItT,MAAQuT,OAAO,eAJtB,kBAOcnb,IAC5BsP,IAAIxP,EAAK,CACRR,OAAQ,CACNiQ,MAAO6L,EACP5L,MAAOA,GAET/M,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAhBQ,uBAOTD,EAPS,EAOTA,KAAMC,EAPG,EAOHA,OAPG,kBAqBV,CAAED,OAAMC,WArBE,4HAyBpB,EAnDG4a,GAAe,SAuEKxa,EAAekD,GAAoC,OAAD,2IAClE7D,EADkE,UACzDmP,GADyD,wCAGvCjP,IAC5BsP,IAAIxP,EAAK,CACR2C,QAAS,CAAE4M,cAAe5O,GAC1BnB,OAAQ,CAAEqE,YAEXzD,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAT6D,uBAG9DD,EAH8D,EAG9DA,KAAMC,EAHwD,EAGxDA,OAHwD,kBAc/D,CAAED,OAAMC,WAduD,4HAkBzE,EAzFG4a,GAAe,SA4FjBxa,EACA0O,EACAxL,EACA0B,EACAjB,GACoB,OAAD,2IACbtE,EADa,UACJmP,GADI,oCAGcjP,IAC5BC,KACCH,EACA,CACEqP,YAAaA,EACbxL,OAAQA,EACR0B,MAAOA,EACPjB,KAAMA,GAER,CAAE3B,QAAS,CAAE4M,cAAe5O,KAE7BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IAfQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAoBV,CAAED,OAAMC,WApBE,4HAwBpB,EAzHG4a,GAAe,SA2HEI,GACnB,OAAOA,EACJxM,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OAAUkU,SAASlU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KAAO,GAAnE,IAEDoT,QAAO,SAACC,EAAKrU,GAAN,OAAeqU,EAAMrU,CAArB,GAA2B,GAClCsU,eAAe,QAAS,CAAElT,MAAO,WAAYmT,SAAU,OAC3D,EAnIGV,GAAe,SAsIjBxa,EACAkD,EACA4L,EACAC,GACoB,OAAD,2IACb1P,EADa,UACJmP,GADI,4CAGcjP,IAC5BsP,IAAIxP,EAAK,CACR2C,QAAS,CAAE4M,cAAe5O,GAC1BnB,OAAQ,CAAEqE,SAAQ4L,QAAOC,WAE1BtP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IATQ,uBAGTD,EAHS,EAGTA,KAAMC,EAHG,EAGHA,OAHG,kBAcV,CAAED,OAAMC,WAdE,4HAkBpB,EC1II,SAASub,KACd,IAAI1P,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EAAoCK,mBAAiB,IAArD,mBAAOkP,EAAP,KAAmBC,EAAnB,KACA,EAAsCnP,mBAAiB,IAAvD,mBAAOwC,EAAP,KAAoBqF,EAApB,KACA,EAA0B7H,mBAAiB,IAA3C,mBAAOtH,EAAP,KAAcoR,EAAd,KACA,EAAwB9J,mBAAiB,IAAzC,mBAAOvI,EAAP,KAAaqQ,EAAb,KAEA,EAAsC9H,oBAAkB,GAAxD,mBAAOyG,EAAP,KAAoBC,EAApB,KACA,EACE1G,oBAAkB,GADpB,mBAAOoP,EAAP,KAA4BC,EAA5B,KAEA,EAAgDrP,oBAAkB,GAAlE,mBAAOsP,EAAP,KAAyBC,EAAzB,KACA,EAA0BvP,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMzH,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMkB,EAAUpB,IAEpB,IA0EID,EAzDE+I,EAAQ,iDAAG,WAAOzN,GAAP,oFACfA,EAAME,kBAjBDoU,EAAW5G,QAAU4G,EAAWpO,OAAS,IAC5CsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,qCACnB,IACG0I,GAAeA,EAAY1B,OAAS,KAC9CsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,6CACnB,IACGpB,GAASA,EAAMoI,OAAS,IAClCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,sCACnB,GACGrC,KAAQA,EAAKqJ,OAAS,MAChCsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,kCACnB,GAKM,iEAKOwU,GACpB7O,EAAK3L,MACL0O,EACA0M,EAAaA,EAAW5G,OAAS,GACjC5P,EACAjB,GAVa,UAKT8P,EALS,QAaX9I,GAAcC,QAAQ6J,SAAShB,EAAQ7T,QAb5B,wBAcbyb,EAAc,IACdtH,EAAe,IACfiC,EAAS,IACThC,EAAQ,IACRuH,GAAuB,GACvBrL,EAAYpJ,GAnBC,2BAuBX2M,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,QACrDgT,GAAe,GAxBF,4CAAH,sDA4BR1C,EAAc,SAACpJ,GACnBA,EAAME,iBAEN+M,EAAe,IACfiC,EAAS,IACThC,EAAQ,IACRqH,EAAc,IACd,IAAMK,EAAqBnO,SAASC,cAClC,kGAEEkO,GAAoBA,EAAmBnR,OAC5C,EAyBD,OAvBI+Q,GACF5N,YAAW,kBAAM6N,GAAuB,EAA7B,GAAqCrQ,IAG9CsQ,GACF9N,YAAW,kBAAM+N,GAAoB,EAA1B,GAAkCvQ,IAG3CyH,GACFjF,YAAW,kBAAMkF,GAAe,EAArB,GAA6B1H,IAGtCmJ,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAKjCM,EADEkH,EACO,eAAC1J,GAAD,IAEA,KAIT,uBAAK5C,UAAU,iBAAf,UACGoF,EACD,eAACjF,GAAD,CACEC,KAAM,CACJ,CAAEI,KAAM,SAAU9F,KAAM,UACxB,CAAE8F,MAAM,EAAO9F,KAAM,iBAGzB,eAACsJ,GAAD,CAAWpE,MAAM,yBAEjB,uBAAM2O,SAAUJ,EAAUnO,UAAU,YAApC,SACE,uBAAKA,UAAU,WAAf,UACE,uBAAKA,UAAU,kBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,YAEfO,EACC,eAAC2B,GAAD,CACExD,MAAM,qBACNyD,QAAS5B,EAAQnB,KAAI,SAACC,GAAD,OAAmBA,EAAK7F,IAAxB,IACrB4I,YAAa,SAACtB,EAA6BzB,GAKzC0U,EAJK1U,GACW,GAIjB,IAGH,eAAC6C,GAAD,CACExD,MAAM,qBACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAKzC0U,EAJK1U,GACW,GAIjB,OAKP,eAAC8I,GAAD,CAAWnI,KAAK,sBAEhB,eAAC4H,GAAD,CACE9L,GAAG,OACH6G,MAAM,2BACNN,MAAO+E,EACPS,QAAQ,WACRhF,SAAU,SAAC/B,GAAD,OACR2L,EAAe3L,EAAEqI,OAAO9G,MADhB,IAKZ,uBAAKvD,UAAU,gBAAf,UACE,uBAAKA,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,eAEhB,eAAC4H,GAAD,CACE9L,GAAG,QACH6G,MAAM,oBACNN,MAAO/E,EACPuK,QAAQ,WACRhF,SAAU,SAACwR,GACT,IACQtC,EAAgB3D,GADdiG,EAAGlL,OAAO9G,MACc,EAAG,IAAK,KAAK,EAAO,MAA9C0P,YACRrD,EAASqD,EACV,OAIL,uBAAKjT,UAAU,iBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,WAEhB,eAAC4H,GAAD,CACEhH,KAAM,OACN+B,MAAM,IACNN,MAAOhG,EACPP,GAAG,OACH+L,QAAQ,WACRhF,SAAU,SAAC/B,GAAD,OACR4L,EAAQ5L,EAAEqI,OAAO9G,MADT,UAOhB,uBAAKvD,UAAU,WAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACL9B,UAAU,gDACV+B,QAAS,SAACC,GAAD,OAAO8H,EAAY9H,EAAnB,EAHX,6BAQF,sBAAKhC,UAAU,iBAAf,SACE,yBACE8B,KAAK,SACL9B,UAAU,sCAFZ,yBAQJ,uBAAKA,UAAU,OAAf,WAC2B,IAAxBkV,GACC,eAACxV,GAAD,CAAcE,MAAM,mCAEA,IAArBwV,GACC,eAAClV,GAAD,CAAYN,MAAM,gCAEH,IAAhB2M,GACC,eAACrM,GAAD,CAAYN,MAAM,yDAEnBqO,YAMZ,CC5PD,IAAM7F,GAAkBlP,mCAElBsc,GAAgB,SAuFA5b,GAAmC,OAAD,2IAC9C2O,EAD8C,UACrCH,GADqC,qCAGnBjP,IAC5BsP,IAAIF,EAAK,CACR3M,QAAS,CAAE4M,cAAe5O,KAE3BP,MAAK,SAACC,GAAD,MAAU,CAAEC,KAAMD,EAAIC,KAAMC,OAAQF,EAAIE,OAAxC,IACLC,OAAM,SAACC,GAAD,MAAU,CACfH,KAAMG,EAAIC,SAASJ,KACnBC,OAAQE,EAAIC,SAASH,OAFhB,IARyC,uBAG1CD,EAH0C,EAG1CA,KAAMC,EAHoC,EAGpCA,OAHoC,kBAa3C,CAAED,OAAMC,WAbmC,4HAiBrD,E,SCrGI,SAASic,GAAU9V,GACxB,IAAQ6U,EAAiB7U,EAAjB6U,MAAO5U,EAAUD,EAAVC,MAET8V,EAAa,aACd,IAAIC,IACLnB,EAAMxM,QAAO,SAACzH,GAAD,QAAYA,EAAKzD,MAAjB,IAAyBwD,KAAI,SAACC,GAAD,OAAUA,EAAKzD,MAAf,MAE5CwD,KAAI,SAACC,GACL,OACE,uBAAKP,UAAU,sBAAf,UACGO,EADH,MAA0Cf,IAI7C,IAED,OACE,uBAAKQ,UAAU,8BAAf,UACE,sBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,wBAAd,SAAuCJ,MAEzC,uBAAKI,UAAU,wBAAf,UACE,sBAAIA,UAAU,sEAAd,oBACU,IACR,wBAAOA,UAAU,qBAAjB,SACGwU,EACExM,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SAASlU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KAAO,GAD3D,IAGDoT,QAAO,SAACC,EAAKrU,GAAN,OAAeqU,EAAMrU,CAArB,GAA2B,GAClCsU,eAAe,QAAS,CAAElT,MAAO,WAAYmT,SAAU,aAG9D,sBAAI9U,UAAU,2EAAd,qBACU,wBAAOA,UAAU,qBAAjB,SAAuCwU,EAAM5N,YAEvD,sBAAI5G,UAAU,2EAAd,gCACmB,IACjB,wBAAOA,UAAU,qBAAjB,SACG4V,KAAKC,MACJrB,EACGxM,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SAASlU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KAClD,GAFF,IAIDoT,QAAO,SAACC,EAAKrU,GAAN,OAAeqU,EAAMrU,CAArB,GAA2B,GAAKiU,EAAM5N,QAChDiO,eAAe,QAAS,CAAElT,MAAO,WAAYmT,SAAU,aAG7D,sBAAI9U,UAAU,2EAAd,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGwU,EACExM,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SAASlU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KAAO,GAD3D,IAGDuU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,CAAd,IAAiB,GACtBlB,eAAe,QAAS,CAAElT,MAAO,WAAYmT,SAAU,aAG9D,sBAAI9U,UAAU,2EAAd,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGwU,EACExM,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SAASlU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KAAO,GAD3D,IAGDuU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAAiB,GACtBnB,eAAe,QAAS,CAAElT,MAAO,WAAYmT,SAAU,aAG9D,qBAAI9U,UAAU,6DAAd,iCAGA,wBAAOA,UAAU,qBAAjB,SAAuC0V,IACvC,sBAAI1V,UAAU,wEAAd,6CACgC,IAC9B,wBAAOA,UAAU,qBAAjB,SAAuC0V,EAAW9O,iBApENpH,IAyErD,CC3EM,SAASyW,GAAWtW,GACzB,IAAQ6U,EAAU7U,EAAV6U,MAER,OACE,eAAC/J,GAAA,EAAD,CAAgBC,UAAWC,KAAO3K,UAAU,YAA5C,SACE,gBAAC4K,GAAA,EAAD,CAAO,aAAW,oBAAlB,UACE,eAACC,GAAA,EAAD,CACElJ,MAAO,CACLO,gBAAiB,WAFrB,SAKE,gBAAC4I,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,IACA,eAACA,GAAA,EAAD,CACEpJ,MAAO,CACL5B,MAAO,SAFX,qBAOA,eAACgL,GAAA,EAAD,CACEC,MAAM,SACNrJ,MAAO,CACL5B,MAAO,SAHX,uBAUJ,eAACkL,GAAA,EAAD,UACGuJ,EAAMlU,KAAI,SAAC4K,GAAD,OACT,eAAC,GAAD,CAEEA,KAUZpO,EAV4BoO,EAAIpO,OAWhCS,EAXwC2N,EAAI3N,KAY5C+K,EAZkD4C,EAAI5C,YAatD9J,EAbmE0M,EAAI1M,MAehE,CACL1B,SACAS,OACA+K,cACA4N,KAAM,CACJ,CACE1X,aAtBWgB,KAUnB,IACE1C,EACAS,EACA+K,EACA9J,CAhBmB,UAUpB,CAoBD,SAAS2M,GAAIxL,GACX,IAAQuL,EAAQvL,EAARuL,IACR,EAAwBE,YAAe,GAAvC,mBAAO9J,EAAP,KAAa+J,EAAb,KAEA,OACE,gBAAC,WAAD,WACE,gBAACP,GAAA,EAAD,CAAU9B,GAAI,CAAE,QAAS,CAAEsC,aAAc,UAAzC,UACE,eAACP,GAAA,EAAD,UACE,eAACQ,GAAA,EAAD,CACE,aAAW,aACXC,KAAK,QACLzJ,QAAS,kBAAMsJ,GAAS/J,EAAf,EACTK,MAAO,CAAEQ,QAAS,QAJpB,SAMGb,EAAO,eAAC,KAAD,IAA0B,eAAC,KAAD,QAGtC,eAACyJ,GAAA,EAAD,CAAWL,UAAU,KAAKe,MAAM,MAAhC,SACGP,EAAIpO,SAEP,eAACiO,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACG,IAAIjK,KAAKmK,EAAI3N,MAAMyD,mBAAmB,QAAS,CAC9CC,SAAU,aAIhB,eAAC6J,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAWpJ,MAAO,CAAE+J,cAAe,EAAGC,WAAY,GAAKC,QAAS,EAAhE,SACE,eAACC,GAAA,EAAD,CAAUC,GAAIxK,EAAMyK,QAAQ,OAAOC,eAAa,EAAhD,SACE,gBAACC,GAAA,EAAD,CAAKjD,GAAI,CAAEkD,OAAQ,GAAnB,UACE,eAACC,GAAA,EAAD,CAAYpD,QAAQ,UAAUqD,cAAY,EAAC1B,UAAU,MAArD,SACE,wDAEF,eAACyB,GAAA,EAAD,CAAYpD,QAAQ,QAAQqD,cAAY,EAAC1B,UAAU,MAAnD,SACGQ,EAAI5C,cAGP,gBAACsC,GAAA,EAAD,CAAOY,KAAK,QAAQ,aAAW,YAA/B,UACE,eAACX,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAWC,MAAM,QAAQjC,QAAQ,OAAjC,SACE,yBACEpH,MAAO,CACL5B,MAAO,WAFX,yBAUN,eAACkL,GAAA,EAAD,UACGC,EAAIgL,KAAK5V,KAAI,SAAC4V,GAAD,OACZ,eAACpL,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAWL,UAAU,KAAKe,MAAM,MAAMT,MAAM,QAA5C,SACGkL,EAAK1X,SAFKgB,IADH,oBAe/B,CC/HM,SAAS2W,KACd,IAAM5Q,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACrBuJ,EAAWC,cAEf,EAAsCQ,mBAAc,IAApD,mBAAO2I,EAAP,KAAoB2H,EAApB,KACA,EAA4CtQ,mBAAmB,IAA/D,mBAAOuQ,EAAP,KAAuBC,EAAvB,KACA,EAA8BxQ,mBAAS,IAAvC,mBAAO3I,EAAP,KAAgBoZ,EAAhB,KACA,EAAkCzQ,mBAAyB,MAA3D,mBAAO0Q,EAAP,KAAkBC,EAAlB,KACA,EAAsC3Q,oBAAc,GAApD,mBAAOyG,EAAP,KAAoBC,EAApB,KACA,EAA0C1G,mBAAS,IAAnD,mBAAO4Q,EAAP,KAAsBC,EAAtB,KACA,EAA+C7Q,mBAAS,IAAxD,mBAAO8Q,EAAP,KAAyBC,EAAzB,KACA,EAA4C/Q,mBAAS,IAArD,mBAAOgR,EAAP,KAAuBC,EAAvB,KACA,EAAgDjR,mBAAS,IAAzD,mBAAOkR,EAAP,KAAyBC,EAAzB,KACA,EACEnR,mBAAc,MADhB,mBAAOoR,EAAP,KAAiCC,EAAjC,KAGM1Q,EAAWC,cAEjBC,qBAAU,WACRF,EAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAGjD,IAAI6V,GAAY,EANF,sDAUd,8GACwB5B,GAA4BjQ,EAAK3L,OADzD,WACQyT,EADR,QAGe7T,OAHf,oDAKM6T,EAAQ7T,SAAW+K,GAAcM,MALvC,iDASMuS,GAAWhB,EAAe/I,EAAQ9T,MATxC,4CAVc,4EAsBd,+GACQ8d,EAAsBhD,OACzBiD,SAAS,EAAG,OACZC,IAAI,GACJjD,OAAO,cACJkD,EAAmBnD,OACtBiD,SAAS,EAAG,OACZC,IAAI,GACJjD,OAAO,cAEJmD,EAAkBpD,OAASkD,IAAI,GAAGjD,OAAO,cACzCoD,EAAerD,OAASkD,IAAI,GAAGjD,OAAO,cAX9C,SAaiCF,GAC7B7O,EAAK3L,MACLyd,EACAG,GAhBJ,cAaQG,EAbR,gBAkBmCvD,GAC/B7O,EAAK3L,MACL6d,EACAC,GArBJ,UAkBQE,EAlBR,OAwBOD,EAAiBne,QAAWoe,EAAmBpe,OAxBtD,mDA2BIme,EAAiBne,SAAW+K,GAAcG,WAC1CiT,EAAiBne,SAAW+K,GAAcM,OAEtCuS,GAAWT,EAAiB,IAIhCiB,EAAmBpe,SAAW+K,GAAcG,WAC5CkT,EAAmBpe,SAAW+K,GAAcM,OAExCuS,GAAWP,EAAmB,IAGhCO,GAAWT,EAAiBgB,EAAiBpe,MAC7C6d,GAAWP,EAAmBe,EAAmBre,MAzCvD,6CAtBc,4EAkEd,+GACQse,EAAqBxD,OACxBiD,SAAS,EAAG,SACZQ,QAAQ,SACRxD,OAAO,cACJyD,EAAmB1D,OACtBiD,SAAS,EAAG,SACZU,MAAM,SACN1D,OAAO,cAEJ2D,EAAuB5D,OAC1ByD,QAAQ,SACRxD,OAAO,cACJ4D,EAAqB7D,OAAS2D,MAAM,SAAS1D,OAAO,cAb5D,SAekCF,GAC9B7O,EAAK3L,MACLie,EACAE,GAlBJ,cAeQI,EAfR,gBAoBoC/D,GAChC7O,EAAK3L,MACLqe,EACAC,GAvBJ,UAoBQE,EApBR,OA0BOD,EAAkB3e,QAAW4e,EAAoB5e,OA1BxD,mDA6BI2e,EAAkB3e,SAAW+K,GAAcG,WAC3CyT,EAAkB3e,SAAW+K,GAAcM,OAEvCuS,GAAWL,EAAkB,IAIjCqB,EAAoB5e,SAAW+K,GAAcG,WAC7C0T,EAAoB5e,SAAW+K,GAAcM,OAEzCuS,GAAWH,EAAoB,IAGjCG,GAAWL,EAAkBoB,EAAkB5e,MAC/C6d,GAAWH,EAAoBmB,EAAoB7e,MA3CzD,6CAlEc,sBAgHd,OAxGA8e,QAAQC,IAAI,CARE,0CAQDnc,GARC,0CAQaoc,GARb,0CAQ6BC,KAwGpC,WACLpB,GAAY,CACb,CACF,GAAE,CAAC7R,EAAK3L,MAAO2L,EAAMF,EAAUoB,IAEhC,IAAMgS,EAAgB,iDAAG,WACvB/X,EACAjI,GAFuB,oFAIvBiI,EAAME,iBAEDnI,EANkB,iEAQD2b,GACpB7O,EAAK3L,MACLnB,EAAOoL,MAAMuK,QAVQ,WAQjBf,EARiB,QAaX7T,SAAW+K,GAAcG,UAbd,wBAcrB+R,GAAa,GACbH,EAAkB,IAfG,8BAmBnBjJ,EAAQ7T,SAAW+K,GAAcM,MAnBd,wBAoBrB2H,GAAe,GACf8J,EAAkB,IArBG,2BAyBvBC,EAAW,IACP9d,EAAO0E,SACToZ,EAAW9d,EAAO0E,SAGpBmZ,EAAkBjJ,EAAQ9T,MA9BH,4CAAH,wDAmDtB,OAZIid,GACFlP,YAAW,kBAAMmP,GAAa,EAAnB,GAA2B3R,IAGpCyH,GACFjF,YAAW,kBAAMiF,GAAY,EAAlB,GAA0BzH,IAGnCoS,GACF5P,YAAW,kBAAM6P,EAA4B,KAAlC,GAAyCrS,IAIpD,uBAAK9E,UAAU,iBAAf,UACE,eAACG,GAAD,CACEC,KAAM,CACJ,CAAEI,KAAM,SAAU9F,KAAM,UACxB,CAAE8F,MAAM,EAAO9F,KAAM,oBAIzB,eAACsJ,GAAD,CAAWpE,MAAM,kBAEjB,uBAAKI,UAAU,YAAf,UACE,uBAAKA,UAAU,sCAAf,UACE,qBAAIA,UAAU,iDAAd,2CAGA,uBAAKA,UAAU,OAAf,UACmB,OAAhByO,GAAwBA,EAAY7H,OAAS,EAC5C,eAACxD,GAAD,CACExD,MAAM,qBACNyD,QAASoL,EAAYnO,KAAI,SAACC,GAAD,MAAoB,CAC3CsD,MAAOtD,EAAK7F,KACZyC,QAASoD,EAAKpD,QAFS,IAIzBmG,YAAa,SAACtB,EAA6BzB,GAA9B,OACXkY,EAAiBzW,EAAGzB,EADT,IAKf,eAAC6C,GAAD,CACExD,MAAM,qBACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAA9B,OACXkY,EAAiBzW,EAAGzB,EADT,IAKjB,wBAAOP,UAAU,aAAjB,+DAMHqW,EAAezP,OAAS,EACvB,uBAAK5G,UAAU,OAAf,UACE,eAAC4I,GAAD,CACEhJ,MAAM,kBACNiJ,SAjEgB,SAACnI,GAC3BA,EAAME,iBACN0V,EAAkB,IAClBa,GAA4B,EAC7B,IAgES,eAAClB,GAAD,CAAYzB,MAAO6B,IAEnB,uBAAKrW,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,SACE,qBAAIA,UAAU,wBAAd,gCAEF,uBAAKA,UAAU,wBAAf,UACE,sBAAIA,UAAU,sEAAd,4BACkB,IAChB,wBAAOA,UAAU,qBAAjB,SACG,IAAIe,KACHsV,EACG/V,KAAI,SAACC,GAAD,OAAkBA,EAAKhD,IAAvB,IACJuY,MAAK,SAACC,EAAGC,GAAJ,OAAUvB,SAASuB,GAAKvB,SAASsB,EAAjC,IAAqC,IAC7C/U,mBAAmB,QAAS,CAAEC,SAAU,aAG9C,sBAAIjB,UAAU,2EAAd,6BACgB,IACd,wBAAOA,UAAU,qBAAjB,SACG,IAAIe,KACHsV,EACG/V,KAAI,SAACC,GAAD,OAAkBA,EAAKhD,IAAvB,IACJuY,MAAK,SAACC,EAAGC,GAAJ,OAAUvB,SAASsB,EAAE,IAAMtB,SAASuB,EAApC,IAAwC,IAChDhV,mBAAmB,QAAS,CAAEC,SAAU,aAG9C,sBAAIjB,UAAU,2EAAd,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGqW,EACErO,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SACElU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KACvC,GAHN,IAKDoT,QAAO,SAACC,EAAKrU,GAAN,OAAeqU,EAAMrU,CAArB,GAA2B,GAClCsU,eAAe,QAAS,CACvBlT,MAAO,WACPmT,SAAU,aAIlB,sBAAI9U,UAAU,2EAAd,4BACe,IACb,wBAAOA,UAAU,qBAAjB,SACG4V,KAAKC,MACJQ,EACGrO,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SACElU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KACvC,GAHN,IAKDoT,QAAO,SAACC,EAAKrU,GAAN,OAAeqU,EAAMrU,CAArB,GAA2B,GACnC8V,EAAezP,QACjBiO,eAAe,QAAS,CACxBlT,MAAO,WACPmT,SAAU,aAIhB,sBAAI9U,UAAU,2EAAd,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGqW,EACErO,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SACElU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KACvC,GAHN,IAKDuU,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAID,CAAd,IAAiB,GACtBlB,eAAe,QAAS,CACvBlT,MAAO,WACPmT,SAAU,aAIlB,sBAAI9U,UAAU,2EAAd,yBACe,IACb,wBAAOA,UAAU,qBAAjB,SACGqW,EACErO,QAAO,SAACzH,GAAD,QAAYA,CAAZ,IACPD,KACC,SAACC,GAAD,OACEkU,SACElU,EAAK/B,MAAMkW,UAAU,GAAGnT,QAAQ,QAAS,KACvC,GAHN,IAKDuU,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,CAAd,IAAiB,GACtBnB,eAAe,QAAS,CACvBlT,MAAO,WACPmT,SAAU,aAIlB,sBAAI9U,UAAU,2EAAd,2BACiB,IACf,wBAAOA,UAAU,qBAAjB,SACGqW,EAAezP,YAGpB,sBAAI5G,UAAU,yDAAd,8BACiB,IACf,wBAAOA,UAAU,qBAAjB,SACGqW,EAAerO,QAAO,SAACzH,GAAD,MAAyB,YAAfA,EAAK/B,KAAf,IACpBoI,OAAS,EACR,MACA,cAGPzJ,EACC,sBAAI6C,UAAU,mEAAd,sBACY,IACV,wBAAOA,UAAU,qBAAjB,SAAuC7C,OAEvC,cAIR,MAEW,IAAdqZ,GACC,eAACtW,GAAD,CAAYN,MAAM,gDAEH,IAAhB2M,GACC,eAACrM,GAAD,CAAYN,MAAM,2CAEU,IAA7BsX,GACC,eAACxX,GAAD,CAAcE,MAAM,6BAGxB,sBAAKI,UAAU,iBAAiBhD,GAAG,gBAAnC,SACE,uBAAKgD,UAAU,kBAAf,UACE,eAAC0Y,GAAD,CAAa9Y,MAAM,uBAAoB+Y,WAAW,gBAClD,uBACE3Y,UAAU,yBACVhD,GAAG,cACH,kBAAgB,aAChB,cAAY,iBAJd,UAMG0Z,EAAc9P,OAAS,EACtB,eAAC6O,GAAD,CACEjB,MAAOkC,EACP9W,MAAM,+BAEN,KACHgX,EAAiBhQ,OAAS,EACzB,eAAC6O,GAAD,CAAWjB,MAAOoC,EAAkBhX,MAAM,wBACxC,aAIV,sBAAKI,UAAU,YAAYhD,GAAG,iBAA9B,SACE,uBAAKgD,UAAU,kBAAf,UACE,eAAC0Y,GAAD,CAAa9Y,MAAM,sBAAmB+Y,WAAW,gBAajD,uBACE3Y,UAAU,yBACVhD,GAAG,cACH,kBAAgB,aAChB,cAAY,kBAJd,UAMG8Z,EAAelQ,OAAS,EACvB,eAAC6O,GAAD,CAAWjB,MAAOsC,EAAgBlX,MAAM,+BACtC,KACHoX,EAAiBpQ,OAAS,EACzB,eAAC6O,GAAD,CAAWjB,MAAOwC,EAAkBpX,MAAM,wBACxC,eAMf,CAED,SAAS8Y,GAAY/Y,GACnB,IAAQC,EAAsBD,EAAtBC,MAAO+Y,EAAehZ,EAAfgZ,WACf,OACE,sBAAK3Y,UAAU,cAAf,SACE,uBACEA,UAAU,WACVhD,GAAG,aACH,cAAY,WACZ,yBAAiB2b,GACjB,gBAAc,OACd,gBAAeA,EANjB,UAQE,qBAAI3Y,UAAU,yCAAd,SAAwDJ,IACxD,sBACEwC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,UACLvC,UAAU,oCACVwC,QAAQ,YANV,SAQE,uBACEE,SAAS,UACTD,EAAE,sSAMb,CCzcM,SAASmW,KACd,IAAIvT,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EAA0BK,mBAAiB,IAA3C,mBAAO4C,EAAP,KAAcgB,EAAd,KACA,EAA0B5D,mBAAwB,IAAlD,mBAAO6C,EAAP,KAAcgB,EAAd,KACA,EAA0B7D,mBAAmB,IAA7C,mBAAO0O,EAAP,KAAcqE,EAAd,KACA,EAAoD/S,oBAAkB,GAAtE,mBAAOgT,EAAP,KAA2BC,EAA3B,KAEA,EAAkDjT,oBAAkB,GAApE,mBAAOkT,EAAP,KAA0BC,EAA1B,KAEA,EAAsCnT,oBAAkB,GAAxD,mBAAOgE,EAAP,KAAoBoP,EAApB,KAEA,EAA0CpT,oBAAkB,GAA5D,mBAAOqT,EAAP,KAAsBC,EAAtB,KACA,EAAsCtT,oBAAkB,GAAxD,mBAAOyG,EAAP,KAAoBC,EAApB,KAEA,EAA4C1G,mBAAwB,MAApE,mBAAO8G,EAAP,KAAuBC,EAAvB,KACA,EAA0C/G,oBAAkB,GAA5D,mBAAOkH,EAAP,KAAsBC,EAAtB,KACA,GAAsCnH,oBAAkB,GAAxD,qBAAOuT,GAAP,MAAoBC,GAApB,MAEM7S,GAAWC,cAEjBC,qBAAU,WACRF,GAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAEjD,IAAI6V,GAAY,EALF,sDAQd,8GACwBhD,GAA2B7O,EAAK3L,OADxD,OACQyT,EADR,OAGM9I,GAAcC,QAAQ6J,SAAShB,EAAQ7T,SAAW4d,GACpDyB,EAASxL,EAAQ9T,MAGf8T,EAAQ7T,SAAW+K,GAAcG,WAAa0S,GAChD2B,GAAsB,GAGpB1L,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,QACjD4d,GAAW5K,GAAe,GAZlC,4CARc,sBAuBd,OAjBA6L,QAAQC,IAAI,CANE,0CAMDiB,KAiBN,WACLnC,GAAY,CACb,CACF,GAAE,CAAC7R,EAAMF,EAAUoB,KAEpB,IAAMgD,GAAwB,iDAAG,WAAO/I,GAAP,oFAC/BA,EAAME,kBAEAgM,GAAmBlE,GAAUC,KAAYD,IAASC,GAHzB,uBAI7BsE,GAAiB,GACjB4L,EAAS,IALoB,6BAS/BS,IAAe,GAEXjM,EAAU,OAETT,GAAkBlE,GAAWkE,GAAkBlE,GAASC,GAb9B,kCAcbyL,GACd7O,EAAK3L,MACLgT,EACAlE,EACAC,GAlB2B,QAc7B0E,EAd6B,mCAoBpBT,EApBoB,kCAqBbwH,GACd7O,EAAK3L,MACLgT,GAvB2B,QAqB7BS,EArB6B,gDA0Bb+G,GACd7O,EAAK3L,MACL8O,EACAC,GA7B2B,QA0B7B0E,EA1B6B,kBAiC/BiM,IAAe,GAEXjM,EAAQ7T,SAAW+K,GAAcG,UAnCN,wBAoC7B0U,GAAiB,GACjBP,EAAS,IArCoB,8BAyC3BxL,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,OAzCxB,wBA0C7BgT,GAAe,GA1Cc,2BA8C/BqM,EAASxL,EAAQ9T,MACjB0f,GAAqB,GA/CU,4CAAH,sDA2DxB3L,GAAa,WACjB,IAAM/D,EAAepC,SAASQ,eAC5B,SAEI4F,EAAepG,SAASQ,eAC5B,SAEE4B,IAAcA,EAAahG,MAAQ,IACnCgK,IAAcA,EAAahK,MAAQ,IACvCmG,EAAS,IACTC,EAAS,GACV,GAYqB,IAAlBwP,GACF7R,YAAW,kBAAM8R,GAAiB,EAAvB,GAA+BtU,KAGxB,IAAhByH,IAAyC,IAAhBA,GAC3BjF,YAAW,kBAAMkF,GAAe,EAArB,GAA6B1H,KAGf,IAAvBgU,GACFxR,YAAW,kBAAMyR,GAAsB,EAA5B,GAAoCjU,KAG7B,IAAhBgF,GACFxC,YAAW,kBAAM4R,GAAe,EAArB,GAA6BpU,KAGpB,IAAlBkI,GACF1F,YAAW,kBAAM2F,GAAiB,EAAvB,GAA+BnI,KAGlB,IAAtBkU,GACF1R,YAAW,kBAAM2R,GAAqB,EAA3B,GAAmCnU,IAGhD,IAAIwJ,GAAU,KAOd,OALEA,GADEhC,GAAuB+M,GACf,eAACzW,GAAD,IAEA,KAIV,uBAAK5C,UAAU,iBAAf,UACGsO,GACD,eAACnO,GAAD,CAAWC,KAAM,CAAC,CAAEI,MAAM,EAAO9F,KAAM,kBAEvC,eAACsJ,GAAD,CAAWpE,MAAM,gBAEjB,eAAC4J,GAAD,CACEC,yBAA0BA,GAC1BC,SAAUA,EACVC,SAAUA,EACVC,eAAgBnI,EAChBoI,cAAe,SAAC7H,EAA6BzB,GAA9B,OACbsM,EAAkBtM,EADL,EAGfuJ,YAAa,SAAC9H,GAAD,OAxDE,SAACtB,GACpBA,EAAME,iBACNiM,EAAkB,MAClBS,KACA,IAAME,EAAiBrG,SAASC,cAC9B,mIAEEoG,GAAgBA,EAAerJ,OACpC,CAgDmD8C,CAAajF,EAA9C,KAGI,IAAlBmX,EACC,eAAClZ,GAAD,CAAWL,MAAM,8BACf,MACmB,IAAtBoZ,EACC,eAACtZ,GAAD,CAAcE,MAAM,2BAClB,MACa,IAAhB2M,EACC,eAACrM,GAAD,CAAYN,MAAM,yDAChB,MACoB,IAAvBkZ,EACC,eAAC7Y,GAAD,CAAWL,MAAM,mCACf,MACa,IAAhBkK,EACC,eAACpK,GAAD,CAAcE,MAAM,0BAClB,MACe,IAAlBoN,EACC,eAAC9M,GAAD,CAAYN,MAAM,qCAChB,KAEH4U,EAAM5N,OAAS,EACd,kCACI8B,GAASC,IACT,uBAAK3I,UAAU,WAAf,UACE,mDACA,uBAAKA,UAAU,WAAf,UACG0I,GACC,IAAI3H,KAAK2H,GAAO1H,mBAAmB,QAAS,CAC1CC,SAAU,QAEb0H,GACC,MACE,IAAI5H,KAAK4H,GAAO3H,mBAAmB,QAAS,CAC1CC,SAAU,cAMrB2L,GACC,uBAAK5M,UAAU,WAAf,UACE,gDACA,sBAAKA,UAAU,WAAf,SAA2B4M,OAI/B,eAAChE,GAAD,CAAahJ,MAAM,kBAAkBiJ,SA9H1B,SAACnI,GAClBA,EAAME,iBAENiY,EAAS,IACTvL,KACA4L,GAAe,GACfrM,EAAkB,KACnB,IAyHO,eAACoJ,GAAD,CAAYzB,MAAOA,IAEnB,sBAAKxU,UAAU,SAAf,SACE,+BACE,4DAAuC,IACtCwU,EAAM5N,OAAS,EAAI4N,EAAM5N,OAAS,UAGvC,uBAAK5G,UAAU,gBAAf,UACE,yCACA,8BACGwU,EAAM5N,OAAS,EACZwN,GAAkCI,GAClC,aAKV,uDAIP,C,cCjQM,SAASgF,GAAsB7Z,GACpC,IAAQ3C,EAAoB2C,EAApB3C,GAAIoH,EAAgBzE,EAAhByE,YAENmB,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACnB2d,EAAcjU,aAAY,SAAC1K,GAAD,OAAyBA,EAAM0Z,KAA/B,IAC1B/N,EAAWC,cAEjB,EAA0BZ,mBAAiB,IAA3C,mBAAOtH,EAAP,KAAcoR,EAAd,KACA,EACE9J,oBAAkB,GADpB,mBAAO4T,EAAP,KAA6BC,EAA7B,KAEA,EAA0B7T,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEMC,EAAQ,iDAAG,WAAOzN,GAAP,oFACfA,EAAME,iBAEDpC,GAA0B,IAAjBA,EAAMoI,UAAgBpI,EAAMoI,OAAS,IAHpC,uBAIbsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,uCAJb,iCAQf+Z,GAAwB,GART,SAUOvF,GACpB7O,EAAK3L,MACL6f,EAAYnb,UACZmb,EAAY3c,OACZ0B,EACAib,EAAYlc,MAfC,UAUT8P,EAVS,OAkBfsM,GAAwB,IAEpBpV,GAAcC,QAAQ6J,SAAShB,EAAQ7T,QApB5B,wBAqBb0U,EAAS,eAACxO,GAAD,CAAcE,MAAM,+BAC7B6G,EACE1H,EAAc,CACZ/B,GAAI,GACJF,OAAQ,GACRwB,UAAW,GACXf,KAAM,GACNiB,MAAO,MAGXoR,EAAS,IA/BI,2BAmCXvC,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,QACrD0U,EAAS,eAAChO,GAAD,CAAYN,MAAM,2CApCd,4CAAH,sDAwCVwF,EAAS,KAWb,OATEA,EADEsU,EACO,eAAC9W,GAAD,IAEA,KAGPqL,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAIjC,uBACE9E,UAAU,aACVhD,GAAIA,EACJqH,UAAW,EACXC,KAAK,SACL,kBAAgB,oBAChB,cAAY,OACZ,cAAY,QAPd,UASGc,EACD,sBAAKpF,UAAU,qCAAqCsE,KAAK,WAAzD,SACE,uBAAKtE,UAAU,gBAAf,UACE,uBAAKA,UAAU,eAAf,UACE,qBAAIA,UAAU,cAAchD,GAAG,oBAA/B,yBAGA,yBACE8E,KAAK,SACL9B,UAAU,QACV,eAAa,QACb,aAAW,SAJb,SAME,uBAAM,cAAY,OAAlB,uBAGJ,uBAAKA,UAAU,uBAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,sBAChB,eAAC4H,GAAD,CACEhH,KAAK,OACLwS,OAAO,WACPtU,UAAU,OACVuD,MAAO/E,EACPuF,SAAU,SAACwR,GACT,IACQtC,EAAgB3D,GADdiG,EAAGlL,OAAO9G,MACc,EAAG,IAAK,KAAK,EAAO,MAA9C0P,YACRrD,EAASqD,EACV,EACDjW,GAAG,QACH6G,MAAM,yBAGToK,GAAS,sBAAKjO,UAAU,YAAf,SAA4BiO,IACtC,uBAAKjO,UAAU,eAAf,UACE,yBACE8B,KAAK,SACL9B,UAAU,yBACV,eAAa,QAHf,oBAOA,yBACE8B,KAAK,SACLC,QAAS,SAACC,GAAD,OAAOmM,EAASnM,EAAhB,EACT,cAAaoC,EACbpE,UAAU,uBAJZ,6BAaX,CChIM,SAAS4Z,GAAaja,GAC3B,IAAQY,EAA+CZ,EAA/CY,KAAMmB,EAAyC/B,EAAzC+B,MAAOmY,EAAkCla,EAAlCka,qBAAsBC,EAAYna,EAAZma,QAErCzU,EAAWC,cACXmB,EAAWC,cAEjB,OACE,gBAAC,KAAD,CAAOqT,UAAW,EAAlB,UACE,eAACP,GAAD,CACExc,GAAG,2BACHoH,YAAY,8BAGd,sBAAKpE,UAAU,YAAf,SACE,uBAAKA,UAAU,yBAAf,UACG8Z,EACC,sBAAK9Z,UAAU,sCAAf,SACE,sBAAKA,UAAU,WAAf,SACE,qBAAIA,UAAU,wCAAd,sCAKF,KACJ,sBAAKA,UAAU,sCAAf,SACE,uBAAKA,UAAU,WAAW2B,MAAO,CAAEC,WAAY,UAA/C,UACE,sBAAI5B,UAAU,oCAAd,qBACW,IACT,wBAAOA,UAAU,qBAAjB,SAAuCO,EAAKzD,YAG9C,uBACE6E,MAAO,CACLE,QAAS,QAFb,UAKGtB,EAAK9B,QAAU8B,EAAKyZ,YACnB,yBACElY,KAAK,SACL9B,UAAU,wBACV+B,QAAS,SAACC,GAAD,OACPvB,GACEuB,EACAzB,EAAKzD,OACLyD,EAAK9B,MACL8B,EAAKhD,KACLgD,EAAKhC,KACLgC,EAAK5B,oBACL4B,EAAK3B,eACL2B,EAAKjC,UATA,EAYTqD,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QAlBb,SAqBE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QACLvC,UAAU,iBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,mjCAId,yBACEX,KAAK,SACL9B,UAAU,qCACV+B,QAAS,SAACC,GACRyE,EACE5H,EAAa,CACX7B,GAAIuD,EAAKvD,GACTF,OAAQyD,EAAKzD,OACbwB,UAAWiC,EAAKjC,UAChBf,KAAMgD,EAAKhD,KACXgB,KAAMgC,EAAKhC,KACXC,MAAO+B,EAAK/B,MACZC,MAAO8B,EAAK9B,MACZC,OAAQ6B,EAAK7B,OACbC,oBAAqB4B,EAAK5B,oBAC1BC,eAAgB2B,EAAK3B,kBAGzByG,EAAS,kBAAD,OAAmB9E,EAAKvD,IACjC,EACD2E,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QAvBb,SA0BE,uBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,OACLvC,UAAU,sBACVwC,QAAQ,YANV,UAQE,uBAAMC,EAAE,2NACR,uBACEC,SAAS,UACTD,EAAE,0LAKR,yBACEX,KAAK,SACL9B,UAAU,wDACV,cAAY,QACZ,cAAY,0BACZ+B,QAAS,SAACC,GACR6X,EAAqBtZ,EAAKvD,GAC3B,EACD2E,MAAO,CACLM,OAAQ,OACRC,gBAAiB,cACjBC,QAAS,QAXb,SAcE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,MACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,2TAMlB,uBAAKzC,UAAU,uBAAf,UACGO,EAAK7B,QACJ,qBAAIsB,UAAU,0EAAd,oBAIF,sBAAIA,UAAU,2EAAd,6BACa,IACX,wBAAOA,UAAU,qBAAjB,SAAuCO,EAAKjC,eAE9C,uBAAK0B,UAAU,0BAAf,UACE,sBAAIA,UAAU,kDAAd,wBACW,IACT,yBAAOA,UAAU,qBAAjB,UAAuCO,EAAKhC,KAA5C,YAEF,sBAAIyB,UAAU,kDAAd,kBACQ,IACN,wBAAOA,UAAU,qBAAjB,SACGqU,KAAO9T,EAAKhD,MAAM+W,OAAO,sBAI/B/T,EAAK7B,QACJ,uBAAKsB,UAAU,sBAAf,UACE,sBAAIA,UAAU,iEAAd,gCACsB,IACpB,wBAAOA,UAAU,qBAAjB,SACGO,EAAK5B,yBAGV,sBAAIqB,UAAU,iEAAd,mBACS,IACP,wBAAOA,UAAU,qBAAjB,SACGO,EAAK3B,0BAMhB,sBAAKoB,UAAU,OAAf,SACE,uBAAKA,UAAU,WAAf,UACE,yBACE8B,KAAK,SACL9B,UAAU,kCACV,cAAY,QACZ,cAAY,oBACZ+B,QAAS,SAACC,GAAD,OAAON,EAAMnB,EAAKvD,GAAlB,EALX,uBASA,yBACE8E,KAAK,SACL9B,UAAU,kCACV,cAAY,QACZ,cAAY,4BACZ+B,QAAS,SAACC,GACRyE,EACE1H,EAAc,CACZ/B,GAAIuD,EAAKvD,GACTF,OAAQyD,EAAKzD,OACbwB,UAAWiC,EAAKjC,UAChBf,KAAMgD,EAAKhD,OAGhB,EAdH,qCAvLgBiC,IA+M7B,CCzMM,SAASya,KACd,IAAI5U,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IAEzB,EACE4B,EAAmB,IADrB,IAAQnE,KAAMkI,OAAd,MAAwB,GAAxB,EAAuC6K,EAAvC,EAA4B7G,UAG5B,EAAiCK,mBAAsB,IAAvD,mBAAOoU,EAAP,KAAkBC,EAAlB,KACA,EAAgDrU,mBAAsB,IAAtE,mBAAOsU,EAAP,KAAyBC,EAAzB,KAEA,EAAoBvU,mBAAiB,IAArC,mBAAO9I,EAAP,KAAW0E,EAAX,KACA,EAAwBoE,mBAAiB,IAAzC,mBAAOvI,EAAP,KAAaqQ,EAAb,KACA,EAA4C9H,mBAAiB,IAA7D,mBAAO8G,EAAP,KAAuBC,EAAvB,KAEA,EAAkD/G,mBAAiB,IAAnE,mBAAOwU,EAAP,KAA0BT,EAA1B,KAEA,EACE/T,oBAAkB,GADpB,mBAAOyU,EAAP,KAA+BC,EAA/B,KAGA,EACE1U,oBAAkB,GADpB,mBAAO2U,EAAP,KAA6BC,EAA7B,KAEA,EAAgD5U,oBAAkB,GAAlE,mBAAO6U,EAAP,KAAyBC,EAAzB,KACA,EAAsC9U,oBAAkB,GAAxD,mBAAOyG,EAAP,KAAoBC,GAApB,KACA,GAA0C1G,oBAAkB,GAA5D,qBAAOgH,GAAP,MAAsBC,GAAtB,MACA,GAA4CjH,oBAAkB,GAA9D,qBAAO+U,GAAP,MAAuBC,GAAvB,MACA,GAAsChV,oBAAkB,GAAxD,qBAAOiV,GAAP,MAAoBC,GAApB,MAEMvU,GAAWC,cAEjBC,qBAAU,WACRF,GAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,IAEjD,IAAI6V,GAAY,EAQhB,OAPAiB,QAAQC,IAAI,CACVnH,GAAuC5L,EAAK3L,OAAOP,MAAK,SAAC4hB,GAClDA,EAAOzhB,QACRyhB,EAAOzhB,SAAW+K,GAAcG,WAChC0S,GAAWiD,EAAoBY,EAAO1hB,KAC3C,MAEI,WACL6d,GAAY,CACb,CACF,GAAE,CAAC7R,EAAMF,EAAUoB,KAEpB,IAIMyU,GAAmB,iDAAG,WAAOxa,GAAP,oFACtBA,GAAOA,EAAME,iBAEZgM,GAAmBrP,EAHE,oDAO1B4T,GAAuC5L,EAAK3L,OAAOP,MAAK,SAAC4hB,GAClDA,EAAOzhB,QACRyhB,EAAOzhB,SAAW+K,GAAcG,WACpC2V,EAAoBY,EAAO1hB,KAC5B,IAEG8T,EAAU,OAETT,GAAkBrP,GAASqP,GAfN,iCAgBRuE,GACd5L,EAAK3L,MACLgT,GAlBsB,OAgBxBS,EAhBwB,gDAqBR8D,GAAmC5L,EAAK3L,MAAO2D,GArBvC,QAqBxB8P,EArBwB,kBAwBtBA,EAAQ7T,SAAW+K,GAAcM,OAAUwI,EAAQ7T,OAxB7B,wBAyBxBgT,IAAe,GAzBS,8BA6BtBa,EAAQ7T,SAAW+K,GAAcG,UA7BX,wBA8BxBkW,GAAoB,GACpBT,EAAY,IA/BY,2BAmC1BA,EAAY9M,EAAQ9T,MACpBmhB,GAAwB,GApCE,4CAAH,sDAuCnBS,GAAsB,iDAAG,WAC7Bza,EACA1D,GAF6B,4FAI7B0D,EAAME,iBAEAia,EAAiBX,EACpB5Z,KAAI,SAACC,GAAD,OAAeA,CAAf,IACJyH,QAAO,SAACzH,GAAD,OAAuBA,EAAKvD,KAAOA,CAAnC,IAEJoe,EAAwBhB,EAC3B9Z,KAAI,SAACC,GAAD,OAAeA,CAAf,IACJyH,QAAO,SAACzH,GAAD,OAAuBA,EAAKvD,KAAOA,CAAnC,IAEV6d,EAAe1G,KAAf,MAAA0G,EAAc,aAASO,IAEvBJ,IAAe,GAhBc,SAkBP7J,GACpB5L,EAAK3L,MACLihB,EAAe,GAAG7d,IApBS,UAkBvBqQ,EAlBuB,OAuB7B2N,IAAe,GAEV3N,EAAQ7T,QAAU6T,EAAQ7T,SAAW+K,GAAcM,MAzB3B,wBA0B3B2H,IAAe,GA1BY,kCA8B7BsO,IAAkB,GA9BW,UA+BvBI,GAAoBxa,GA/BG,QAgC7ByQ,GAAuC5L,EAAK3L,OAAOP,MAAK,SAAC4hB,GAClDA,EAAOzhB,QACRyhB,EAAOzhB,SAAW+K,GAAcG,WACpC2V,EAAoBY,EAAO1hB,KAC5B,IApC4B,4CAAH,wDAuCtB8hB,GAA4B,iDAAG,WACnC3a,EACA1D,GAFmC,wFAInC0D,EAAME,iBAENoa,IAAe,GANoB,SAQd7J,GAAqC5L,EAAK3L,MAAOoD,GARnC,cAQ7Bie,EAR6B,OAUnCD,IAAe,GAEXzW,GAAcC,QAAQ6J,SAAS4M,EAAOzhB,UACxCghB,GAA0B,GA9F5B9Y,EAAM,KAkGDuZ,EAAOzhB,QACVgT,IAAe,GAlBkB,UAqB7B0O,GAAoBxa,GArBS,QAsBnCyQ,GAAuC5L,EAAK3L,OAAOP,MAAK,SAAC4hB,GAClDA,EAAOzhB,QACRyhB,EAAOzhB,SAAW+K,GAAcG,WACpC2V,EAAoBY,EAAO1hB,KAC5B,IA1BkC,4CAAH,wDAoC5B0N,GAAe,SAACvG,GACpBA,EAAME,iBAEN,IAAM0a,EAAWnU,SAASQ,eACxB,oBAEE2T,IAAUA,EAAS/X,MAAQ,IAC/B,IAAMgY,EAAoBpU,SAASC,cACjC,0DAEEmU,GAAmBA,EAAkBpX,QAEzC,IAAMoF,EAAepC,SAASQ,eAC5B,SAEE4B,IAAcA,EAAahG,MAAQ,IAEvCqK,EAAQ,IACRf,EAAkB,GACnB,GAE4B,IAAzB4N,GACFnT,YAAW,kBAAMoT,GAAwB,EAA9B,GAAsC5V,IAG/CyH,GACFjF,YAAW,kBAAMkF,IAAe,EAArB,GAA6B1H,KAGX,IAA3ByV,GACFjT,YAAW,kBAAMkT,GAA0B,EAAhC,GAAwC1V,IAGjDgI,IACFxF,YAAW,kBAAMyF,IAAiB,EAAvB,GAA+BjI,IAGxC+V,IACFvT,YAAW,kBAAMwT,IAAkB,EAAxB,GAAgChW,KAGpB,IAArB6V,GACFrT,YAAW,kBAAMsT,GAAoB,EAA1B,GAAkC9V,IAG/C,IAAIwJ,GAAU,KAOd,OALEA,GADEhC,GAAuByO,GACf,eAACnY,GAAD,IAEA,KAIV,uBAAK5C,UAAU,iBAAf,UACGsO,GACD,eAACnO,GAAD,CAAWC,KAAM,CAAC,CAAEI,MAAM,EAAO9F,KAAM,aAEvC,eAACuJ,GAAD,CACEjH,GAAG,2BACH4C,MAAM,qCACNjD,KAAK,6EAGP,eAACsH,GAAD,CACEjE,UAAU,iBACVhD,GAAG,yBACH4C,MAAM,sBACNjD,KAAK,kDACLwH,MAAO,SAACnC,GAAD,OACLqZ,GAA6BrZ,EAAGsY,EAD3B,EAGPpW,OAAO,YAGT,eAACD,GAAD,CACEjE,UAAU,kBACVhD,GAAG,mBACH4C,MAAM,wBACNwE,YAAY,4BACZzH,KAAK,oDACLwH,MAAO,SAACnC,GAAD,OAAiCmZ,GAAuBnZ,EAAGhF,EAA3D,EACPkH,OAAO,cAGT,eAACF,GAAD,CAAWpE,MAAM,WAEjB,uBACEI,UAAU,YACV2B,MAAO,CACLE,QAAS,OACTD,WAAY,UAJhB,UAOE,eAACmD,GAAD,CACEhD,QAAS,SAACC,GACRiF,GAAajF,GACb,IAAM+H,EAAsB5C,SAASQ,eAAe,gBAC9C6T,EACJrU,SAASQ,eAAe,kBAEiB,WAApB,OAAnBoC,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBpI,MAAME,SAC7BkI,EAAoBpI,MAAME,QAAU,OAEhCkI,IACFA,EAAoBpI,MAAME,QAAU,SAGpC2Z,IACFA,EAAsB7Z,MAAME,QAAU,OACzC,EACDX,KAAK,SAGP,eAAC6D,GAAD,CACEhD,QAAS,SAACC,GACRiF,GAAajF,GACb,IAAM+H,EAAsB5C,SAASQ,eAAe,gBAC9C6T,EACJrU,SAASQ,eAAe,kBAEmB,WAApB,OAArB6T,QAAqB,IAArBA,OAAA,EAAAA,EAAuB7Z,MAAME,SAC/B2Z,EAAsB7Z,MAAME,QAAU,OAElC2Z,IACFA,EAAsB7Z,MAAME,QAAU,SAGtCkI,IAAqBA,EAAoBpI,MAAME,QAAU,OAC9D,EACDX,KAAK,YAGP,eAAC+D,GAAD,CACElD,QAAS,SAACC,GACRiF,GAAajF,GACb,IAAM+H,EAAsB5C,SAASQ,eAAe,gBAC9C6T,EACJrU,SAASQ,eAAe,kBAEtB6T,IACFA,EAAsB7Z,MAAME,QAAU,QACpCkI,IAAqBA,EAAoBpI,MAAME,QAAU,OAC9D,OAIL,uBACE7B,UAAU,sBACV2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,eALL,UAOE,eAACqM,GAAD,CAAWnI,KAAK,SAChB,uBACES,MAAO,CACLE,QAAS,QAFb,UAKE,eAACqH,GAAD,CACEC,YAAY,iBACZC,QAAQ,QACRrF,SAAU,SAAC/B,GAAD,OACR4L,EAAQ5L,EAAEqI,OAAO9G,MADT,EAGVvD,UAAU,KAEZ,eAACkF,GAAD,CACEnD,QAAS,SAACC,GACRkZ,GAAoBlZ,EACrB,UAKP,sBACEhC,UAAU,uBACV2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,iBALL,SAOe,OAAZyE,EACC,uBACEE,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,8BACNyD,QAAS5B,EAAQnB,KAAI,SAACC,GAAD,OAAmBA,EAAK7F,IAAxB,IACrB4I,YAAa,SAACtB,EAA6BzB,GAKzCsM,EAAkBtM,EACnB,EACDoB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GACRkZ,GAAoBlZ,EACrB,OAIL,uBACEL,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,8BACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GAKzCsM,EAAkBtM,EACnB,EACDoB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GACRkZ,GAAoBlZ,EACrB,UAMa,IAArB2Y,EACC,eAAC1a,GAAD,CAAWL,MAAM,kCACf,MACsB,IAAzB6a,EACC,eAAC/a,GAAD,CAAcE,MAAM,yBAClB,MACa,IAAhB2M,EACC,eAACrM,GAAD,CAAYN,MAAM,4CAChB,MACwB,IAA3B2a,EACC,eAAC7a,GAAD,CAAcE,MAAM,wCAClB,MACe,IAAlBkN,GACC,eAACpN,GAAD,CAAcE,MAAM,0BAClB,MACgB,IAAnBib,GACC,eAACnb,GAAD,CAAcE,MAAM,uCAClB,KAEJ,qBAAII,UAAU,OAAd,mCAECka,EAAUtT,OAAS,GAClB,eAACgC,GAAD,CAAahJ,MAAM,kBAAkBiJ,SA1QjB,SAACnI,GACzBA,EAAME,iBAENuZ,EAAY,IACZpN,IAAiB,EAClB,IAwQIqN,EACGA,EAAiB9Z,KAAI,SAACC,GACpB,OACE,+BACE,eAACqZ,GAAD,CACErZ,KAAMA,EACNmB,MAAOA,EACPmY,qBAAsBA,EACtBC,SAAS,KALHta,IASb,IACD,KAEJ,wBAEC0a,EAAUtT,OAAS,GAClB,+BACGsT,EACElS,QACC,SAACzH,GAAD,OACG6Z,EACE9Z,KAAI,SAACmb,GAAD,OAAyBA,EAAOze,EAAhC,IACJqR,SAAS9N,EAAKvD,GAHnB,IAKDsD,KAAI,SAACC,GACJ,OACE,+BACE,eAACqZ,GAAD,CACErZ,KAAMA,EACNmB,MAAOA,EACPmY,qBAAsBA,EACtBC,SAAS,KALHta,IASb,QAKZ,CCreM,SAASkc,GAAY/b,GAC1B,IACEgc,EASEhc,EATFgc,YACA/b,EAQED,EARFC,MACAgc,EAOEjc,EAPFic,aACAC,EAMElc,EANFkc,aACAC,EAKEnc,EALFmc,WACA/M,EAIEpP,EAJFoP,YACA5R,EAGEwC,EAHFxC,QACA4e,EAEEpc,EAFFoc,cACA9N,EACEtO,EADFsO,MAGF,OACE,sBACEjO,UAAU,aACVhD,GAAG,eACHqH,UAAW,EACXC,KAAK,SACL,cAAY,OALd,SAOE,sBAAKtE,UAAU,qCAAqCsE,KAAK,WAAzD,SACE,uBAAKtE,UAAU,gBAAf,UACE,uBAAKA,UAAU,eAAf,UACE,8BAAKJ,IACL,yBACEkC,KAAK,SACL9B,UAAU,QACV+B,QAASgN,EACT,eAAa,QACb,aAAW,SALb,SAQE,uBAAM,cAAY,OAAlB,mBAFK,MAKT,uBAAK/O,UAAU,aAAf,UACE,eAACqJ,GAAD,CAAWnI,KAAK,aAEhB,eAAC4H,GAAD,CACEhH,KAAK,OACL9E,GAAG,YACHuG,MAAOpG,EAAUA,EAAQzC,KAAO,GAChCqJ,SAAU,SAAC/B,GAAD,OACR+Z,EAAc,CAAErhB,KAAMsH,EAAEqI,OAAO9G,MAAOvG,GAAIG,EAAQH,IAD1C,EAGV6G,MAAM,oBACNwM,UAAU,IAEZ,uBAAKrQ,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,SACE,yBACE8B,KAAK,QACLC,QAAS,WACPgN,IACAgN,EAAc,GACf,EACD/b,UAAU,oCACV,eAAa,QAPf,mBAQO,KAKT,sBAAKA,UAAU,iBAAf,SACE,yBACEA,UAAU,0BACV8B,KAAK,SACLC,QAAS,SAACC,GACR2Z,EACIE,EAAa7Z,EAAG7E,EAAQzC,KAAMyC,EAAQH,IACtC4e,EAAa5Z,EAAG7E,EAAQzC,KAC7B,EAPH,SASGohB,SAIN7N,WAMZ,CC3FM,SAAS+N,GAAmBrc,GACjC,OACE,yBACEK,UAAS,wDAAmDL,EAAMK,WAClE+B,QAASpC,EAAMoC,QACfJ,MAAK,aACHqD,aAAc,QACXrF,EAAMgC,OAEX,cAAahC,EAAMsc,WACnB,yBAAiBtc,EAAMuc,YARzB,SAUGvc,EAAMuB,MAGZ,CCKM,SAASib,KACd,IAAI9W,EAAWC,cAETC,EAAOC,aAAY,SAAC1K,GAAD,OAAyBA,EAAMgB,aAA/B,IACzB,EAAgCgC,EAAoB,IAA5CvE,KAAMqM,OAAd,MAAyB,GAAzB,EAEA,EAAkD7H,IAAlD,mBAAOqe,EAAP,KAAgCC,EAAhC,KAAqB5W,UACrB,EACEzH,IADF,mBAAOZ,EAAP,KAAmC2T,EAAnC,KAAwBtL,UAExB,EACExH,IADF,mBAAOZ,EAAP,KAAmCwI,EAAnC,KAAwBJ,UAGxB,EAAgDK,mBAAiB,IAAjE,mBAAOwW,EAAP,KAAyBC,EAAzB,KACA,EAAoCzW,mBAAiB,IAArD,mBAAOgW,EAAP,KAAmBU,EAAnB,KACA,EAA8C1W,mBAAc,CAC1DpL,KAAM,GACNsC,GAAI,KAFN,mBAAOyf,EAAP,KAAwBC,EAAxB,KAIA,EAAsC5W,mBAAyB,MAA/D,mBAAO6V,EAAP,KAAoBgB,EAApB,KACA,EAA0C7W,mBAExC,MAFF,mBAAO8W,EAAP,KAAsBC,EAAtB,KAGA,EAA0B/W,mBAA6B,MAAvD,mBAAOmI,EAAP,KAAcC,EAAd,KAEA,EAA0CpI,mBAGvC,CAAEjC,MAAO,GAAI7G,GAAI,KAHpB,mBAAO8f,EAAP,KAAsBC,GAAtB,KAKMtW,GAAWC,cAEjBC,qBAAU,WACRF,GAAStL,EAAcoK,EAAK3L,QACvB2L,EAAK3L,OACRyL,EAASE,EAAKhL,qBAAsB,CAAEgH,SAAS,GAElD,GAAE,CAACgE,EAAMkB,GAAUpB,IAEpB,IAAM2X,GAAU,iDAAG,WACjBtc,EACAjI,GAFiB,2EAIjBiI,EAAME,iBACNic,EAAiBpkB,GALA,2CAAH,wDAQVwkB,GAAmB,SAACvc,GACxBA,EAAME,iBAENic,EAAiB,KAClB,EAEKK,GAAqB,SAAC/f,GAC1B,SAAKA,IAAYA,EAAQiR,QAAUjR,EAAQyJ,OAAS,MAClDsH,EAAS,eAACjO,GAAD,CAAWL,MAAM,uCACnB,EAGV,EAEKud,GAAe,iDAAG,WACtBzc,EACAvD,GAFsB,8EAItBuD,EAAME,iBAEDsc,GAAmB/f,GANF,0EASdif,EAAW,CACfjf,YACC2J,SAXiB,OAYpB4V,EAAmB,IACnBxO,EAAS,eAACxO,GAAD,CAAcE,MAAM,kCAbT,kDAehB,KAAMpG,SAAW+K,GAAcK,UACjCsJ,EAAS,eAACjO,GAAD,CAAWL,MAAM,iCAE5BsO,EAAS,eAAChO,GAAD,CAAYN,MAAM,0DAlBP,0DAAH,wDAsBfwd,GAAoB,iDAAG,WAC3B1c,EACAvD,EACAH,GAH2B,kFAK3B0D,EAAME,iBALqB,kBAQnBxD,EAAc,CAClBJ,KACAG,YAVuB,OAYzBuf,EAAmB,IACnBxO,EAAS,eAACxO,GAAD,CAAcE,MAAM,0BAbJ,gDAezBsO,EAAS,eAAChO,GAAD,CAAYN,MAAM,0DAfF,yDAAH,0DAmBpByd,GAAe,iDAAG,WACtB3c,EACA1D,EACAG,GAHsB,kFAKtBuD,EAAME,iBALgB,kBAQdvD,EAAc,CAClBL,KACAG,YAVkB,OAYpB+Q,EAAS,eAACxO,GAAD,CAAcE,MAAM,wBAC7Bid,EAAiB,IAbG,mDAehB,KAAMrjB,SAAW+K,GAAcK,SAff,wBAgBlBsJ,EACE,eAAChO,GAAD,CAAYN,MAAM,2FAjBF,2BAqBpBsO,EAAS,eAAChO,GAAD,CAAYN,MAAM,0DArBP,yDAAH,0DAyBf0d,GACJV,GAAiBA,EAAc/Y,OAAS+Y,EAAc/Y,MAAM+C,OAAS,EAEnExB,GAAS,KAWb,OATEA,GADEiX,GAAgBtL,GAAmBlL,EAC5B,eAACjD,GAAD,IAEA,KAGPqL,GACF3G,YAAW,kBAAM4G,EAAS,KAAf,GAAsBpJ,IAIjC,uBAAK9E,UAAU,iBAAf,UACGoF,GACD,eAACjF,GAAD,CAAWC,KAAM,CAAC,CAAEI,MAAM,EAAO9F,KAAM,gBAEvC,eAACsJ,GAAD,CAAWpE,MAAM,cAEjB,uBACEI,UAAU,YACV2B,MAAO,CACL6F,SAAU,OACVC,WAAY,SACZ5F,QAAS,QACTD,WAAY,UANhB,UASE,eAACmD,GAAD,CACEhD,QAAS,SAACC,GACR,IAAM0F,EACJP,SAASQ,eAAe,mBACpBC,EAAsBT,SAASQ,eAAe,gBAEN,UAApB,OAAtBD,QAAsB,IAAtBA,OAAA,EAAAA,EAAwB/F,MAAME,SAChC6F,EAAuB/F,MAAME,QAAU,OAEnC6F,IACFA,EAAuB/F,MAAME,QAAU,QAGvC+F,IAAqBA,EAAoBjG,MAAME,QAAU,OAC9D,EACDX,KAAK,aAGP,eAAC8a,GAAD,CACEja,QAAS,SAACC,GACR,IAAM0F,EACJP,SAASQ,eAAe,mBACtBD,IACFA,EAAuB/F,MAAME,QAAU,QAEzC0a,EAAoB,QACpBC,EAAc,SACdG,GAAe,EAChB,EACDzb,KAAK,OACLlB,UAAU,YACVic,WAAW,QACXC,WAAW,iBAGb,eAACjX,GAAD,CACElD,QAAS,SAACC,GACRib,GAAiBjb,GAEjB,IAAM6F,EACJV,SAASQ,eAAe,gBACtBE,IACFA,EAAqBlG,MAAME,QAAU,QACvC,IAAMiG,EACJX,SAASQ,eAAe,mBAEtBG,IAAoBA,EAAmBnG,MAAME,QAAU,QAE3D,IAAM2L,EAAiBrG,SAASC,cAC9B,2DAEEoG,GAAgBA,EAAerJ,OACpC,IAGFmZ,IACC,eAACtB,GAAD,CACEja,QAASkb,GACT/b,KAAK,kBACLlB,UAAU,qCAKhB,sBACE2B,MAAO,CACLE,QAAS,QAEX7E,GAAG,kBACHgD,UAAU,OALZ,SAOG4F,EAASgB,OAAS,EACjB,uBACEjF,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,sBACNyD,QAASuC,EAAStF,KAAI,SAACC,GAAD,MAAgB,CACpCsD,MAAOtD,EAAKpD,QACZH,GAAIuD,EAAKvD,GAFW,IAItBsG,YAAa,SAACtB,EAA6BzB,GACzCwc,GAAiBxc,GAAQ,CAAC,EAC3B,EACDoB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GAAD,OACPgb,GAAWhb,EAAG8a,EADP,OAMb,uBACEnb,MAAO,CACLE,QAAS,QAFb,UAKE,eAACuB,GAAD,CACExD,MAAM,sBACNyD,QAAS,GACTC,YAAa,SAACtB,EAA6BzB,GACzCwc,GAAiBxc,GAAQ,CAAC,EAC3B,EACDoB,MAAO,CACLU,MAAO,WAGX,eAAC6C,GAAD,CACEnD,QAAS,SAACC,GAAD,OACPgb,GAAWhb,EAAG8a,EADP,SAQjB,eAAC7Y,GAAD,CACEjE,UAAU,iBACVhD,GAAG,iBACH4C,MAAM,oBACNjD,KAAK,gDACLwH,MAAO,SAACnC,GACF4a,GACFS,GAAgBrb,EAAG4a,EAAc5f,GAAI4f,EAAc/Y,MAEtD,EACDK,OAAO,YAGT,eAACwX,GAAD,CACEC,YAAaA,EACb/b,MAAO0c,EACPR,WAAYA,EACZ3e,QAASsf,EACT1N,YAAa,SAAC/M,GAAD,OACX0a,EAAmB,CAAEhiB,KAAM,GAAIsC,GAAI,IADxB,EAGb4e,aAAc,SAAC5Z,EAA6B7E,GAA9B,OACZggB,GAAgBnb,EAAG7E,EADP,EAGd0e,aAAcuB,GACdrB,cAAeW,EACfzO,MAAOA,IAGRqP,GACC,uBAAKtd,UAAU,gBAAf,UACE,sBAAKA,UAAU,cAAf,SACE,sBAAIA,UAAU,qCAAd,sBACY,IACV,wBAAOA,UAAU,2CAAjB,SACG4c,EAAc/Y,aAIrB,uBAAK7D,UAAU,gBAAf,UACE,sBAAKA,UAAU,MAAf,SACE,yBACEA,UAAU,+CACV,cAAY,QACZ,cAAY,gBACZ+B,QAAS,SAACC,GACRua,EAAoB,UACpBC,EAAc,UACdE,EAAmB,CACjBhiB,KAAMkiB,EAAc/Y,MACpB7G,GAAI4f,EAAc5f,KAEpB2f,GAAe,EAChB,EAZH,sBAiBF,sBAAK3c,UAAU,MAAf,SACE,yBACEA,UAAU,kDACV,cAAY,QACZ,cAAY,kBACZ+B,QAAS,SAACC,GAAD,OAAiCA,CAAjC,EAJX,6BAYN,qBAAIhC,UAAU,kBAAd,yCAEDiO,IAGN,CCzXM,SAASsP,KACd,IAAMlY,EAAWC,cAEXkY,EAAa,WACjB,IAAMC,EAAkBtW,SAASQ,eAAe,sBAC1C+V,EAAgBvW,SAASQ,eAAe,oBACxCgW,EAAexW,SAASQ,eAAe,mBACvCiW,EAAqBzW,SAASQ,eAAe,yBAC7CkW,EAAkB1W,SAASQ,eAAe,YAET,WAApB,OAAf8V,QAAe,IAAfA,OAAA,EAAAA,EAAiB9b,MAAME,WACzB4b,EAAgB9b,MAAME,QAAU,QACG,WAApB,OAAb6b,QAAa,IAAbA,OAAA,EAAAA,EAAe/b,MAAME,WACvB6b,EAAc/b,MAAME,QAAU,QACI,WAApB,OAAZ8b,QAAY,IAAZA,OAAA,EAAAA,EAAchc,MAAME,WACtB8b,EAAahc,MAAME,QAAU,QACW,WAApB,OAAlB+b,QAAkB,IAAlBA,OAAA,EAAAA,EAAoBjc,MAAME,WAC5B+b,EAAmBjc,MAAME,QAAU,QACF,eAAhB,OAAfgc,QAAe,IAAfA,OAAA,EAAAA,EAAiB7d,aACnB6d,EAAgB7d,UAAY,aAE9B8d,GACD,EAEKA,EAAqB,WACzB,IAAMD,EAAkB1W,SAASQ,eAAe,YAE5CkW,IACgC,cAA9BA,EAAgB7d,UAClB6d,EAAgB7d,WAAa,cAC1B6d,EAAgB7d,UAAY,YAEpC,EAED,OACE,uBAAKhD,GAAG,mBAAR,UACE,uBAAKgD,UAAU,6CAAf,UACE,qBAAIhD,GAAG,eAAP,SACE,uDAEF,sBACEgD,UAAU,WACV+B,QAAS,SAACC,GACR8b,GACD,EAJH,SAME,sBACE1b,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,QACLvC,UAAU,aACVwC,QAAQ,YANV,SAQE,uBACEE,SAAS,UACTD,EAAE,gMAMV,sBAAIzC,UAAU,YAAYhD,GAAG,WAA7B,UACE,qBAAIgD,UAAU,6BAAd,SACE,yBACEA,UAAU,gBACV+B,QAAS,SAACC,GACR8b,IACAzY,EAAS,QACV,EACD1D,MAAO,CAAEQ,QAAS,QANpB,mBAD6C,UAa/C,sBAAInC,UAAU,6BAAd,UACE,0BACEA,UAAU,gBACV2B,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,sBACZ,gBAAc,QACd,gBAAc,qBANhB,mBASE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,uJAGZ,uBAAKzC,UAAU,gBAAgBhD,GAAG,qBAAlC,UACE,qBAAIgD,UAAU,WAAW,eAAa,QAAtC,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,mBACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,sBACZ,gBAAc,QACd,gBAAc,qBAVhB,0BADgD,WAgBlD,qBAAInC,UAAU,WAAW,eAAa,QAAtC,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,YACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,sBACZ,gBAAc,QACd,gBAAc,qBAVhB,2BADgD,eAtCP,cAyD/C,sBAAInC,UAAU,6BAAd,UACE,0BACEA,UAAU,gBACV2B,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,yBACZ,gBAAc,QACd,gBAAc,wBANhB,yBASE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,uJAGZ,uBAAKzC,UAAU,gBAAgBhD,GAAG,wBAAlC,UACE,qBAAIgD,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,kBACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,yBACZ,gBAAc,QACd,gBAAc,wBAVhB,yBAD2B,WAgB7B,qBAAInC,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,WACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,yBACZ,gBAAc,QACd,gBAAc,wBAVhB,2BAD2B,cAtCc,WAyD/C,sBAAInC,UAAU,6BAAd,UACE,0BACEA,UAAU,gBACV2B,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,oBACZ,gBAAc,QACd,gBAAc,mBANhB,qBASE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,uJAGZ,uBAAKzC,UAAU,gBAAgBhD,GAAG,mBAAlC,UACE,qBAAIgD,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,iBACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,oBACZ,gBAAc,QACd,gBAAc,mBAVhB,2BAD2B,SAgB7B,qBAAInC,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,UACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,oBACZ,gBAAc,QACd,gBAAc,mBAVhB,4BAD2B,QAgB7B,qBAAInC,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,oBACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,oBACZ,gBAAc,QACd,gBAAc,mBAVhB,wBAD2B,YAtDc,WAwE/C,sBAAInC,UAAU,6BAAd,UACE,0BACEA,UAAU,gBACV2B,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,mBACZ,gBAAc,QACd,gBAAc,kBANhB,mBASE,sBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,KAAK,eACLvC,UAAU,mBACVwC,QAAQ,YANV,SAQE,uBAAMC,EAAE,uJAGZ,uBAAKzC,UAAU,gBAAgBhD,GAAG,kBAAlC,UACE,qBAAIgD,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,YACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,mBACZ,gBAAc,QACd,gBAAc,kBAVhB,yBAD2B,QAgB7B,qBAAInC,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,SACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,mBACZ,gBAAc,QACd,gBAAc,kBAVhB,0BAD2B,QAgB7B,qBAAInC,UAAU,WAAd,SACE,yBACEA,UAAU,oBACV+B,QAAS,SAACC,GACRwb,IACAnY,EAAS,WACV,EACD1D,MAAO,CAAEQ,QAAS,QAClB,cAAY,WACZ,cAAY,mBACZ,gBAAc,QACd,gBAAc,kBAVhB,4BAD2B,eAtDc,UAyE/C,qBAAInC,UAAU,6BAAd,SACE,yBACEA,UAAU,yBACV+B,QAAS,SAACC,GACRxJ,IACAslB,IACAzY,EAAS,SACV,EACD1D,MAAO,CAAEQ,QAAS,QAPpB,mBAD6C,gBAgBtD,CC9UM,SAAS4b,KACd,OACE,eAAC,IAAD,CAAU/e,MAAOA,EAAjB,SACE,gBAAC,IAAD,WACE,eAACue,GAAD,IACA,sBAAKvd,UAAU,QAAf,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOge,KAAK,SAASC,QAAS,eAACrM,GAAD,MAC9B,eAAC,IAAD,CAAOoM,KAAK,IAAIC,QAAS,eAACvM,GAAD,MACzB,eAAC,IAAD,CAAOsM,KAAK,QAAQC,QAAS,eAACvM,GAAD,MAC7B,eAAC,IAAD,CAAOsM,KAAK,UAAUC,QAAS,eAAC9Y,GAAD,KAAkB3F,KACjD,eAAC,IAAD,CACEwe,KAAK,iBACLC,QAAS,eAAC3N,GAAD,KACJ9Q,KAEP,eAAC,IAAD,CACEwe,KAAK,wBACLC,QAAS,eAACvN,GAAD,KACJlR,KAEP,eAAC,IAAD,CACEwe,KAAK,YACLC,QAAS,eAAClJ,GAAD,GAAcvV,MAClBA,KAEP,eAAC,IAAD,CAAOwe,KAAK,YAAYC,QAAS,eAAChE,GAAD,KAAmBza,KACpD,eAAC,IAAD,CACEwe,KAAK,mBACLC,QAAS,eAACzO,GAAD,KACJhQ,KAEP,eAAC,IAAD,CACEwe,KAAK,6BACLC,QAAS,eAAC3M,GAAD,KACJ9R,KAEP,eAAC,IAAD,CAAOwe,KAAK,SAASC,QAAS,eAACrF,GAAD,KAAgBpZ,KAC9C,eAAC,IAAD,CAAOwe,KAAK,WAAWC,QAAS,eAAC9H,GAAD,KAAkB3W,KAClD,eAAC,IAAD,CACEwe,KAAK,oBACLC,QAAS,eAAC9B,GAAD,KACJ3c,KAEP,eAAC,IAAD,CAAOwe,KAAK,WAAWC,QAAS,eAAC5R,GAAD,MAChC,eAAC,IAAD,CACE2R,KAAK,kBACLC,QAAS,eAACxQ,GAAD,KACJjO,KAEP,eAAC,IAAD,CAAOwe,KAAK,IAAIC,QAAS,eAACvM,GAAD,KAAelS,cAMnD,CC3EM,SAAS0e,KAKd,OAJAvX,qBAAU,WACRQ,SAASxK,KAAKgF,MAAMO,gBAAkB,SACvC,GAAE,IAEI,eAAC6b,GAAD,GACR,CCNYI,IAASC,WACpBjX,SAASQ,eAAe,SAErB0W,OAAO,eAACH,GAAD,I","file":"static/js/main.8a2e0644.chunk.js","sourcesContent":["import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\nimport jwt from 'jsonwebtoken';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\nconst SECRET_TOKEN = process.env.REACT_APP_SECRET_TOKEN as string;\nconst LOCAL_STORAGE_LOGIN = 'user-info-arv';\n\nexport type UserLogin = {\n  userName?: string | null;\n  token: string | null;\n  refreshToken: string;\n  redirectLoginPageUri?: string;\n};\n\nconst authService = {\n  getUserInLocalStorange() {\n    const user = localStorage.getItem(LOCAL_STORAGE_LOGIN);\n    if (!user) return null;\n    try {\n      const userJson = JSON.parse(user);\n      return userJson;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  saveLoginInLocalStorage(params: UserLogin) {\n    localStorage.setItem(LOCAL_STORAGE_LOGIN, JSON.stringify(params));\n  },\n\n  cleanUserInLocalStorange() {\n    localStorage.removeItem(LOCAL_STORAGE_LOGIN);\n  },\n\n  async sendLogin(user: string, password: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/authenticate`;\n\n    const { data, status } = await axios\n      .post(URL, {\n        user: user,\n        password: password,\n      })\n      .then((res) => ({ data: res.data, status: res.status }))\n      .catch((err) => ({\n        data: err.response ? err.response.data : err.response,\n        status: err.response ? err.response.status : err.response,\n      }));\n\n    return { data, status };\n  },\n\n  async redirectLogin() {\n    const loggedUser = await this.getUserInLocalStorange();\n    return loggedUser ? null : '/login';\n  },\n\n  isValidToken(token: string): boolean {\n    try {\n      jwt.verify(token, SECRET_TOKEN);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  },\n\n  getUserNameInToken(token: string): string {\n    const user: any = jwt.decode(token);\n\n    if (user) {\n      return user.user;\n    }\n    return '';\n  },\n};\n\nexport { authService };\n","import { createSlice } from '@reduxjs/toolkit';\nimport { authService, UserLogin } from '../services/authService';\nimport { ReducerActionType } from './types/reducerType';\n\nconst loginInLocalStorage = authService.getUserInLocalStorange();\n\nconst initialState: UserLogin = {\n  userName: loginInLocalStorage ? loginInLocalStorage.userName : null,\n  token: loginInLocalStorage ? loginInLocalStorage.token : null,\n  refreshToken: loginInLocalStorage ? loginInLocalStorage.refreshToken : null,\n  redirectLoginPageUri: '/login',\n};\n\nconst authenticatedSlice = createSlice({\n  name: 'authenticated',\n  initialState,\n  reducers: {\n    loginAdded: {\n      reducer(state: UserLogin, action: ReducerActionType<UserLogin>) {\n        authService.cleanUserInLocalStorange();\n        const userInfos = {\n          ...action.payload,\n          userName: authService.getUserNameInToken(\n            action.payload.token as string,\n          ),\n        };\n        authService.saveLoginInLocalStorage(userInfos);\n        state.userName = userInfos.userName;\n        state.token = action.payload.token;\n      },\n      prepare(params: { token: string; refreshToken: string }): {\n        payload: UserLogin;\n      } {\n        return {\n          payload: {\n            token: params.token,\n            refreshToken: params.refreshToken,\n          },\n        };\n      },\n    },\n    validateToken: {\n      reducer(state: UserLogin, action: any) {\n        if (authService.isValidToken(action.payload)) {\n          return;\n        }\n        state.token = null;\n        authService.cleanUserInLocalStorange();\n      },\n      prepare(params) {\n        return { payload: params };\n      },\n    },\n  },\n});\n\nexport const { loginAdded, validateToken } = authenticatedSlice.actions;\n\nexport default authenticatedSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: `${process.env.REACT_APP_BASE_URL}/api`,\n    prepareHeaders: (headers, { getState }: any) => {\n      const token = getState().authenticated.token;\n      headers.set('authorization', token);\n      return headers;\n    },\n  }),\n  tagTypes: ['Clients', 'Segments'],\n  endpoints: (builder) => ({\n    getClients: builder.query({\n      query: () => '/client/all',\n      providesTags: ['Clients'],\n    }),\n    addNewClient: builder.mutation({\n      query: (initialClient) => ({\n        url: '/client/create',\n        method: 'POST',\n        body: initialClient,\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    updateClient: builder.mutation({\n      query: (client) => ({\n        url: '/client/update',\n        method: 'PUT',\n        body: client,\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    deleteClient: builder.mutation({\n      query: (client) => ({\n        url: '/client',\n        method: 'DELETE',\n        params: { id: client },\n      }),\n      invalidatesTags: ['Clients'],\n    }),\n    getSegments: builder.query({\n      query: () => '/segments',\n      providesTags: ['Segments'],\n    }),\n    addNewSegment: builder.mutation({\n      query: (segment) => ({\n        url: '/segment/create',\n        method: 'POST',\n        body: segment,\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    updateSegment: builder.mutation({\n      query: (segment) => ({\n        url: '/segment/update',\n        method: 'PUT',\n        body: segment,\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    deleteSegment: builder.mutation({\n      query: (params) => ({\n        url: '/segment',\n        method: 'DELETE',\n        params: { id: params.id, segment: params.segment },\n      }),\n      invalidatesTags: ['Segments'],\n    }),\n    getSchedulesByDate: builder.query({\n      query: (params) => ({\n        url: '/schedule/date',\n        method: 'GET',\n        params: { date: params.date },\n      }),\n    }),\n    getSchedulesByClient: builder.query({\n      query: (params) => ({\n        url: '/schedule/client',\n        method: 'GET',\n        params: { date: params.client },\n      }),\n    }),\n    addNewSchedule: builder.mutation({\n      query: (params) => ({\n        url: '/schedule/new',\n        method: 'POST',\n        body: params,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetClientsQuery,\n  useAddNewClientMutation,\n  useUpdateClientMutation,\n  useDeleteClientMutation,\n  useGetSegmentsQuery,\n  useAddNewSegmentMutation,\n  useUpdateSegmentMutation,\n  useDeleteSegmentMutation,\n  useGetSchedulesByDateQuery,\n  useGetSchedulesByClientQuery,\n  useAddNewScheduleMutation,\n} = apiSlice;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ReducerActionType } from './types/reducerType';\n\nexport type ISchedule = {\n  id: string;\n  client: string;\n  procedure: string;\n  date: string;\n  time: string;\n  price: string;\n  phone: string;\n  pacote: boolean | null;\n  qtdTotalAtendimento: number;\n  qtdAtendimento: string;\n};\n\nconst initialState: ISchedule = {\n  id: '',\n  client: '',\n  procedure: '',\n  date: '',\n  time: '',\n  price: '',\n  phone: '',\n  pacote: false,\n  qtdTotalAtendimento: 0,\n  qtdAtendimento: '',\n};\n\nconst scheduleSlice = createSlice({\n  name: 'schedule',\n  initialState,\n  reducers: {\n    onEditClient: {\n      reducer(state: ISchedule, action: ReducerActionType) {\n        state.id = action.payload.id;\n        state.client = action.payload.client;\n        state.procedure = action.payload.procedure;\n        state.date = action.payload.date;\n        state.time = action.payload.time;\n        state.price = action.payload.price;\n        state.phone = action.payload.phone;\n        state.pacote = action.payload.pacote;\n        state.qtdTotalAtendimento = action.payload.qtdTotalAtendimento;\n        state.qtdAtendimento = action.payload.qtdAtendimento;\n      },\n      prepare(payload) {\n        return {\n          payload,\n        };\n      },\n    },\n  },\n});\n\nexport default scheduleSlice.reducer;\nexport const { onEditClient } = scheduleSlice.actions;\n","import { createSlice } from '@reduxjs/toolkit';\nimport { ReducerActionType } from './types/reducerType';\n\nexport type ISales = {\n  id: string;\n  client: string;\n  procedure: string;\n  date: string;\n  price: string;\n};\n\nconst initialState: ISales = {\n  id: '',\n  client: '',\n  procedure: '',\n  date: '',\n  price: '',\n};\n\nconst salesSlice = createSlice({\n  name: 'sales',\n  initialState,\n  reducers: {\n    onCreateSales: {\n      reducer(state: ISales, action: ReducerActionType) {\n        state.id = action.payload.id;\n        state.client = action.payload.client;\n        state.procedure = action.payload.procedure;\n        state.date = action.payload.date;\n        state.price = action.payload.price;\n      },\n      prepare(payload) {\n        return {\n          payload,\n        };\n      },\n    },\n  },\n});\n\nexport default salesSlice.reducer;\nexport const { onCreateSales } = salesSlice.actions;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authenticatedReducer from '../reducers/authenticatedSlice';\nimport { apiSlice } from '../api/ApiSlice';\nimport scheduleReducer from '../reducers/scheduleSlice';\nimport salesReducer from '../reducers/salesSlice';\n\nexport const store = configureStore({\n  reducer: {\n    authenticated: authenticatedReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    schedule: scheduleReducer,\n    sales: salesReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n});\n\nexport type ReducerStore = {\n  authenticated: {\n    userName: any;\n    token: string;\n    refreshToken: string;\n    redirectLoginPageUri: string;\n  };\n  clients: {\n    data: never[];\n    status: string;\n    error: null;\n  };\n  schedule: {\n    id: string;\n    client: string;\n    procedure: string;\n    date: string;\n    time: string;\n    phone: string;\n    pacote: boolean;\n    qtdTotalAtendimento: number;\n    qtdAtendimento: number;\n  };\n  sales: {\n    id: string;\n    client: string;\n    procedure: string;\n    date: string;\n    price: string;\n  };\n};\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { v4 as uuid } from 'uuid';\n\nexport function randomId(): string {\n  return uuid();\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertSuccess(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"success\"\n      color=\"success\"\n      className=\"mt-2 mb-3 border border-success text-success\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertInfo(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"info\"\n      color=\"info\"\n      className=\"mt-2 mb-3 border border-primary text-primary\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Alert } from '@mui/material';\n\nexport function AlertError(props: { title: string }) {\n  const { title } = props;\n  return (\n    <Alert\n      severity=\"error\"\n      color=\"error\"\n      className=\"mt-2 mb-3 border border-danger text-danger\"\n    >\n      {title}\n    </Alert>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport { randomId } from '../utils/random';\n\ntype InputProps = {\n  page: {\n    link: boolean | string;\n    name: string;\n  }[];\n};\n\nexport function Breadcumb(props: InputProps) {\n  const { page } = props;\n\n  return (\n    <div className=\"mb-4\">\n      <nav aria-label=\"breadcrumb mb-4\">\n        <ol className=\"breadcrumb remove-style-link\">\n          <li className=\"breadcrumb-item\" key={randomId()}>\n            <Link to=\"/home\">Home</Link>\n          </li>\n          {page.map((item) => {\n            if (item.link) {\n              return (\n                <li\n                  className=\"breadcrumb-item active\"\n                  aria-current=\"page\"\n                  key={randomId()}\n                >\n                  <Link to={item.link as string}>{item.name}</Link>\n                </li>\n              );\n            }\n            return (\n              <li\n                className=\"breadcrumb-item active\"\n                aria-current=\"page\"\n                key={randomId()}\n              >\n                {item.name}\n              </li>\n            );\n          })}\n        </ol>\n      </nav>\n    </div>\n  );\n}\n","export const WhatsAppService = {\n  redirectToWhatsappWithMessage(\n    event: React.BaseSyntheticEvent,\n    client: string,\n    contact: string,\n    date: string,\n    time: string,\n    qtdTotalAtendimento: number,\n    qtdAtendimento: number,\n    procedure: string,\n  ): void {\n    event.preventDefault();\n    const isPacote = qtdTotalAtendimento\n      ? `Esse é o ${qtdAtendimento + 1}º dia do pacote. \\n`\n      : '';\n    const dateUrl = new Date(date).toLocaleDateString('pt-BR', {\n      timeZone: 'UTC',\n    });\n    const text = `Olá ${client}, posso confirmar o horário que agendamos para dia ${dateUrl} às ${time} horas? \\n${isPacote}\\nProcedimento: ${procedure} \\nAguardo seu retorno!`;\n    const URL = `https://api.whatsapp.com/send?phone=55${contact}&text=`;\n    const redirect = window.encodeURIComponent(text);\n    window.open(URL + redirect, '_blank');\n  },\n\n  redirectToWhatsapp(event: React.SyntheticEvent, contact: string): void {\n    event.preventDefault();\n    const URL = `https://api.whatsapp.com/send?phone=55${contact.replace(\n      /[^0-9]+/g,\n      '',\n    )}`;\n    window.open(URL, '_blank');\n  },\n};\n","import React from 'react';\nimport { WhatsAppService } from '../services/whatsapp-service';\nimport { randomId } from '../utils/random';\n\nimport { Link } from 'react-router-dom';\nimport { IClient } from '../api/types/Client';\n\ntype InputProps = {\n  clients: IClient[];\n  setId: any;\n};\n\nexport function CardClients(props: InputProps) {\n  const { clients, setId } = props;\n\n  return (\n    <div>\n      {clients\n        ? clients.map((item) => {\n            return (\n              <div className=\"card mt-2 mb-3 p-2 border-bottom\" key={item.id}>\n                <div className=\"card-header\">\n                  <div className=\"form-row\" style={{ alignItems: 'center' }}>\n                    <h6 className=\"text-primary font-weight-bold pt-2 col\">\n                      Cliente:{' '}\n                      <small className=\"text-muted h6\">{item.name}</small>\n                    </h6>\n\n                    <div\n                      style={{\n                        display: 'flex',\n                      }}\n                    >\n                      <button\n                        type=\"submit\"\n                        className=\"m-0 pl-2 pr-2 btn font-weight-bold\"\n                        onClick={(e) =>\n                          WhatsAppService.redirectToWhatsapp(e, item.phone)\n                        }\n                        style={{\n                          border: 'none',\n                          backgroundColor: 'transparent',\n                          outline: 'none',\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"30\"\n                          height=\"30\"\n                          fill=\"green\"\n                          className=\"bi bi-whatsapp\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\n                        </svg>\n                      </button>\n                      <Link className=\"\" to={`/editClient/${item.id}`}>\n                        <button\n                          type=\"button\"\n                          className=\"m-0 pl-2 pr-2 btn\"\n                          key={randomId()}\n                          style={{\n                            border: 'none',\n                            backgroundColor: 'transparent',\n                            outline: 'none',\n                          }}\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"30\"\n                            height=\"30\"\n                            fill=\"blue\"\n                            className=\"bi bi-pencil-square\"\n                            viewBox=\"0 0 16 16\"\n                          >\n                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                            <path\n                              fillRule=\"evenodd\"\n                              d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\n                            />\n                          </svg>\n                        </button>\n                      </Link>\n                      <button\n                        type=\"button\"\n                        className=\"m-0 pl-2 pr-2 btn btn-outline-danger\"\n                        data-toggle=\"modal\"\n                        data-target=\"#delete-client\"\n                        onClick={(e) => setId(item.id)}\n                        style={{\n                          border: 'none',\n                          backgroundColor: 'transparent',\n                          outline: 'none',\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"30\"\n                          height=\"30\"\n                          fill=\"red\"\n                          className=\"bi bi-trash-fill\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n                        </svg>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"list-group-item p-3 mt-2\">\n                  {item.email ? (\n                    <h6 className=\"card-subtitle text-primary font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n                      E-mail:{' '}\n                      <small className=\"text-muted h6 mb-3\">{item.email}</small>\n                    </h6>\n                  ) : null}\n                  <h6 className=\"card-subtitle text-primary font-weight-bold pt-2\">\n                    Telefone:{' '}\n                    <small className=\"text-muted h6 mb-3\">{item.phone}</small>\n                  </h6>\n                  {item.segment ? (\n                    <h6 className=\"card-subtitle text-primary font-weight-bold pt-3 pb-2 mt-3 border-top \">\n                      Segmento:{' '}\n                      <small className=\"text-muted h6 mb-3\">\n                        {item.segment}\n                      </small>\n                    </h6>\n                  ) : null}\n                </div>\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n}\n","import '../css/main.css';\n\nexport function CircularIndeterminate() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        position: 'fixed',\n        width: '100',\n        height: '100%',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        zIndex: 2,\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\n","import TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\ntype InputProps = {\n  title: string;\n  options: string[];\n  selectValue: any;\n  value?: any;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\nexport function ComboBox(props: InputProps) {\n  const { title, options, selectValue, value, className, style } = props;\n\n  return (\n    <Autocomplete\n      disablePortal\n      id=\"combo-box-demo\"\n      freeSolo\n      options={options}\n      renderInput={(params) => <TextField {...params} label={title} />}\n      value={value}\n      onInputChange={selectValue}\n      onChange={selectValue}\n      className={className}\n      style={style}\n    />\n  );\n}\n","export function TitlePage(props: { title: string }) {\n  return <h3 className=\"title-page\">{props.title}</h3>;\n}\n","import '../css/main.css';\n\ntype InputProps = {\n  id: string;\n  title: string;\n  button?: string;\n  click?: any;\n  data_target?: string;\n  body: any;\n  className?: string;\n};\n\nexport function TopModal(props: InputProps) {\n  const { id, title, button, click, data_target, body, className } = props;\n\n  return (\n    <div\n      className=\"modal fade\"\n      id={id}\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n      data-toggle=\"modal\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              {title}\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Fechar\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body mb-2 mt-2\">{body}</div>\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            {button && (\n              <button\n                type=\"button\"\n                onClick={click}\n                data-target={data_target}\n                className={className}\n                data-dismiss=\"modal\"\n              >\n                {button}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","export const HTTP_RESPONSE = {\n  SUCCESS: [200, 201],\n  BAD_REQUEST: 400,\n  NOT_FOUND: 404,\n  UNAUTHORIZED: 403,\n  CONFLICT: 409,\n  ERROR: 500,\n};\n\nexport const TIMEOUT = {\n  FIVE_SECCONDS: 5000,\n};\n","import { randomId } from '../../utils/random';\n\ntype InputProps = {\n  text: string;\n  onClick: any;\n};\n\nexport function SearchFilterButton(props: InputProps) {\n  return (\n    <div\n      className=\"mt-2 mr-2 mb-2\"\n      style={{\n        display: 'inline-block',\n      }}\n    >\n      <button\n        className=\"btn btn-outline-dark\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          borderRadius: '15px',\n        }}\n        onClick={props.onClick}\n        key={randomId()}\n      >\n        <div className=\"mr-3 font-weight-bold\">{props.text}</div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"16\"\n          height=\"16\"\n          fill=\"dark\"\n          className=\"bi bi-search\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n        </svg>\n      </button>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n};\n\nexport function ClearSearchFilterButton(props: InputProps) {\n  return (\n    <div\n      className=\"mt-2 mr-2 mb-2\"\n      style={{\n        display: 'inline-block',\n      }}\n    >\n      <button\n        className=\"btn btn-outline-warning font-weight-bold\"\n        style={{\n          borderRadius: '15px',\n          border: '2px solid',\n        }}\n        onClick={props.onClick}\n      >\n        Limpar fitros\n      </button>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n  style?: React.CSSProperties;\n};\n\nexport function SearchButton(props: InputProps) {\n  return (\n    <button\n      className=\"btn btn-primary ml-2 pl-3 pr-3\"\n      onClick={props.onClick}\n      style={props.style}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-search\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\n      </svg>\n    </button>\n  );\n}\n","import '../css/main.css';\n\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CardClients } from '../components/CardClient';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ComboBox } from '../components/ComboBox';\nimport { TitlePage } from '../components/TitlePage';\nimport { TopModal } from '../components/TopModal';\n\nimport {\n  useDeleteClientMutation,\n  useGetClientsQuery,\n  useGetSegmentsQuery,\n} from '../api/ApiSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\nimport { ISegment } from '../api/types/Segment';\nimport { IClient } from '../api/types/Client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Clients() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  const {\n    data: clients = [],\n    isLoading,\n    isSuccess,\n    error: errorFetchClients = {} as any,\n  } = useGetClientsQuery('');\n\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const [deleteClient, { isLoading: isLoadingDelete }] =\n    useDeleteClientMutation();\n\n  const [id, setId] = useState<string | null>(null);\n  const [loaderClients, setLoaderClients] = useState<JSX.Element | null>();\n  const [clientView, setClientView] = useState<IClient[]>([]);\n  const [deletedClientSuccess, setDeletedClientSuccess] =\n    useState<boolean>(false);\n\n  const [filterClientById, setFilterClientById] = useState<string>('');\n  const [filterClientBySegment, setFilterClientBySegment] =\n    useState<string>('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    if (clients.length > 0) setClientView(clients);\n  }, [auth, navigate, clients, dispatch]);\n\n  let loader;\n\n  if (isLoading || isLoadingDelete) {\n    loader = <CircularIndeterminate />;\n  } else if (isSuccess) {\n    loader = null;\n  }\n\n  const onDeleteClient = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await deleteClient(id).unwrap();\n      setDeletedClientSuccess(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const filterClientSelectedById = (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    if (id) {\n      const clientsById = clients.filter((client: IClient) => client.id === id);\n      setClientView(clientsById);\n      return;\n    }\n  };\n\n  const filterClientSelectedBySegment = (\n    event: React.BaseSyntheticEvent,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    if (segment) {\n      const clientsBySegment = clients.filter(\n        (client: IClient) => client.segment === segment,\n      );\n      setClientView(clientsBySegment);\n      return;\n    }\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const inputFilterName = document.querySelector(`\n      #searchByName > div > div > div > div > button\n    `) as HTMLElement;\n\n    if (inputFilterName) inputFilterName.click();\n\n    const inputFilterSegment = document.querySelector(`\n      #searchBySegmento > div > div > div > div > button\n    `) as HTMLElement;\n\n    if (inputFilterSegment) inputFilterSegment.click();\n\n    setClientView(clients);\n  };\n\n  if (deletedClientSuccess) {\n    setTimeout(() => setDeletedClientSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (loaderClients) {\n    setTimeout(() => setLoaderClients(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let snniperClient = null;\n\n  if (errorFetchClients.status === HTTP_RESPONSE.NOT_FOUND) {\n    snniperClient = <AlertInfo title=\"Nenhum cliente foi retornado.\" />;\n  } else if (errorFetchClients.status === HTTP_RESPONSE.ERROR) {\n    snniperClient = (\n      <AlertError title=\"Não foi possível processar a requisição.\" />\n    );\n  }\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb page={[{ link: false, name: 'Clientes' }]} />\n\n      <TitlePage title=\"Clientes\" />\n\n      <div className=\"pb-2 mb-2\">\n        <strong>Quantidade de clientes: </strong>\n        {clientView.length}\n      </div>\n\n      <div\n        className=\"pb-2 mb-4\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterBySegmentElement =\n              document.getElementById('searchBySegmento');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterBySegmentElement?.style.display === 'flex') {\n              filterBySegmentElement.style.display = 'none';\n            } else {\n              if (filterBySegmentElement)\n                filterBySegmentElement.style.display = 'flex';\n            }\n\n            if (filterByNameElement) filterByNameElement.style.display = 'none';\n          }}\n          text=\"Segmento\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterBySegmentElement =\n              document.getElementById('searchBySegmento');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterByNameElement?.style.display === 'flex') {\n              filterByNameElement.style.display = 'none';\n            } else {\n              if (filterByNameElement)\n                filterByNameElement.style.display = 'flex';\n            }\n\n            if (filterBySegmentElement)\n              filterBySegmentElement.style.display = 'none';\n          }}\n          text=\"Nome\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n\n            const filterClientsElement =\n              document.getElementById('searchByName');\n            if (filterClientsElement)\n              filterClientsElement.style.display = 'none';\n            const filerClientElement =\n              document.getElementById('searchBySegmento');\n\n            if (filerClientElement) filerClientElement.style.display = 'none';\n          }}\n        />\n      </div>\n\n      <div\n        className=\"mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"searchByName\"\n      >\n        <ComboBox\n          title=\"Digite o nome...\"\n          options={clients.map((item: IClient) => ({\n            label: item.name,\n            id: item.id,\n          }))}\n          selectValue={(\n            e: React.BaseSyntheticEvent,\n            item: { label: string; id: string },\n          ) => setFilterClientById(item ? item.id : '')}\n          style={{\n            width: '300px',\n          }}\n        />\n        <SearchButton\n          onClick={(e: React.BaseSyntheticEvent) =>\n            filterClientSelectedById(e, filterClientById)\n          }\n        />\n      </div>\n      <div\n        className=\"mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"searchBySegmento\"\n      >\n        <ComboBox\n          title=\"Digite o segmento...\"\n          options={segments.map((item: ISegment) => ({\n            label: item.segment,\n            id: item.id,\n          }))}\n          selectValue={(\n            e: React.BaseSyntheticEvent,\n            item: { label: string; id: string },\n          ) => setFilterClientBySegment(item ? item.label : '')}\n          style={{\n            width: '300px',\n          }}\n        />\n\n        <SearchButton\n          onClick={(e: React.BaseSyntheticEvent) =>\n            filterClientSelectedBySegment(e, filterClientBySegment)\n          }\n        />\n      </div>\n\n      {loader}\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-client\"\n        title=\"Excluir cliente?\"\n        body=\"Tem certeza que deseja excluir esse cliente?\"\n        click={(e: React.BaseSyntheticEvent) => onDeleteClient(e, id ? id : '')}\n        button=\"Excluir\"\n      />\n\n      <div className=\"mt-2\">{snniperClient}</div>\n\n      {deletedClientSuccess === true ? (\n        <AlertSuccess title=\"Cliente excluído com sucesso.\" />\n      ) : null}\n\n      <CardClients clients={clientView} setId={setId} />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nexport const clientHistoryService = {\n  async createClientHistory(\n    token: string,\n    client: string,\n    description: string,\n    date: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/create`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URI,\n          {\n            client,\n            description,\n            date,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error: any) {\n      return error;\n    }\n  },\n\n  async getHistoryByClient(token: string, client: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/client`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { client },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByDate(token: string, date: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/date`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByPeriod(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/history/period`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { date1, date2 },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getHistoryByAllFilters(\n    token: string,\n    client: string,\n    date1: string,\n    date2?: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/history/all-filters`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client, date1, date2 },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n","type InputProps = {\n  callback: Function;\n  title: any;\n  className?: any;\n};\n\nexport function ClearFields(props: InputProps) {\n  const { callback, title, className } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className={`col mt-2 btn btn-outline-primary mb-2 ${className}`}\n      data-toggle=\"modal\"\n      onClick={(e) => callback(e)}\n    >\n      {title}\n    </button>\n  );\n}\n","import { TextField } from '@mui/material';\n\nexport function InputText(props: any) {\n  const { type, id, label, onChange, className, value, style } = props;\n\n  return (\n    <TextField\n      type={type}\n      id={id}\n      label={label}\n      value={value}\n      variant=\"outlined\"\n      onChange={onChange}\n      sx={{\n        width: '100%',\n        fontFamily: 'Montserrat',\n      }}\n      className={className}\n      style={style}\n    />\n  );\n}\n","import { InputText } from './InputText';\n\ntype InputProps = {\n  idComponent: string;\n  idInput: string;\n  onChange: Function;\n  style?: React.CSSProperties;\n  className?: string;\n};\n\nexport function InputDate(props: InputProps) {\n  return (\n    <div\n      className={`${props.className}`}\n      style={{\n        width: '145px',\n        ...props.style,\n      }}\n      id={props.idComponent}\n    >\n      <InputText\n        type=\"date\"\n        label=\" \"\n        id={props.idInput}\n        onChange={props.onChange}\n      />\n    </div>\n  );\n}\n","export function LabelForm(props: { text: string }) {\n  return <label className=\"mt-2\">{props.text}</label>;\n}\n","import { IClient } from '../api/types/Client';\nimport { ComboBox } from './ComboBox';\nimport { SearchFilterButton } from './buttons/SearchFilter';\nimport { ClearSearchFilterButton } from './buttons/ClearSearchFilter';\nimport { InputDate } from './input/InputDate';\nimport { SearchButton } from './buttons/SearchButton';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  getSalesInPeriodResponse: Function;\n  setDate1: Function;\n  setDate2: Function;\n  filterByClient: IClient[];\n  setDataClient: any;\n  clearFields: any;\n};\n\nfunction clearDate1() {\n  const date1Element = document.getElementById(\n    'date1Period',\n  ) as HTMLInputElement | null;\n  if (date1Element) date1Element.value = '';\n}\n\nfunction clearAllFilters() {\n  const filterByDateElement = document.getElementById('filterByDate');\n  const filterByPeriod = document.getElementById('filterByPeriod');\n  const filterByDateInPeriod = document.getElementById('filterByDateInPeriod');\n  const filterByDateInPeriod2 = document.getElementById(\n    'filterByDateInPeriod2',\n  );\n  const filterByClient = document.getElementById('filterByClient');\n  const inputClientElement = document.querySelector(\n    '#filterByClient > div > div > div > div > div > button',\n  ) as HTMLElement;\n\n  if (inputClientElement) inputClientElement.click();\n  if (filterByClient) filterByClient.style.display = 'none';\n  if (filterByPeriod) filterByPeriod.style.display = 'none';\n  if (filterByDateInPeriod) filterByDateInPeriod.style.display = 'none';\n  if (filterByDateInPeriod2) filterByDateInPeriod2.style.display = 'none';\n  if (filterByDateElement) filterByDateElement.style.display = 'none';\n  clearDate1();\n}\n\nexport function SelectPeriod(props: InputProps) {\n  const {\n    getSalesInPeriodResponse,\n    setDate1,\n    setDate2,\n    filterByClient,\n    setDataClient,\n    clearFields,\n  } = props;\n\n  return (\n    <div className=\"mb-4 rounded\">\n      <div\n        className=\"pb-2\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateElement?.style.display === 'block') {\n              filterByDateElement.style.display = 'none';\n            } else {\n              if (filterByDateElement)\n                filterByDateElement.style.display = 'block';\n            }\n\n            if (filterByPeriod) filterByPeriod.style.display = 'none';\n            if (filterByDateInPeriod)\n              filterByDateInPeriod.style.display = 'none';\n            if (filterByDateInPeriod2)\n              filterByDateInPeriod2.style.display = 'none';\n            if (filterByClient) filterByClient.style.display = 'none';\n          }}\n          text=\"Data\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n\n            if (filterByPeriod?.style.display === 'flex') {\n              filterByPeriod.style.display = 'none';\n            } else {\n              if (filterByPeriod) filterByPeriod.style.display = 'flex';\n              if (filterByDateInPeriod)\n                filterByDateInPeriod.style.display = 'block';\n              if (filterByDateInPeriod2)\n                filterByDateInPeriod2.style.display = 'block';\n            }\n\n            if (filterByClient) filterByClient.style.display = 'none';\n          }}\n          text=\"Período\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearDate1();\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByPeriod = document.getElementById('filterByPeriod');\n            const filterByDateInPeriod = document.getElementById(\n              'filterByDateInPeriod',\n            );\n            const filterByDateInPeriod2 = document.getElementById(\n              'filterByDateInPeriod2',\n            );\n            const filterByClient = document.getElementById('filterByClient');\n\n            if (filterByDateInPeriod)\n              filterByDateInPeriod.style.display = 'none';\n            if (filterByPeriod) filterByPeriod.style.display = 'none';\n            if (filterByDateInPeriod2)\n              filterByDateInPeriod2.style.display = 'none';\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n\n            if (filterByClient?.style.display === 'block') {\n              filterByClient.style.display = 'none';\n            } else {\n              if (filterByClient) filterByClient.style.display = 'block';\n            }\n          }}\n          text=\"Cliente\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFields(e);\n            clearAllFilters();\n          }}\n        />\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByDate\"\n        className=\"shadow-sm p-3\"\n      >\n        <LabelForm text=\"Data\" />\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <InputDate\n            idComponent=\"date1InputDate\"\n            idInput=\"date1\"\n            onChange={(e: React.BaseSyntheticEvent) => setDate1(e.target.value)}\n            className=\"\"\n          />\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getSalesInPeriodResponse(e);\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n          flexDirection: 'column',\n        }}\n        id=\"filterByPeriod\"\n        className=\"shadow-sm p-3\"\n      >\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            width: '360px',\n            alignItems: 'flex-end',\n          }}\n        >\n          <div\n            style={{\n              display: 'block',\n            }}\n          >\n            <LabelForm text=\"Inicial\" />\n            <InputDate\n              idComponent=\"filterByDateInPeriod\"\n              idInput=\"date1Period\"\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate1(e.target.value)\n              }\n            />\n          </div>\n\n          <div\n            style={{\n              display: 'block',\n            }}\n          >\n            <LabelForm text=\"Final\" />\n            <InputDate\n              idComponent=\"filterByDateInPeriod2\"\n              idInput=\"date2\"\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate2(e.target.value)\n              }\n            />\n          </div>\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getSalesInPeriodResponse(e);\n            }}\n            style={{\n              height: '55px',\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"mt-4 mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByClient\"\n      >\n        {filterByClient !== null ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={filterByClient.map((item) => item.name)}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                setDataClient(e, item)\n              }\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getSalesInPeriodResponse(e);\n              }}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                setDataClient(e, item)\n              }\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getSalesInPeriodResponse(e);\n              }}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { IClientHistory } from '../api/types/ClientHistory';\nimport { randomId } from '../utils/random';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\ntype InputProps = {\n  clientHistory: IClientHistory[];\n};\n\nexport function TableHistory(props: InputProps) {\n  const { clientHistory } = props;\n\n  return (\n    <TableContainer component={Paper} className=\"mt-4\">\n      <Table aria-label=\"collapsible table\">\n        <TableHead\n          style={{\n            backgroundColor: '#4083be',\n          }}\n        >\n          <TableRow>\n            <TableCell />\n            <TableCell\n              style={{\n                color: 'white',\n              }}\n            >\n              Cliente\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{\n                color: 'white',\n              }}\n            >\n              Data\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {clientHistory.map((row) => (\n            <Row\n              key={randomId()}\n              row={createData(row.client, row.date, row.description)}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction createData(client: string, date: string, description: string) {\n  return {\n    client,\n    date,\n    description,\n  };\n}\n\nfunction Row(props: { row: ReturnType<typeof createData> }) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n            style={{ outline: 'none' }}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.client}\n        </TableCell>\n        <TableCell align=\"center\">\n          {new Date(row.date).toLocaleDateString('pt-BR', {\n            timeZone: 'UTC',\n          })}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"inherit\" gutterBottom component=\"div\">\n                <strong>Descrição</strong>\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom component=\"div\">\n                {row.description}\n              </Typography>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { clientHistoryService } from '../services/clientHistoryService';\nimport { ReducerStore } from '../app/store';\nimport { useGetClientsQuery } from '../api/ApiSlice';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { SelectPeriod } from '../components/SelectPeriod';\nimport { TableHistory } from '../components/TableHistory';\nimport { TitlePage } from '../components/TitlePage';\nimport { IClientHistory } from '../api/types/ClientHistory';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function ClientHistory() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [date1, setDate1] = useState<string>('');\n  const [date2, setDate2] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [historyNotFound, setHistoryNotFound] = useState<boolean>(false);\n\n  const [clientHistory, setClientHistory] = useState<IClientHistory[]>([]);\n  const [clientSelected, setClientSelected] = useState<string | null>('');\n\n  const [clearSchedule, setClearSchedule] = useState<boolean>(false);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n  const [loaderHistory, setLoaderHistory] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [navigate, dispatch, auth]);\n\n  const getHistoryInPeriodResponse = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if ((!clientSelected && !date1 && !date2) || (!date1 && date2)) {\n      setInvalidParams(true);\n      setClientHistory([]);\n      return;\n    }\n\n    setLoaderHistory(true);\n\n    let request = null;\n\n    if ((clientSelected && date1) || (clientSelected && date1 && date2)) {\n      request = await clientHistoryService.getHistoryByAllFilters(\n        auth.token,\n        clientSelected,\n        date1,\n        date2 as string,\n      );\n    } else if (clientSelected) {\n      request = await clientHistoryService.getHistoryByClient(\n        auth.token,\n        clientSelected,\n      );\n    } else if (date1 && !date2) {\n      request = await clientHistoryService.getHistoryByDate(auth.token, date1);\n    } else if (date1 && date2) {\n      request = await clientHistoryService.getHistoryByPeriod(\n        auth.token,\n        date1,\n        date2,\n      );\n    }\n\n    setLoaderHistory(false);\n\n    if (!request) return;\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setHistoryNotFound(true);\n      setClientHistory([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    setClientHistory(request.data);\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientHistory([]);\n    setClientSelected('');\n    setDate1('');\n    setDate2('');\n    setClearSchedule(true);\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientSelected('');\n    clearDates();\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card.mb-4.p-3.shadow.bg-white.rounded > form > div.mb-4 > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const clearDates = () => {\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    const date2Element = document.getElementById(\n      'date2',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n    if (date2Element) date2Element.value = '';\n    setDate1('');\n    setDate2('');\n  };\n\n  if (historyNotFound) {\n    setTimeout(() => setHistoryNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearSchedule) {\n    setTimeout(() => setClearSchedule(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let loader = null;\n  if (isLoadingGetClients || loaderHistory) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb page={[{ link: false, name: 'Histórico' }]} />\n      <TitlePage title=\"Histórico\" />\n\n      <SelectPeriod\n        getSalesInPeriodResponse={getHistoryInPeriodResponse}\n        setDate1={setDate1}\n        setDate2={setDate2}\n        filterByClient={clients}\n        setDataClient={(e: React.BaseSyntheticEvent, item: string) =>\n          setClientSelected(item)\n        }\n        clearFields={(e: React.BaseSyntheticEvent) => clearFilters(e)}\n      />\n\n      {historyNotFound === true ? (\n        <AlertInfo title=\"Nenhum histórico encontrado.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Não foi possível processar a requisição.\" />\n      ) : null}\n      {clearSchedule === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {invalidParams === true && (\n        <AlertError title=\"Preencha os campos corretamente.\" />\n      )}\n\n      {clientHistory.length > 0 ? (\n        <div>\n          <div className=\"d-inline\">\n            {(date1 || date2) && (\n              <div className=\"d-inline\">\n                <strong>Período: </strong>\n                {date1 &&\n                  new Date(date1).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                {date2 &&\n                  ' - ' +\n                    new Date(date2).toLocaleDateString('pt-BR', {\n                      timeZone: 'UTC',\n                    })}\n              </div>\n            )}\n\n            {clientSelected && (\n              <div className=\"d-inline\">\n                <strong>Cliente: </strong>\n                <div className=\"d-inline\">{clientSelected}</div>\n              </div>\n            )}\n          </div>\n\n          <ClearFields title=\"Limpar Pesquisa\" callback={clearFields} />\n\n          <TableHistory clientHistory={clientHistory} />\n\n          <div className=\"inline mt-4\">\n            <p>\n              <strong>Quantidade de atendimentos:</strong>{' '}\n              {clientHistory.length > 0 ? clientHistory.length : null}\n            </p>\n          </div>\n        </div>\n      ) : (\n        <h4>Faça uma busca</h4>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { clientHistoryService } from '../services/clientHistoryService';\nimport { ReducerStore } from '../app/store';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { IClient } from '../api/types/Client';\nimport { ComboBox } from '../components/ComboBox';\nimport { InputText } from '../components/input/InputText';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nexport function CreateHistory() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [client, setClient] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n\n  const [historyResgisterSuccess, setHistoryRegisterSuccess] =\n    useState<boolean>(false);\n  const [historyRegisterFail, setHistoryRegisterFail] =\n    useState<boolean>(false);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const formFieldsIsValids = (): boolean => {\n    if (!client.trim() || client.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente\" />);\n      return false;\n    } else if (!description || description.length > 100) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente\" />);\n      return false;\n    } else if (!date || date.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha a data corretamente\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const saveSale = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const request = await clientHistoryService.createClientHistory(\n      auth.token,\n      client.trim(),\n      description,\n      date,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setClient('');\n      setDescription('');\n      setDate('');\n      setHistoryRegisterSuccess(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.BAD_REQUEST) {\n      setInvalidParams(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setDescription('');\n    setDate('');\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > form > div > div:nth-child(1) > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (historyResgisterSuccess === true || historyResgisterSuccess === false) {\n    setTimeout(() => setHistoryRegisterSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (historyRegisterFail) {\n    setTimeout(() => setHistoryRegisterFail(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb\n        page={[\n          { link: '/history', name: 'Atendimentos' },\n          { link: false, name: 'Criar Novo' },\n        ]}\n      />\n      <TitlePage title=\"Criar Novo\" />\n\n      <form onSubmit={saveSale} className=\"form-sale\">\n        <div className=\"card p-3\">\n          <div className=\"form-group\">\n            <LabelForm text=\"Cliente *\" />\n            <div>\n              {clients ? (\n                <ComboBox\n                  title=\"Selecionar Cliente\"\n                  options={clients.map((item: IClient) => item.name)}\n                  selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                    setClient(item)\n                  }\n                />\n              ) : (\n                <ComboBox\n                  title=\"Selecionar Cliente\"\n                  options={[]}\n                  selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                    setClient(item)\n                  }\n                />\n              )}\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <LabelForm text=\"Descrição *\" />\n\n            <InputText\n              type=\"text\"\n              value={description}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDescription(e.target.value)\n              }\n              id=\"name\"\n              label=\"Digite a descrição\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <LabelForm text=\"Data *\" />\n\n            <InputText\n              type=\"date\"\n              id=\"date\"\n              label=\" \"\n              value={date}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setDate(e.target.value)\n              }\n            />\n          </div>\n          <div className=\"form-row mt-3\">\n            <div className=\"form-group col\">\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary btn-entrar p-2\"\n                onClick={(e: React.BaseSyntheticEvent) => clearFields(e)}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button type=\"submit\" className=\"btn btn-primary btn-entrar p-2\">\n                Registrar\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            {historyResgisterSuccess === true && (\n              <AlertSuccess title=\"Atendimento registrado com sucesso.\" />\n            )}\n            {historyRegisterFail === true && (\n              <AlertError title=\"Erro ao registrar o atendimento.\" />\n            )}\n            {serverError === true && (\n              <AlertError title=\"Não foi possível processar a requisição.\" />\n            )}\n            {invalidParams === true && (\n              <AlertError title=\"Preencha os campos corretamente.\" />\n            )}\n            {alert}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import InputMask from 'react-input-mask';\nimport { AlertInfo } from './alerts/AlertInfo';\nimport { AlertSuccess } from './alerts/AlertSuccess';\nimport { ComboBox } from './ComboBox';\nimport { InputText } from './input/InputText';\nimport { IClient } from '../api/types/Client';\nimport { LabelForm } from './labels/LabelForm';\n\nexport function ScheduleForm(props: any) {\n  const {\n    clientSaves,\n    setDataClient,\n    client,\n    procedure,\n    setProcedure,\n    dateNewSchedule,\n    setDateNewSchedule,\n    time,\n    setTime,\n    contact,\n    setContact,\n    clearStates,\n    edit,\n    addNewClientSchedule,\n    errorClientSchedule,\n    setPacoteFunc,\n    pacote,\n    setQtdTotalAtendimentoFuncion,\n    qtdTotalAtendimento,\n    alert,\n  } = props;\n\n  return (\n    <div>\n      <div className=\"modal-body\">\n        <form>\n          {edit && (\n            <h5 className=\"modal-title border-bottom mb-4 pb-2\">Editar</h5>\n          )}\n          <LabelForm text=\"Cliente *\" />\n\n          <div className=\"mb-3\">\n            {edit ? (\n              <ComboBox\n                title=\"Selecione o cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setDataClient(item);\n                    return;\n                  }\n                  setDataClient(item);\n                }}\n                value={client}\n              />\n            ) : (\n              <div>\n                {clientSaves && clientSaves.length > 0 ? (\n                  <ComboBox\n                    title=\"Selecione o cliente\"\n                    options={clientSaves.map((item: IClient) => ({\n                      label: item.name,\n                      phone: item.phone,\n                    }))}\n                    selectValue={(\n                      e: React.BaseSyntheticEvent,\n                      item: string,\n                    ) => {\n                      if (!item) {\n                        setDataClient(e, item);\n                        return;\n                      }\n                      setDataClient(e, item);\n                    }}\n                  />\n                ) : (\n                  <ComboBox\n                    title=\"Selecione o cliente\"\n                    options={[]}\n                    selectValue={(\n                      e: React.BaseSyntheticEvent,\n                      item: string,\n                    ) => {\n                      if (!item) {\n                        setDataClient(e, item);\n                        return;\n                      }\n                      setDataClient(e, item);\n                    }}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n\n          <LabelForm text=\"Descrição *\" />\n\n          <InputText\n            type=\"text\"\n            id=\"procedure\"\n            value={procedure}\n            onChange={(e: React.BaseSyntheticEvent) =>\n              setProcedure(e.target.value)\n            }\n            label=\"Digite a descrição\"\n          />\n\n          <div className=\"form-row mt-2 pt-2\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Pacote\" />\n\n              <div className=\"card\">\n                <button\n                  className=\"btn bg-white text-left\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"form-row\">\n                    <div className=\"col p-1\">\n                      {pacote === true && 'Sim'}\n                      {pacote === false && 'Não'}\n                      {pacote === null || pacote === '' ? 'Escolha...' : null}\n                    </div>\n                    <div className=\"dropdown-toggle col-end\" />\n                  </div>\n                </button>\n                <div\n                  className=\"dropdown-menu col\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                  id=\"select-clients\"\n                >\n                  <div className=\"dropdown-item\">\n                    <button\n                      type=\"button\"\n                      onClick={(e) => setPacoteFunc(e, true)}\n                      className=\"card p-2 mb-2 border-0 col\"\n                    >\n                      Sim\n                    </button>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <button\n                      type=\"button\"\n                      onClick={(e) => setPacoteFunc(e, false)}\n                      className=\"card p-2 mb-2 border-0 col\"\n                    >\n                      Não\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"form-group col\">\n              <LabelForm text=\"Nº de Atendimentos\" />\n\n              <div className=\"card\">\n                <button\n                  className=\"btn bg-white text-left\"\n                  type=\"button\"\n                  id=\"dropdownMenuButton\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  <div className=\"form-row p-1\">\n                    <div className=\"col\">\n                      {qtdTotalAtendimento ? qtdTotalAtendimento : 'Escolha...'}\n                    </div>\n                    <div className=\"dropdown-toggle col-end\" />\n                  </div>\n                </button>\n                <div\n                  className=\"dropdown-menu col\"\n                  aria-labelledby=\"dropdownMenuButton\"\n                  id=\"select-clients\"\n                >\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 1)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        1\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 2)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        2\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 3)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        3\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 4)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        4\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"dropdown-item\">\n                    <div className=\"dropdown-item\">\n                      <button\n                        type=\"button\"\n                        onClick={(e) => setQtdTotalAtendimentoFuncion(e, 5)}\n                        className=\"card p-2 border-0 col\"\n                      >\n                        5\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Data *\" />\n\n              <InputText\n                type=\"date\"\n                label=\" \"\n                id=\"date\"\n                value={dateNewSchedule}\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setDateNewSchedule(e.target.value)\n                }\n              />\n              <small className=\"form-text text-muted\">Selecione a data.</small>\n            </div>\n            <div className=\"form-group col\">\n              <LabelForm text=\"Horário *\" />\n\n              <InputText\n                type=\"time\"\n                label=\" \"\n                id=\"time\"\n                value={time}\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setTime(e.target.value)\n                }\n              />\n              <small className=\"form-text text-muted\">Selecione horário.</small>\n            </div>\n          </div>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Telefone\" />\n\n              <InputMask\n                type=\"text\"\n                form=\"currency\"\n                className=\"p-3 form-control\"\n                value={contact}\n                id=\"contact\"\n                mask=\"(99) 9 9999-9999\"\n                onChange={(e) => setContact(e.target.value)}\n                placeholder=\"(__) _ ____ - ____\"\n              />\n              <small className=\"form-text text-muted mb-3\">\n                Telefone de contato do whatsapp.\n              </small>\n            </div>\n          </div>\n        </form>\n        <div className=\"form-row\">\n          <div className=\"form-group col\">\n            <button\n              type=\"button\"\n              onClick={clearStates}\n              className=\"btn btn-outline-secondary col\"\n              data-dismiss=\"modal\"\n            >\n              Limpar campos\n            </button>\n          </div>\n          <div className=\"form-froup col\">\n            <button\n              type=\"button\"\n              onClick={addNewClientSchedule}\n              className=\"btn btn-primary col\"\n            >\n              Adicionar\n            </button>\n          </div>\n        </div>\n\n        {alert}\n\n        {errorClientSchedule === true ? (\n          <AlertInfo title=\"Preencha os campos corretmente.\" />\n        ) : null}\n\n        {errorClientSchedule === false ? (\n          <AlertSuccess title=\"Horário adicionado com sucesso.\" />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n","import { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ScheduleForm } from '../components/ScheduleForm';\n\nimport { useAddNewScheduleMutation, useGetClientsQuery } from '../api/ApiSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\nimport { TitlePage } from '../components/TitlePage';\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function CreateSchedule() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [addNewSchedule, { isLoading: isLoadingNewSchedule }] =\n    useAddNewScheduleMutation();\n\n  const [client, setClient] = useState<string>('');\n  const [pacote, setPacote] = useState<boolean>(false);\n  const [qtdTotalAtendimento, setQtdTotalAtendimento] = useState<number | null>(\n    null,\n  );\n  const [procedure, setProcedure] = useState<string>('');\n  const [dateNewSchedule, setDateNewSchedule] = useState<string>('');\n  const [time, setTime] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [contact, setContact] = useState<string>('');\n\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const setDataClient = (params: { label: string; phone: string } | string) => {\n    if (!params) {\n      setClient('');\n      setContact('');\n      return;\n    }\n\n    if (typeof params === 'string') {\n      setClient(params);\n    }\n\n    if (typeof params !== 'string' && params.label && params.phone) {\n      setClient(params.label);\n      setContact(params.phone);\n      return;\n    }\n  };\n\n  const clearStates = () => {\n    setClient('');\n    setProcedure('');\n    setDateNewSchedule('');\n    setTime('');\n    setPrice('');\n    setContact('');\n    setPacote(false);\n    setQtdTotalAtendimento(null);\n    const buttonSelector = document.querySelector(\n      '#root > div.mains > div > div.card > div > div > form > div.mb-3 > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const formFieldsIsValids = (): boolean => {\n    if (!client.trim() || client.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente.\" />);\n      return false;\n    } else if (!procedure || procedure.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente.\" />);\n      return false;\n    } else if (!dateNewSchedule || dateNewSchedule.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n      return false;\n    } else if (!time || time.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha o horário corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const addNewClientSchedule = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    try {\n      await addNewSchedule({\n        client: client,\n        procedure: procedure,\n        date: dateNewSchedule,\n        time: time,\n        price: price,\n        contact: contact,\n        pacote: pacote,\n        qtdTotalAtendimento: qtdTotalAtendimento,\n      }).unwrap();\n      clearStates();\n      setAlert(<AlertSuccess title=\"Horário adicionado com sucesso.\" />);\n    } catch (err) {\n      if (err.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse horário já existe.\" />);\n        return;\n      }\n      if (err.status === HTTP_RESPONSE.BAD_REQUEST) {\n        setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  let content = null;\n  if (isLoadingGetClients || isLoadingNewSchedule) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb\n        page={[\n          { link: '/schedule', name: 'Agenda' },\n          { link: false, name: 'Nova Agenda' },\n        ]}\n      />\n      <TitlePage title=\"Nova Agenda\" />\n\n      <div className=\"card\">\n        <ScheduleForm\n          clientSaves={clients}\n          setDataClient={(e: React.BaseSyntheticEvent, item: any) =>\n            setDataClient(item)\n          }\n          client={client}\n          setClient={setClient}\n          procedure={procedure}\n          setProcedure={setProcedure}\n          dateNewSchedule={dateNewSchedule}\n          setDateNewSchedule={setDateNewSchedule}\n          time={time}\n          setTime={setTime}\n          contact={contact}\n          setContact={setContact}\n          clearStates={(e: React.BaseSyntheticEvent) => clearStates()}\n          edit={false}\n          addNewClientSchedule={(e: React.BaseSyntheticEvent) =>\n            addNewClientSchedule(e)\n          }\n          setPacoteFunc={(e: React.BaseSyntheticEvent, pacote: boolean) =>\n            setPacote(pacote)\n          }\n          pacote={pacote}\n          setQtdTotalAtendimentoFuncion={(\n            e: React.BaseSyntheticEvent,\n            qtd: number,\n          ) => setQtdTotalAtendimento(qtd)}\n          qtdTotalAtendimento={qtdTotalAtendimento}\n          alert={alert}\n        />\n      </div>\n    </div>\n  );\n}\n","import { ComboBox } from './ComboBox';\nimport { InputText } from './input/InputText';\nimport InputMask from 'react-input-mask';\nimport { useGetSegmentsQuery } from '../api/ApiSlice';\nimport { ISegment } from '../api/types/Segment';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  edit?: boolean;\n  clearStates: any;\n  name: string;\n  setName: any;\n  email: string;\n  setEmail: any;\n  phone: string;\n  setPhone: any;\n  setSegmentSelect: any;\n  segmentSelect: string;\n  onChangeClient: any;\n  alert: JSX.Element | null;\n};\n\nexport function FormClients(props: InputProps) {\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const {\n    edit,\n    clearStates,\n    name,\n    setName,\n    email,\n    setEmail,\n    phone,\n    setPhone,\n    setSegmentSelect,\n    segmentSelect,\n    onChangeClient,\n    alert,\n  } = props;\n\n  return (\n    <div className=\"modal-content\">\n      <div className=\"modal-header\">\n        {edit ? (\n          <h5 className=\"modal-title\">Editar</h5>\n        ) : (\n          <h5 className=\"modal-title\">Criar</h5>\n        )}\n      </div>\n      <div className=\"modal-body\">\n        <form>\n          <LabelForm text=\"Nome *\" />\n\n          <InputText\n            type=\"text\"\n            className=\"mb-3\"\n            id=\"client\"\n            value={name}\n            onChange={(e: React.BaseSyntheticEvent) => setName(e.target.value)}\n            label=\"Digite o nome do cliente\"\n          />\n          <LabelForm text=\"E-mail\" />\n\n          <InputText\n            type=\"text\"\n            className=\"mb-2\"\n            id=\"procedure\"\n            value={email}\n            onChange={(e: React.BaseSyntheticEvent) => setEmail(e.target.value)}\n            label=\"Digite o email\"\n          />\n          <LabelForm text=\"Telefone *\" />\n\n          <InputMask\n            type=\"text\"\n            form=\"currency\"\n            className=\"form-control mb-2 p-3\"\n            value={phone}\n            id=\"contact\"\n            mask=\"(99) 9 9999-9999\"\n            onChange={(e) => setPhone(e.target.value)}\n            placeholder=\"(__) _ ____ - ____\"\n            required={true}\n          />\n          {segments && segments.length > 0 && (\n            <div>\n              <LabelForm text=\"Segmento\" />\n              <ComboBox\n                title=\"Selecionar Segmento\"\n                options={segments.map((item: ISegment) => item.segment)}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  setSegmentSelect(item)\n                }\n              />\n            </div>\n          )}\n\n          {segmentSelect && (\n            <div className=\"text-primary font-weight-bold ml-1 mt-3 mb-2\">\n              Selecionado:{' '}\n              <small className=\"text-muted h6 mb-3\">\n                {segmentSelect || 'Nenhum'}\n              </small>\n            </div>\n          )}\n          <div className=\"form-row mt-4\">\n            <div className=\"form-group col\">\n              <button\n                type=\"reset\"\n                onClick={clearStates}\n                className=\"btn btn-outline-secondary col\"\n                data-dismiss=\"modal\"\n                key={3}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button\n                type=\"button\"\n                onClick={onChangeClient}\n                className=\"btn btn-primary col\"\n                key={5}\n              >\n                Salvar\n              </button>\n            </div>\n          </div>\n          {alert}\n        </form>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { FormClients } from '../components/FormClients';\nimport { TitlePage } from '../components/TitlePage';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { useAddNewClientMutation } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function CreateClient() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const [addNewClient, { isLoading }] = useAddNewClientMutation();\n\n  const [name, setName] = useState<string>('');\n  const [email, setEmail] = useState<string>('');\n  const [phone, setPhone] = useState<string>('');\n  const [segmentSelect, setSegmentSelect] = useState<string>('');\n\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, navigate, dispatch]);\n\n  const clearStates = () => {\n    setName('');\n    setEmail('');\n    setPhone('');\n    setSegmentSelect('');\n    const buttonSelector = document.querySelector(\n      '#root > div.container-main > div:nth-child(3) > div > div.modal-body > form > div:nth-child(7) > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const formFieldsIsValids = (): boolean => {\n    if (!name.trim() || name.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o nome corretamente.\" />);\n      return false;\n    } else if (!phone || phone.length > 20) {\n      setAlert(<AlertInfo title=\"Preencha o telefone corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const onSaveClient = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const segmentSelected = segmentSelect ? segmentSelect : null;\n\n    try {\n      await addNewClient({\n        name: name.trim(),\n        email: email.trim(),\n        phone: phone,\n        segment: segmentSelected,\n      }).unwrap();\n      clearStates();\n      setAlert(<AlertSuccess title=\"Cliente adicionado com sucesso.\" />);\n    } catch (err) {\n      if (err.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse cliente já existe.\" />);\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  let loader = null;\n  if (isLoading) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb\n        page={[\n          { link: '/client', name: 'Clientes' },\n          { link: false, name: 'Novo Clientes' },\n        ]}\n      />\n\n      <TitlePage title=\"Novo Cliente\" />\n\n      <div>\n        <FormClients\n          clearStates={clearStates}\n          name={name}\n          setName={setName}\n          email={email}\n          setEmail={setEmail}\n          phone={phone}\n          setPhone={setPhone}\n          setSegmentSelect={setSegmentSelect}\n          segmentSelect={segmentSelect ?? ''}\n          onChangeClient={onSaveClient}\n          alert={alert as JSX.Element}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useNavigate } from 'react-router-dom';\n\nexport function ComeBack() {\n  const navigate = useNavigate();\n\n  return (\n    <button\n      className=\"btn btn-outline-primary p-2 mb-4 d-flex flex-row align-items-center\"\n      onClick={() => navigate(-1)}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"16\"\n        height=\"16\"\n        fill=\"currentColor\"\n        className=\"bi bi-arrow-left-circle mr-2\"\n        viewBox=\"0 0 16 16\"\n      >\n        <path d=\"M1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8zm15 0A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.5-.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\n      </svg>\n      Voltar\n    </button>\n  );\n}\n","import { CircularIndeterminate } from '../components/LoaderCircular';\nimport { FormClients } from '../components/FormClients';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { ComeBack } from '../components/ComeBack';\n\nimport { useGetClientsQuery, useUpdateClientMutation } from '../api/ApiSlice';\nimport { IClient } from '../api/types/Client';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { TIMEOUT } from '../utils/constants';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { ReducerStore } from '../app/store';\n\nexport function EditClient() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const { clientId } = useParams();\n\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const editClient = clients.find((client: IClient) => client.id === clientId);\n\n  const [\n    updateClient,\n    { isLoading: isLoadingUpdate, isSuccess: isSuccessUpdate },\n  ] = useUpdateClientMutation();\n\n  if (!editClient) {\n    navigate(-1);\n  }\n\n  const [name, setName] = useState<string>(editClient ? editClient.name : '');\n  const [email, setEmail] = useState<string>(\n    editClient ? editClient.email : '',\n  );\n  const [phone, setPhone] = useState<string>(\n    editClient ? editClient.phone : '',\n  );\n  const [segmentSelect, setSegmentSelect] = useState<string | null>(\n    editClient ? editClient.segment : null,\n  );\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const clearStates = () => {\n    setName('');\n    setEmail('');\n    setPhone('');\n    setSegmentSelect(null);\n  };\n\n  const onUpdateClient = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const emailField = email ? email.trim() : null;\n\n    try {\n      await updateClient({\n        id: editClient.id,\n        name: name.trim(),\n        email: emailField,\n        phone: phone.trim(),\n        segment: segmentSelect,\n      }).unwrap();\n      clearStates();\n      setTimeout(() => navigate(-1), 1000);\n    } catch (err) {\n      setAlert(<AlertError title=\"Não foi possivel editar o cliente\" />);\n    }\n  };\n\n  let loader;\n  if (isLoadingUpdate || isLoadingGetClients) {\n    loader = <CircularIndeterminate />;\n  } else if (isSuccessUpdate) {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <section className=\"container-main\">\n      {loader}\n\n      <ComeBack />\n\n      <FormClients\n        edit={true}\n        clearStates={clearStates}\n        name={name}\n        setName={setName}\n        email={email}\n        setEmail={setEmail}\n        phone={phone}\n        setPhone={setPhone}\n        setSegmentSelect={setSegmentSelect}\n        segmentSelect={segmentSelect as string}\n        onChangeClient={onUpdateClient}\n        alert={alert}\n      />\n    </section>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst scheduleService = {\n  async getClientsSchedule(token: string, date: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/date`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { date: date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async addClientSchedule(\n    token: string,\n    client: string,\n    procedure: string,\n    date: string,\n    time: string,\n    contact: string,\n    pacote: boolean,\n    qtdTotalAtendimento: number,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/new`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            client: client,\n            procedure: procedure,\n            date: date,\n            time: time,\n            contact: contact,\n            pacote: pacote || null,\n            qtdTotalAtendimento: qtdTotalAtendimento,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async updateClientSchedule(\n    token: string,\n    id: string,\n    client: string,\n    procedure: string,\n    date: string,\n    time: string,\n    contact: string,\n    pacote: boolean,\n    qtdTotalAtendimento: number,\n    qtdAtendimento: number,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/update`;\n    try {\n      const { data, status } = await axios\n        .put(\n          URL,\n          {\n            id: id,\n            client: client,\n            procedure: procedure,\n            date: date,\n            time: time,\n            contact: contact,\n            pacote: pacote,\n            qtdTotalAtendimento: qtdTotalAtendimento,\n            qtdAtendimento,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async deleteClientSchedule(token: string, id: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule`;\n    try {\n      const { data, status } = await axios\n        .delete(URL, {\n          params: { id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async finishClientSchedule(token: string, id: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/finish`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            id: id,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getAllExpiredSchedules(token: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/expireds`;\n\n    try {\n      const { data, status } = await axios\n        .get(URL, { headers: { authorization: token } })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getScheduleByClient(token: string, client: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/schedule/client`;\n\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { client },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { scheduleService };\n","import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { scheduleService } from '../services/scheduleService';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { ComeBack } from '../components/ComeBack';\nimport { ScheduleForm } from '../components/ScheduleForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function EditScheduleForm() {\n  let navigate = useNavigate();\n  const { scheduleId } = useParams();\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const schedule = useSelector((state: ReducerStore) => state.schedule);\n\n  const [pacote, setPacote] = useState<boolean>(schedule.pacote);\n  const [client, setClient] = useState<string>(schedule.client);\n  const [qtdTotalAtendimento, setQtdTotalAtendimento] = useState<number | null>(\n    schedule.qtdTotalAtendimento,\n  );\n  const [procedure, setProcedure] = useState<string>(schedule.procedure);\n  const [dateNewSchedule, setDateNewSchedule] = useState<string>(schedule.date);\n  const [time, setTime] = useState<string>(schedule.time);\n  const [contact, setContact] = useState<string>(schedule.phone);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    if (!schedule.id) {\n      navigate(-1);\n    }\n  }, [auth, navigate, schedule.id, dispatch]);\n\n  const clearStates = () => {\n    setClient('');\n    setProcedure('');\n    setDateNewSchedule('');\n    setTime('');\n    setContact('');\n    setPacote(false);\n    setQtdTotalAtendimento(null);\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card > div > div > form > div.mb-3 > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  const onChangeSchedule = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const request = await scheduleService.updateClientSchedule(\n      auth.token,\n      scheduleId as string,\n      client,\n      procedure,\n      dateNewSchedule,\n      time,\n      contact,\n      pacote as boolean,\n      qtdTotalAtendimento as number,\n      schedule.qtdAtendimento,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setAlert(<AlertSuccess title=\"Horário atualizado com sucesso.\" />);\n      setTimeout(() => navigate(-1), 1000);\n    }\n\n    if (\n      request.status === HTTP_RESPONSE.BAD_REQUEST ||\n      request.status === HTTP_RESPONSE.ERROR ||\n      !request.status\n    ) {\n      setAlert(<AlertError title=\"Erro ao atualizar o horário\" />);\n    }\n  };\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      <ComeBack />\n\n      <div className=\"card\">\n        <ScheduleForm\n          setDataClient={(client: string) => setClient(client)}\n          client={client}\n          setClient={setClient}\n          procedure={procedure}\n          setProcedure={setProcedure}\n          dateNewSchedule={dateNewSchedule}\n          setDateNewSchedule={setDateNewSchedule}\n          time={time}\n          setTime={setTime}\n          contact={contact}\n          setContact={setContact}\n          clearStates={(e: React.BaseSyntheticEvent) => clearStates()}\n          edit={true}\n          addNewClientSchedule={(e: React.BaseSyntheticEvent) =>\n            onChangeSchedule(e)\n          }\n          setPacoteFunc={(e: React.BaseSyntheticEvent, pacote: boolean) =>\n            setPacote(pacote)\n          }\n          pacote={pacote}\n          setQtdTotalAtendimentoFuncion={(\n            e: React.BaseSyntheticEvent,\n            qtd: number,\n          ) => setQtdTotalAtendimento(qtd)}\n          qtdTotalAtendimento={qtdTotalAtendimento}\n          alert={alert}\n        />\n      </div>\n    </div>\n  );\n}\n","import '../css/main.css';\n\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { WhatsAppService } from '../services/whatsapp-service';\nimport { ReducerStore } from '../app/store';\n\nimport { Breadcumb } from '../components/Breadcumb';\nimport { TitlePage } from '../components/TitlePage';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Home() {\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    const navbar = document.querySelector('#navbarresponsive') as HTMLElement;\n    if (navbar) navbar.style.display = 'flex';\n  }, [auth, navigate, dispatch]);\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb page={[]} />\n\n      <TitlePage title={`Olá, ${auth ? auth.userName : 'Seja Bem Vindo'}!`} />\n      <p>\n        Este é o <strong>ARV - Controll &copy;</strong>, um Sistema de\n        Gerenciamento para sua empresa.\n      </p>\n      <p>\n        O sistema é focado na simplicidade e acessibilidade, podendo ser\n        utilizado pelo computador ou pelo celular, sem perda de desempenho ou\n        produtividade.\n      </p>\n      <div className=\"container mt-5 mb-5\">\n        <h5 className=\"title-page\">Ajuda</h5>\n        <p>\n          Caso precise de ajuda ou queira tirar dúvidas sobre o sistema, entre\n          em contato com o desenvolvedor.\n        </p>\n        <button\n          type=\"button\"\n          onClick={(e) => WhatsAppService.redirectToWhatsapp(e, '35999554534')}\n          className=\"btn btn-success col\"\n        >\n          Entrar em contato\n        </button>\n      </div>\n      <p className=\"mt-5 mb-3 text-muted text-center\">\n        ARV - Controll &copy; 2022\n      </p>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/raise-value.8b5f05a9.png\";","import '../css/main.css';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport logo from '../img/raise-value.png';\n\nimport { authService } from '../services/authService';\nimport { loginAdded } from '../reducers/authenticatedSlice';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\n\nfunction LoginPage() {\n  const [user, setUser] = useState<string>('');\n  const [password, setPassword] = useState({\n    password: '',\n    showPassword: false,\n  });\n  const [credentials, setCredentials] = useState<boolean | null>(null);\n  const [serverError, setServerError] = useState<boolean | null>(null);\n\n  const [loadFetchClient, setLoadFetchClient] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    const navbar = document.querySelector('#navbarresponsive') as HTMLElement;\n    if (navbar) navbar.style.display = 'none';\n  }, []);\n\n  let loader = null;\n  if (loadFetchClient) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  const saveLoginUser = (login: { token: string; refreshToken: string }) => {\n    dispatch(\n      loginAdded({ token: login.token, refreshToken: login.refreshToken }),\n    );\n    navigate('/home', { replace: true });\n    setLoadFetchClient(false);\n  };\n\n  const login = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setLoadFetchClient(true);\n\n    const request = await authService.sendLogin(\n      user.trim(),\n      password.password.trim(),\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      saveLoginUser(request.data);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n\n    if (request.status === HTTP_RESPONSE.UNAUTHORIZED) {\n      setCredentials(false);\n    }\n\n    setLoadFetchClient(false);\n  };\n\n  if (credentials === false) {\n    setTimeout(() => setCredentials(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError === true) {\n    setTimeout(() => setServerError(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  const handlePasswordChange =\n    (prop: any) => (event: React.BaseSyntheticEvent) => {\n      event.preventDefault();\n      setPassword({ ...password, [prop]: event.target.value });\n    };\n\n  return (\n    <div className=\"login_container\">\n      {loader}\n      <div className=\"text-center pt-5\">\n        <img className=\"img-logo\" alt=\"logo_raise_value\" src={logo}></img>\n      </div>\n      <div className=\"form-login\">\n        <div className=\"card-body card-login\">\n          <form onSubmit={login}>\n            <div className=\"text-center\">\n              <h2 className=\"text-center\">Faça seu Login</h2>\n              <p className=\"text-primary font-weight-bold\">\n                Seja Bem-Vindo!\n                <small className=\"form-text text-muted mb-2\">\n                  Faça Login para entrar no sistema.\n                </small>\n              </p>\n            </div>\n            <div className=\"form-group\">\n              <LabelForm text=\"Usuário\" />\n\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">@</div>\n                </div>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={user}\n                  onChange={(e) => setUser(e.target.value)}\n                  id=\"name\"\n                  placeholder=\"Digite o nome do usuário\"\n                  required={true}\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <LabelForm text=\"Senha\" />\n\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <div className=\"input-group-text\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"16\"\n                      height=\"16\"\n                      fill=\"currentColor\"\n                      className=\"bi bi-key\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M0 8a4 4 0 0 1 7.465-2H14a.5.5 0 0 1 .354.146l1.5 1.5a.5.5 0 0 1 0 .708l-1.5 1.5a.5.5 0 0 1-.708 0L13 9.207l-.646.647a.5.5 0 0 1-.708 0L11 9.207l-.646.647a.5.5 0 0 1-.708 0L9 9.207l-.646.647A.5.5 0 0 1 8 10h-.535A4 4 0 0 1 0 8zm4-3a3 3 0 1 0 2.712 4.285A.5.5 0 0 1 7.163 9h.63l.853-.854a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.793-.793-1-1h-6.63a.5.5 0 0 1-.451-.285A3 3 0 0 0 4 5z\" />\n                      <path d=\"M4 8a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\" />\n                    </svg>\n                  </div>\n                </div>\n                <input\n                  type={password.showPassword ? 'text' : 'password'}\n                  className=\"form-control\"\n                  value={password.password}\n                  onChange={handlePasswordChange('password')}\n                  id=\"password\"\n                  placeholder=\"Digite a senha\"\n                  required={true}\n                />\n                <div className=\"input-group-append\">\n                  <IconButton\n                    onClick={(e) =>\n                      setPassword({\n                        ...password,\n                        showPassword: !password.showPassword,\n                      })\n                    }\n                    onMouseDown={(e) => e.preventDefault()}\n                    className=\"input-group-text\"\n                  >\n                    {password.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-entrar mt-4 p-2\"\n            >\n              Entrar\n            </button>\n          </form>\n          <div className=\"credentials\">\n            {credentials === false ? (\n              <AlertError title=\"Usuário ou senha incorretos!\" />\n            ) : null}\n            {serverError === true ? (\n              <AlertError title=\"Erro ao processar sua requisição.\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <p className=\"mt-5 mb-3 text-muted text-center\">\n        ARV - Controll &copy; 2022\n      </p>\n    </div>\n  );\n}\n\nexport { LoginPage };\n","function mask(\n  value: number | string,\n  precision = 2,\n  decimalSeparator = '.',\n  thousandSeparator = ',',\n  allowNegative = false,\n  prefix = '',\n  suffix = '',\n) {\n  // Set value empty\n  if (value === 'NaN') {\n    return {\n      value: '',\n      maskedValue: '',\n    };\n  }\n\n  // provide some default values and arg validation.\n  if (precision < 0) {\n    precision = 0;\n  } // precision cannot be negative\n  if (precision > 20) {\n    precision = 20;\n  } // precision cannot be greater than 20\n\n  if (value === null || value === undefined) {\n    return {\n      value: 0,\n      maskedValue: '',\n    };\n  }\n\n  value = String(value); //if the given value is a Number, let's convert into String to manipulate that\n\n  if (value.length === 0) {\n    return {\n      value: 0,\n      maskedValue: '',\n    };\n  }\n\n  // extract digits. if no digits, fill in a zero.\n  let digits = value.match(/\\d/g) || ['0'];\n\n  let numberIsNegative = false;\n  if (allowNegative) {\n    let negativeSignCount = (value.match(/-/g) || []).length;\n    // number will be negative if we have an odd number of \"-\"\n    // ideally, we should only ever have 0, 1 or 2 (positive number, making a number negative\n    // and making a negative number positive, respectively)\n    numberIsNegative = negativeSignCount % 2 === 1;\n\n    // if every digit in the array is '0', then the number should never be negative\n    let allDigitsAreZero = true;\n    for (let idx = 0; idx < digits.length; idx += 1) {\n      if (digits[idx] !== '0') {\n        allDigitsAreZero = false;\n        break;\n      }\n    }\n    if (allDigitsAreZero) {\n      numberIsNegative = false;\n    }\n  }\n\n  // zero-pad a input\n  while (digits.length <= precision) {\n    digits.unshift('0');\n  }\n\n  if (precision > 0) {\n    // add the decimal separator\n    digits.splice(digits.length - precision, 0, '.');\n  }\n\n  // clean up extraneous digits like leading zeros.\n  digits = Number(digits.join('')).toFixed(precision).split('');\n  let raw = Number(digits.join(''));\n\n  let decimalpos = digits.length - precision - 1; // -1 needed to position the decimal separator before the digits.\n  if (precision > 0) {\n    // set the final decimal separator\n    digits[decimalpos] = decimalSeparator;\n  } else {\n    // when precision is 0, there is no decimal separator.\n    decimalpos = digits.length;\n  }\n\n  // add in any thousand separators\n  for (let x = decimalpos - 3; x > 0; x = x - 3) {\n    digits.splice(x, 0, thousandSeparator);\n  }\n\n  // if we have a prefix or suffix, add them in.\n  if (prefix.length > 0) {\n    digits.unshift(prefix);\n  }\n  if (suffix.length > 0) {\n    digits.push(suffix);\n  }\n\n  // if the number is negative, insert a \"-\" to\n  // the front of the array and negate the raw value\n  if (allowNegative && numberIsNegative) {\n    digits.unshift('-');\n    raw = -raw;\n  }\n\n  return {\n    value: raw,\n    maskedValue: digits.join('').trim(),\n  };\n}\n\nexport { mask };\n","import axios from 'axios';\nimport moment from 'moment';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst salesService = {\n  async getSalesToday(token: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/today`;\n    const date = moment(new Date()).format('YYYY-MM-DD');\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: { date: date },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesInPeriod(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/period`;\n    let date1Valid = date1;\n    if (!date1) {\n      date1Valid = moment(new Date()).format('YYYY-MM-DD');\n    }\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          params: {\n            date1: date1Valid,\n            date2: date2,\n          },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesInPeriodByClients(\n    token: string,\n    date1: string,\n    date2: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/period-clients`;\n    try {\n      const { data } = await axios.post(URL, {\n        id_user: token,\n        date1: date1,\n        date2: date2,\n      });\n      return data;\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async getSalesByClients(token: string, client: string): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/clients`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async newSale(\n    token: string,\n    description: string,\n    client: string,\n    price: string,\n    date: string,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/new`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URL,\n          {\n            description: description,\n            client: client,\n            price: price,\n            date: date,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  countTotalValueSales(sales: { price: string }[]) {\n    return sales\n      .filter((item) => !!item)\n      .map(\n        (item) => parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n      )\n      .reduce((acc, item) => acc + item, 0)\n      .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\n  },\n\n  async getSalesByAllFilters(\n    token: string,\n    client: string,\n    date1: string,\n    date2: string | null,\n  ): Promise<Response> {\n    const URL = `${API_RV_BASE_URI}/api/sales/all-filters`;\n    try {\n      const { data, status } = await axios\n        .get(URL, {\n          headers: { authorization: token },\n          params: { client, date1, date2 },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { salesService };\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { mask } from '../services/maskMoney';\nimport { salesService } from '../services/salesService';\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { IClient } from '../api/types/Client';\nimport { ComboBox } from '../components/ComboBox';\nimport { InputText } from '../components/input/InputText';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { validateToken } from '../reducers/authenticatedSlice';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nexport function NewSale() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [clientName, setClientName] = useState<string>('');\n  const [description, setDescription] = useState<string>('');\n  const [price, setPrice] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [saleRegisterSuccess, setSaleRegisterSuccess] =\n    useState<boolean>(false);\n  const [saleRegisterFail, setSaleRegisterFail] = useState<boolean>(false);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const formFieldsIsValids = (): boolean => {\n    if (!clientName.trim() || clientName.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha o cliente corretamente\" />);\n      return false;\n    } else if (!description || description.length > 100) {\n      setAlert(<AlertInfo title=\"Preencha a descrição corretamente\" />);\n      return false;\n    } else if (!price || price.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha o preço corretamente\" />);\n      return false;\n    } else if (!date || date.length > 10) {\n      setAlert(<AlertInfo title=\"Preencha a data corretamente\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const saveSale = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids()) return;\n\n    const request = await salesService.newSale(\n      auth.token,\n      description,\n      clientName ? clientName.trim() : '',\n      price,\n      date as string,\n    );\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setClientName('');\n      setDescription('');\n      setPrice('');\n      setDate('');\n      setSaleRegisterSuccess(true);\n      clearFields(event);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n    }\n  };\n\n  const clearFields = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setDescription('');\n    setPrice('');\n    setDate('');\n    setClientName('');\n    const selectClientButton = document.querySelector(\n      '#root > div.container-main > form > div > div.form-group.mb-2 > div > div > div > div > button',\n    ) as HTMLElement;\n    if (selectClientButton) selectClientButton.click();\n  };\n\n  if (saleRegisterSuccess) {\n    setTimeout(() => setSaleRegisterSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (saleRegisterFail) {\n    setTimeout(() => setSaleRegisterFail(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let loader;\n  if (isLoadingGetClients) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb\n        page={[\n          { link: '/sales', name: 'Vendas' },\n          { link: false, name: 'Nova Venda' },\n        ]}\n      />\n      <TitlePage title=\"Registrar Nova Venda\" />\n\n      <form onSubmit={saveSale} className=\"form-sale\">\n        <div className=\"card p-3\">\n          <div className=\"form-group mb-2\">\n            <LabelForm text=\"Cliente\" />\n\n            {clients ? (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={clients.map((item: IClient) => item.name)}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setClientName('');\n                    return;\n                  }\n                  setClientName(item);\n                }}\n              />\n            ) : (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                  if (!item) {\n                    setClientName('');\n                    return;\n                  }\n                  setClientName(item);\n                }}\n              />\n            )}\n          </div>\n\n          <LabelForm text=\"Descrição *\" />\n\n          <InputText\n            id=\"name\"\n            label=\"Digite a descrição\"\n            value={description}\n            variant=\"outlined\"\n            onChange={(e: React.BaseSyntheticEvent) =>\n              setDescription(e.target.value)\n            }\n          />\n\n          <div className=\"form-row mt-2\">\n            <div className=\"form-group col\">\n              <LabelForm text=\"Preço *\" />\n\n              <InputText\n                id=\"price\"\n                label=\"Digite o preço\"\n                value={price}\n                variant=\"outlined\"\n                onChange={(ev: React.BaseSyntheticEvent) => {\n                  let val = ev.target.value;\n                  const { maskedValue } = mask(val, 2, ',', '.', false, 'R$');\n                  setPrice(maskedValue);\n                }}\n              />\n            </div>\n\n            <div className=\"form-group col\">\n              <LabelForm text=\"Data *\" />\n\n              <InputText\n                type={'date'}\n                label=\" \"\n                value={date}\n                id=\"date\"\n                variant=\"outlined\"\n                onChange={(e: React.BaseSyntheticEvent) =>\n                  setDate(e.target.value)\n                }\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-secondary btn-entrar mt-4 p-2\"\n                onClick={(e) => clearFields(e)}\n              >\n                Limpar campos\n              </button>\n            </div>\n            <div className=\"form-group col\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-entrar mt-4 p-2\"\n              >\n                Salvar\n              </button>\n            </div>\n          </div>\n          <div className=\"mt-2\">\n            {saleRegisterSuccess === true && (\n              <AlertSuccess title=\"Venda registrada com sucesso.\" />\n            )}\n            {saleRegisterFail === true && (\n              <AlertError title=\"Erro ao registrar a venda.\" />\n            )}\n            {serverError === true && (\n              <AlertError title=\"Não foi possível processar a requisição.\" />\n            )}\n            {alert}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { Response } from './types/ResponseDTO';\n\nconst API_RV_BASE_URI = process.env.REACT_APP_BASE_URL;\n\nconst clientService = {\n  async newClient(\n    token: string,\n    name: string,\n    email: string,\n    phone: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/create`;\n    try {\n      const { data, status } = await axios\n        .post(\n          URI,\n          {\n            name: name,\n            email: email,\n            phone: phone,\n            segment: segment,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async updateClient(\n    token: string,\n    id: string,\n    name: string,\n    email: string,\n    phone: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/update`;\n    try {\n      const { data, status } = await axios\n        .put(\n          URI,\n          {\n            id: id,\n            name: name,\n            email: email,\n            phone: phone,\n            segment: segment,\n          },\n          { headers: { authorization: token } },\n        )\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findClient(token: string, id: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/load`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { id: id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findAllClient(token: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/all`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async findAllClientBySegment(\n    token: string,\n    segment: string,\n  ): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client/segment`;\n    try {\n      const { data, status } = await axios\n        .get(URI, {\n          params: { segment: segment },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n\n  async deleteClient(token: string, id: string): Promise<Response> {\n    const URI = `${API_RV_BASE_URI}/api/client`;\n    try {\n      const { data, status } = await axios\n        .delete(URI, {\n          params: { id: id },\n          headers: { authorization: token },\n        })\n        .then((res) => ({ data: res.data, status: res.status }))\n        .catch((err) => ({\n          data: err.response.data,\n          status: err.response.status,\n        }));\n\n      return { data, status };\n    } catch (error) {\n      return error;\n    }\n  },\n};\n\nexport { clientService };\n","import { randomId } from '../utils/random';\nimport { ISales } from '../api/types/Sales';\n\ntype InputProps = {\n  sales: ISales[];\n  title: string;\n};\n\nexport function CardSales(props: InputProps) {\n  const { sales, title } = props;\n\n  const nameClient = [\n    ...new Set(\n      sales.filter((item) => !!item.client).map((item) => item.client),\n    ),\n  ].map((item) => {\n    return (\n      <div className=\"d-inline-block pr-2\" key={randomId()}>\n        {item},\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"card border-bottom p-2 mb-3\" key={randomId()}>\n      <div className=\"card-header\">\n        <h6 className=\"font-weight-bold pt-2\">{title}</h6>\n      </div>\n      <div className=\"card-body border mt-2\">\n        <h6 className=\"card-subtitle text-primary pt-2 font-weight-bold pb-3 border-bottom\">\n          Ganhos:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .reduce((acc, item) => acc + item, 0)\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Vendas: <small className=\"text-muted h6 mb-3\">{sales.length}</small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Média por venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {Math.round(\n              sales\n                .filter((item) => !!item)\n                .map(\n                  (item) =>\n                    parseInt(item.price.substring(2).replace(/\\.|,/g, '')) /\n                    100,\n                )\n                .reduce((acc, item) => acc + item, 0) / sales.length,\n            ).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Maior venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .sort((a, b) => b - a)[0]\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n          Menor venda:{' '}\n          <small className=\"text-muted h6 mb-3\">\n            {sales\n              .filter((item) => !!item)\n              .map(\n                (item) =>\n                  parseInt(item.price.substring(2).replace(/\\.|,/g, '')) / 100,\n              )\n              .sort((a, b) => a - b)[0]\n              .toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}\n          </small>\n        </h6>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-2 mt-3\">\n          Clientes atendidos:\n        </h6>\n        <small className=\"text-muted h6 mb-3\">{nameClient}</small>\n        <h6 className=\"card-subtitle text-primary font-weight-bold pt-4 pb-2 mt-3 border-top\">\n          Número de clientes atendidos:{' '}\n          <small className=\"text-muted h6 mb-3\">{nameClient.length}</small>\n        </h6>\n      </div>\n    </div>\n  );\n}\n","import { randomId } from '../utils/random';\nimport { ISales } from '../api/types/Sales';\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\n\ntype InputProps = {\n  sales: ISales[];\n};\n\nexport function TableSales(props: InputProps) {\n  const { sales } = props;\n\n  return (\n    <TableContainer component={Paper} className=\"mt-4 mb-4\">\n      <Table aria-label=\"collapsible table\">\n        <TableHead\n          style={{\n            backgroundColor: '#4083be',\n          }}\n        >\n          <TableRow>\n            <TableCell />\n            <TableCell\n              style={{\n                color: 'white',\n              }}\n            >\n              Cliente\n            </TableCell>\n            <TableCell\n              align=\"center\"\n              style={{\n                color: 'white',\n              }}\n            >\n              Data\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {sales.map((row) => (\n            <Row\n              key={randomId()}\n              row={createData(row.client, row.date, row.description, row.price)}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction createData(\n  client: string,\n  date: string,\n  description: string,\n  price: string,\n) {\n  return {\n    client,\n    date,\n    description,\n    info: [\n      {\n        price,\n      },\n    ],\n  };\n}\n\nfunction Row(props: { row: ReturnType<typeof createData> }) {\n  const { row } = props;\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={() => setOpen(!open)}\n            style={{ outline: 'none' }}\n          >\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n          </IconButton>\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {row.client}\n        </TableCell>\n        <TableCell align=\"center\">\n          {new Date(row.date).toLocaleDateString('pt-BR', {\n            timeZone: 'UTC',\n          })}\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            <Box sx={{ margin: 1 }}>\n              <Typography variant=\"inherit\" gutterBottom component=\"div\">\n                <strong>Descrição</strong>\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom component=\"div\">\n                {row.description}\n              </Typography>\n\n              <Table size=\"small\" aria-label=\"purchases\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"right\" variant=\"body\">\n                      <strong\n                        style={{\n                          color: '#4083be',\n                        }}\n                      >\n                        Total\n                      </strong>\n                    </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {row.info.map((info) => (\n                    <TableRow key={randomId()}>\n                      <TableCell component=\"th\" scope=\"row\" align=\"right\">\n                        {info.price}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Box>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n}\n","import { clientService } from '../services/clientService';\nimport { salesService } from '../services/salesService';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { ReducerStore } from '../app/store';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CardSales } from '../components/CardSales';\nimport { ClearFields } from '../components/Buttons';\nimport { ComboBox } from '../components/ComboBox';\nimport { TableSales } from '../components/TableSales';\nimport { TitlePage } from '../components/TitlePage';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { IClient } from '../api/types/Client';\nimport { ISales } from '../api/types/Sales';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Reports() {\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  let navigate = useNavigate();\n\n  const [clientSaves, setClientSaves] = useState<any>([]);\n  const [salesForClient, setSalesForClient] = useState<ISales[]>([]);\n  const [segment, setSegment] = useState('');\n  const [emptySale, setEmptySale] = useState<boolean | null>(null);\n  const [serverError, setServerError] = useState<any>(false);\n  const [salesLastWeek, setSalesLastWeek] = useState([]);\n  const [salesActualtWeek, setSalesActualWeek] = useState([]);\n  const [salesLastMonth, setSalesLastMonth] = useState([]);\n  const [salesActualMonth, setSalesActualMonth] = useState([]);\n  const [clearTableSalesForClient, setClearTableSalesForClient] =\n    useState<any>(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n\n    let isMounted = true;\n\n    Promise.all([getClients(), getSalesWeek(), getSaleMonth()]);\n\n    async function getClients() {\n      const request = await clientService.findAllClient(auth.token);\n\n      if (!request.status) return;\n\n      if (request.status === HTTP_RESPONSE.ERROR) {\n        return;\n      }\n\n      if (isMounted) setClientSaves(request.data);\n    }\n\n    async function getSalesWeek() {\n      const primaryDateLastWeek = moment()\n        .subtract(7, 'day')\n        .day(0)\n        .format('YYYY-MM-DD');\n      const lastDateLastWeek = moment()\n        .subtract(7, 'day')\n        .day(6)\n        .format('YYYY-MM-DD');\n\n      const primaryDateWeek = moment().day(0).format('YYYY-MM-DD');\n      const lastDateWeek = moment().day(6).format('YYYY-MM-DD');\n\n      const getSalesLastWeek = await salesService.getSalesInPeriod(\n        auth.token,\n        primaryDateLastWeek,\n        lastDateLastWeek,\n      );\n      const getSalesActualWeek = await salesService.getSalesInPeriod(\n        auth.token,\n        primaryDateWeek,\n        lastDateWeek,\n      );\n\n      if (!getSalesLastWeek.status || !getSalesActualWeek.status) return;\n\n      if (\n        getSalesLastWeek.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesLastWeek.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesLastWeek([]);\n      }\n\n      if (\n        getSalesActualWeek.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesActualWeek.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesActualWeek([]);\n      }\n\n      if (isMounted) setSalesLastWeek(getSalesLastWeek.data);\n      if (isMounted) setSalesActualWeek(getSalesActualWeek.data);\n    }\n\n    async function getSaleMonth() {\n      const dateStartLastMonth = moment()\n        .subtract(1, 'month')\n        .startOf('month')\n        .format('YYYY-MM-DD');\n      const dateEndLastMonth = moment()\n        .subtract(1, 'month')\n        .endOf('month')\n        .format('YYYY-MM-DD');\n\n      const dateStartActualMonth = moment()\n        .startOf('month')\n        .format('YYYY-MM-DD');\n      const dateEndActualMonth = moment().endOf('month').format('YYYY-MM-DD');\n\n      const getSalesLastMonth = await salesService.getSalesInPeriod(\n        auth.token,\n        dateStartLastMonth,\n        dateEndLastMonth,\n      );\n      const getSalesActualMonth = await salesService.getSalesInPeriod(\n        auth.token,\n        dateStartActualMonth,\n        dateEndActualMonth,\n      );\n\n      if (!getSalesLastMonth.status || !getSalesActualMonth.status) return;\n\n      if (\n        getSalesLastMonth.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesLastMonth.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesLastMonth([]);\n      }\n\n      if (\n        getSalesActualMonth.status === HTTP_RESPONSE.NOT_FOUND ||\n        getSalesActualMonth.status === HTTP_RESPONSE.ERROR\n      ) {\n        if (isMounted) setSalesActualMonth([]);\n      }\n\n      if (isMounted) setSalesLastMonth(getSalesLastMonth.data);\n      if (isMounted) setSalesActualMonth(getSalesActualMonth.data);\n    }\n\n    return () => {\n      isMounted = false;\n    };\n  }, [auth.token, auth, navigate, dispatch]);\n\n  const reportClientInfo = async (\n    event: React.BaseSyntheticEvent,\n    params: any,\n  ) => {\n    event.preventDefault();\n\n    if (!params) return;\n\n    const request = await salesService.getSalesByClients(\n      auth.token,\n      params.label.trim(),\n    );\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setEmptySale(true);\n      setSalesForClient([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR) {\n      setServerError(true);\n      setSalesForClient([]);\n      return;\n    }\n\n    setSegment('');\n    if (params.segment) {\n      setSegment(params.segment);\n    }\n\n    setSalesForClient(request.data);\n  };\n\n  const clearSalesForClient = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setSalesForClient([]);\n    setClearTableSalesForClient(true);\n  };\n\n  if (emptySale) {\n    setTimeout(() => setEmptySale(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => serverError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearTableSalesForClient) {\n    setTimeout(() => setClearTableSalesForClient(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      <Breadcumb\n        page={[\n          { link: '/sales', name: 'Vendas' },\n          { link: false, name: 'Relatórios' },\n        ]}\n      />\n\n      <TitlePage title=\"Relatórios\" />\n\n      <div className=\"mb-3 pb-2\">\n        <div className=\"card p-2 shadow-sm bg-white rounded\">\n          <h6 className=\" card-header p-3 text-primary font-weight-bold\">\n            Visualizar vendas por cliente\n          </h6>\n          <div className=\"mt-3\">\n            {clientSaves !== null && clientSaves.length > 0 ? (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={clientSaves.map((item: IClient) => ({\n                  label: item.name,\n                  segment: item.segment,\n                }))}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  reportClientInfo(e, item)\n                }\n              />\n            ) : (\n              <ComboBox\n                title=\"Selecionar Cliente\"\n                options={[]}\n                selectValue={(e: React.BaseSyntheticEvent, item: string) =>\n                  reportClientInfo(e, item)\n                }\n              />\n            )}\n            <small className=\"text-muted\">\n              Selecionar um cliente que você tem salvo\n            </small>\n          </div>\n        </div>\n\n        {salesForClient.length > 0 ? (\n          <div className=\"pt-2\">\n            <ClearFields\n              title=\"Limpar Pesquisa\"\n              callback={clearSalesForClient}\n            />\n\n            <TableSales sales={salesForClient} />\n\n            <div className=\"card p-2 mt-3\">\n              <div className=\"card-header\">\n                <h6 className=\"font-weight-bold pt-2\">Dados do cliente</h6>\n              </div>\n              <div className=\"card-body border mt-2\">\n                <h6 className=\"card-subtitle text-primary pt-2 font-weight-bold pb-3 border-bottom\">\n                  Primeira venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {new Date(\n                      salesForClient\n                        .map((item: ISales) => item.date)\n                        .sort((a, b) => parseInt(b) - parseInt(a))[0],\n                    ).toLocaleDateString('pt-BR', { timeZone: 'UTC' })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Última venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {new Date(\n                      salesForClient\n                        .map((item: ISales) => item.date)\n                        .sort((a, b) => parseInt(a[1]) - parseInt(b))[0],\n                    ).toLocaleDateString('pt-BR', { timeZone: 'UTC' })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Gasto total:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item: ISales) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .reduce((acc, item) => acc + item, 0)\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Gasto médio:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {Math.round(\n                      salesForClient\n                        .filter((item) => !!item)\n                        .map(\n                          (item) =>\n                            parseInt(\n                              item.price.substring(2).replace(/\\.|,/g, ''),\n                            ) / 100,\n                        )\n                        .reduce((acc, item) => acc + item, 0) /\n                        salesForClient.length,\n                    ).toLocaleString('pt-br', {\n                      style: 'currency',\n                      currency: 'BRL',\n                    })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Maior venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .sort((a, b) => b - a)[0]\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Menor venda:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient\n                      .filter((item) => !!item)\n                      .map(\n                        (item) =>\n                          parseInt(\n                            item.price.substring(2).replace(/\\.|,/g, ''),\n                          ) / 100,\n                      )\n                      .sort((a, b) => a - b)[0]\n                      .toLocaleString('pt-br', {\n                        style: 'currency',\n                        currency: 'BRL',\n                      })}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 pb-3 mt-3 border-bottom\">\n                  Qtd de vendas:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient.length}\n                  </small>\n                </h6>\n                <h6 className=\"card-subtitle text-primary font-weight-bold pt-2 mt-3 \">\n                  Já fez pacote:{' '}\n                  <small className=\"text-muted h6 mb-3\">\n                    {salesForClient.filter((item) => item.price === 'R$80,00')\n                      .length > 0\n                      ? 'Sim'\n                      : 'Não'}\n                  </small>\n                </h6>\n                {segment ? (\n                  <h6 className=\"card-subtitle text-primary font-weight-bold pt-3 mt-3 border-top\">\n                    Segmento:{' '}\n                    <small className=\"text-muted h6 mb-3\">{segment}</small>\n                  </h6>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        ) : null}\n\n        {emptySale === true && (\n          <AlertError title=\"Nenhuma venda encontrada com esse cliente.\" />\n        )}\n        {serverError === true && (\n          <AlertError title=\"Erro ao processar a requisição.\" />\n        )}\n        {clearTableSalesForClient === true && (\n          <AlertSuccess title=\"A pesquisa foi limpa.\" />\n        )}\n      </div>\n      <div className=\"accordion mb-3\" id=\"accordionWeek\">\n        <div className=\"card border p-2\">\n          <HeaderModal title=\"Relatório Semanal\" idCollapse=\"collapseOne\" />\n          <div\n            className=\"card-body p-2 collapse\"\n            id=\"collapseOne\"\n            aria-labelledby=\"headingOne\"\n            data-parent=\"#accordionWeek\"\n          >\n            {salesLastWeek.length > 0 ? (\n              <CardSales\n                sales={salesLastWeek}\n                title=\"Vendas da última semana\"\n              />\n            ) : null}\n            {salesActualtWeek.length > 0 ? (\n              <CardSales sales={salesActualtWeek} title=\"Vendas dessa semana\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n      <div className=\"accordion\" id=\"accordionMonth\">\n        <div className=\"card border p-2\">\n          <HeaderModal title=\"Relatório Mensal\" idCollapse=\"collapseTwo\" />\n          {/* <div\n            className=\"card-header mb-2\"\n            id=\"headingOne\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapseTwo\"\n            aria-expanded=\"true\"\n            aria-controls=\"collapseTwo\"\n          >\n            <h6 className=\"pt-2 text-primary font-weight-bold\">\n              Relatório Mensal\n            </h6>\n          </div> */}\n          <div\n            className=\"card-body p-2 collapse\"\n            id=\"collapseTwo\"\n            aria-labelledby=\"headingOne\"\n            data-parent=\"#accordionMonth\"\n          >\n            {salesLastMonth.length > 0 ? (\n              <CardSales sales={salesLastMonth} title=\"Vendas do último mês\" />\n            ) : null}\n            {salesActualMonth.length > 0 ? (\n              <CardSales sales={salesActualMonth} title=\"Vendas desse mês\" />\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction HeaderModal(props: { title: any; idCollapse: any }) {\n  const { title, idCollapse } = props;\n  return (\n    <div className=\"card-header\">\n      <div\n        className=\"form-row\"\n        id=\"headingOne\"\n        data-toggle=\"collapse\"\n        data-target={`#${idCollapse}`}\n        aria-expanded=\"true\"\n        aria-controls={idCollapse}\n      >\n        <h6 className=\"pt-2 text-primary font-weight-bold col\">{title}</h6>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"30\"\n          height=\"30\"\n          fill=\"#0d6efd\"\n          className=\"bi bi-arrows-angle-expand col-end\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.828 10.172a.5.5 0 0 0-.707 0l-4.096 4.096V11.5a.5.5 0 0 0-1 0v3.975a.5.5 0 0 0 .5.5H4.5a.5.5 0 0 0 0-1H1.732l4.096-4.096a.5.5 0 0 0 0-.707zm4.344-4.344a.5.5 0 0 0 .707 0l4.096-4.096V4.5a.5.5 0 1 0 1 0V.525a.5.5 0 0 0-.5-.5H11.5a.5.5 0 0 0 0 1h2.768l-4.096 4.096a.5.5 0 0 0 0 .707z\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n}\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { salesService } from '../services/salesService';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { useGetClientsQuery } from '../api/ApiSlice';\nimport { ReducerStore } from '../app/store';\nimport { ISales } from '../api/types/Sales';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { TableSales } from '../components/TableSales';\nimport { TitlePage } from '../components/TitlePage';\nimport { SelectPeriod } from '../components/SelectPeriod';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Sales() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [date1, setDate1] = useState<string>('');\n  const [date2, setDate2] = useState<string | null>('');\n  const [sales, setSales] = useState<ISales[]>([]);\n  const [salesTodayNotFound, setSalesTodayNotFound] = useState<boolean>(false);\n\n  const [fetchSalesSuccess, setFetchSalesSuccess] = useState<boolean>(false);\n\n  const [clearFields, setClearFields] = useState<boolean>(false);\n\n  const [salesNotFound, setSalesNotFound] = useState<boolean>(false);\n  const [serverError, setServerError] = useState<boolean>(false);\n\n  const [clientSelected, setClientSelected] = useState<string | null>(null);\n  const [invalidParams, setInvalidParams] = useState<boolean>(false);\n  const [loaderSales, setloaderSales] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    let isMounted = true;\n    Promise.all([getSalesTodayResponse()]);\n\n    async function getSalesTodayResponse() {\n      const request = await salesService.getSalesToday(auth.token);\n\n      if (HTTP_RESPONSE.SUCCESS.includes(request.status) && isMounted) {\n        setSales(request.data);\n      }\n\n      if (request.status === HTTP_RESPONSE.NOT_FOUND && isMounted) {\n        setSalesTodayNotFound(true);\n      }\n\n      if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n        if (isMounted) setServerError(true);\n      }\n    }\n    return () => {\n      isMounted = false;\n    };\n  }, [auth, navigate, dispatch]);\n\n  const getSalesInPeriodResponse = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if ((!clientSelected && !date1 && !date2) || (!date1 && date2)) {\n      setInvalidParams(true);\n      setSales([]);\n      return;\n    }\n\n    setloaderSales(true);\n\n    let request = null;\n\n    if ((clientSelected && date1) || (clientSelected && date1 && date2)) {\n      request = await salesService.getSalesByAllFilters(\n        auth.token,\n        clientSelected,\n        date1,\n        date2,\n      );\n    } else if (clientSelected) {\n      request = await salesService.getSalesByClients(\n        auth.token,\n        clientSelected,\n      );\n    } else {\n      request = await salesService.getSalesInPeriod(\n        auth.token,\n        date1 as string,\n        date2 as string,\n      );\n    }\n\n    setloaderSales(false);\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setSalesNotFound(true);\n      setSales([]);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    setSales(request.data);\n    setFetchSalesSuccess(true);\n  };\n\n  const clearSales = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSales([]);\n    clearDates();\n    setClearFields(true);\n    setClientSelected(null);\n  };\n\n  const clearDates = () => {\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    const date2Element = document.getElementById(\n      'date2',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n    if (date2Element) date2Element.value = '';\n    setDate1('');\n    setDate2('');\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n    setClientSelected(null);\n    clearDates();\n    const buttonSelector = document.querySelector(\n      '#root > div > div.container-main > div.card.mb-4.p-3.shadow.bg-white.rounded > form > div.mb-4 > div > div > div > div > button',\n    ) as HTMLElement | null;\n    if (buttonSelector) buttonSelector.click();\n  };\n\n  if (salesNotFound === true) {\n    setTimeout(() => setSalesNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError === false || serverError === true) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (salesTodayNotFound === true) {\n    setTimeout(() => setSalesTodayNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearFields === true) {\n    setTimeout(() => setClearFields(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (invalidParams === true) {\n    setTimeout(() => setInvalidParams(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (fetchSalesSuccess === true) {\n    setTimeout(() => setFetchSalesSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients || loaderSales) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb page={[{ link: false, name: 'Suas Vendas' }]} />\n\n      <TitlePage title=\"Suas Vendas\" />\n\n      <SelectPeriod\n        getSalesInPeriodResponse={getSalesInPeriodResponse}\n        setDate1={setDate1}\n        setDate2={setDate2}\n        filterByClient={clients}\n        setDataClient={(e: React.BaseSyntheticEvent, item: string) =>\n          setClientSelected(item)\n        }\n        clearFields={(e: React.BaseSyntheticEvent) => clearFilters(e)}\n      />\n\n      {salesNotFound === true ? (\n        <AlertInfo title=\"Nenhuma venda encontrada.\" />\n      ) : null}\n      {fetchSalesSuccess === true ? (\n        <AlertSuccess title=\"Período atualizado.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Não foi possível processar a requisição.\" />\n      ) : null}\n      {salesTodayNotFound === true ? (\n        <AlertInfo title=\"Nenhuma venda encontrada hoje.\" />\n      ) : null}\n      {clearFields === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {invalidParams === true ? (\n        <AlertError title=\"Preencha os campos corretamente.\" />\n      ) : null}\n\n      {sales.length > 0 ? (\n        <div>\n          {(date1 || date2) && (\n            <div className=\"d-inline\">\n              <strong>Período: </strong>\n              <div className=\"d-inline\">\n                {date1 &&\n                  new Date(date1).toLocaleDateString('pt-BR', {\n                    timeZone: 'UTC',\n                  })}\n                {date2 &&\n                  ' - ' +\n                    new Date(date2).toLocaleDateString('pt-BR', {\n                      timeZone: 'UTC',\n                    })}\n              </div>\n            </div>\n          )}\n\n          {clientSelected && (\n            <div className=\"d-inline\">\n              <strong>Cliente: </strong>\n              <div className=\"d-inline\">{clientSelected}</div>\n            </div>\n          )}\n\n          <ClearFields title=\"Limpar Pesquisa\" callback={clearSales} />\n\n          <TableSales sales={sales} />\n\n          <div className=\"inline\">\n            <p>\n              <strong>Quantidade de vendas:</strong>{' '}\n              {sales.length > 0 ? sales.length : null}\n            </p>\n          </div>\n          <div className=\"form-row mt-4\">\n            <h4>Total:</h4>\n            <h4>\n              {sales.length > 0\n                ? salesService.countTotalValueSales(sales)\n                : null}\n            </h4>\n          </div>\n        </div>\n      ) : (\n        <h4>Faça uma busca.</h4>\n      )}\n    </div>\n  );\n}\n","import { LabelForm } from '../components/labels/LabelForm';\nimport { InputText } from '../components/input/InputText';\nimport { mask } from '../services/maskMoney';\nimport { useState } from 'react';\nimport { onCreateSales } from '../reducers/salesSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { TIMEOUT, HTTP_RESPONSE } from '../utils/constants';\nimport { salesService } from '../services/salesService';\nimport { ReducerStore } from '../app/store';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\n\ntype InputProps = {\n  id: string;\n  data_target: string;\n};\n\nexport function CreateSalesBySchedule(props: InputProps) {\n  const { id, data_target } = props;\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const salesCreate = useSelector((state: ReducerStore) => state.sales);\n  const dispatch = useDispatch();\n\n  const [price, setPrice] = useState<string>('');\n  const [isLoadingCreateSales, setIsLoadingCreateSales] =\n    useState<boolean>(false);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const saveSale = async (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    if (!price || price.length === 0 || price.length > 15) {\n      setAlert(<AlertInfo title=\"Preencha o preço corretamente!\" />);\n      return;\n    }\n\n    setIsLoadingCreateSales(true);\n\n    const request = await salesService.newSale(\n      auth.token,\n      salesCreate.procedure,\n      salesCreate.client,\n      price,\n      salesCreate.date,\n    );\n\n    setIsLoadingCreateSales(false);\n\n    if (HTTP_RESPONSE.SUCCESS.includes(request.status)) {\n      setAlert(<AlertSuccess title=\"Venda gerada com sucesso!\" />);\n      dispatch(\n        onCreateSales({\n          id: '',\n          client: '',\n          procedure: '',\n          date: '',\n          price: '',\n        }),\n      );\n      setPrice('');\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setAlert(<AlertError title=\"Erro ao precessar a requisição!\" />);\n    }\n  };\n\n  let loader = null;\n  if (isLoadingCreateSales) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div\n      className=\"modal fade\"\n      id={id}\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalLabel\"\n      aria-hidden=\"true\"\n      data-toggle=\"modal\"\n    >\n      {loader}\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n              Gerar venda\n            </h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Fechar\"\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body mb-2 mt-2\">\n            <LabelForm text=\"Digite o preço\" />\n            <InputText\n              type=\"text\"\n              format=\"currency\"\n              className=\"mb-3\"\n              value={price}\n              onChange={(ev: React.BaseSyntheticEvent) => {\n                let val = ev.target.value;\n                const { maskedValue } = mask(val, 2, ',', '.', false, 'R$');\n                setPrice(maskedValue);\n              }}\n              id=\"price\"\n              label=\"Digite o preço\"\n            />\n          </div>\n          {alert && <div className=\"ml-3 mr-3\">{alert}</div>}\n          <div className=\"modal-footer\">\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary mb-2\"\n              data-dismiss=\"modal\"\n            >\n              Fechar\n            </button>\n            <button\n              type=\"button\"\n              onClick={(e) => saveSale(e)}\n              data-target={data_target}\n              className=\"btn btn-primary mb-2\"\n            >\n              Gerar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { WhatsAppService } from '../services/whatsapp-service';\n\nimport moment from 'moment';\nimport { Paper } from '@material-ui/core';\nimport { randomId } from '../utils/random';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { onEditClient } from '../reducers/scheduleSlice';\nimport { onCreateSales } from '../reducers/salesSlice';\nimport { CreateSalesBySchedule } from '../pages/CreateSalesBySchedule';\n\ntype InputProps = {\n  item: any;\n  setId: any;\n  setIdScheduleDeleted: any;\n  expired: boolean;\n};\n\nexport function ScheduleCard(props: InputProps) {\n  const { item, setId, setIdScheduleDeleted, expired } = props;\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  return (\n    <Paper elevation={3} key={randomId()}>\n      <CreateSalesBySchedule\n        id=\"create-sales-by-schedule\"\n        data_target=\"#create-sales-by-schedule\"\n      />\n\n      <div className=\"mb-2 mt-3\">\n        <div className=\"card p-2 card-schedule\">\n          {expired ? (\n            <div className=\"card-header border-bottom pb-2 mb-2\">\n              <div className=\"form-row\">\n                <h6 className=\"col text-danger font-weight-bold mb-2\">\n                  Horário Expirado!\n                </h6>\n              </div>\n            </div>\n          ) : null}\n          <div className=\"card-header border-bottom pb-2 mb-3\">\n            <div className=\"form-row\" style={{ alignItems: 'center' }}>\n              <h6 className=\"text-primary col font-weight-bold\">\n                Cliente:{' '}\n                <small className=\"text-muted h6 mb-3\">{item.client}</small>\n              </h6>\n\n              <div\n                style={{\n                  display: 'flex',\n                }}\n              >\n                {item.phone && !item.isDefeated && (\n                  <button\n                    type=\"button\"\n                    className=\"col m-0 pl-2 pr-2 btn\"\n                    onClick={(e: React.BaseSyntheticEvent) =>\n                      WhatsAppService.redirectToWhatsappWithMessage(\n                        e,\n                        item.client,\n                        item.phone,\n                        item.date,\n                        item.time,\n                        item.qtdTotalAtendimento,\n                        item.qtdAtendimento,\n                        item.procedure,\n                      )\n                    }\n                    style={{\n                      border: 'none',\n                      backgroundColor: 'transparent',\n                      outline: 'none',\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"30\"\n                      height=\"30\"\n                      fill=\"green\"\n                      className=\"bi bi-whatsapp\"\n                      viewBox=\"0 0 16 16\"\n                    >\n                      <path d=\"M13.601 2.326A7.854 7.854 0 0 0 7.994 0C3.627 0 .068 3.558.064 7.926c0 1.399.366 2.76 1.057 3.965L0 16l4.204-1.102a7.933 7.933 0 0 0 3.79.965h.004c4.368 0 7.926-3.558 7.93-7.93A7.898 7.898 0 0 0 13.6 2.326zM7.994 14.521a6.573 6.573 0 0 1-3.356-.92l-.24-.144-2.494.654.666-2.433-.156-.251a6.56 6.56 0 0 1-1.007-3.505c0-3.626 2.957-6.584 6.591-6.584a6.56 6.56 0 0 1 4.66 1.931 6.557 6.557 0 0 1 1.928 4.66c-.004 3.639-2.961 6.592-6.592 6.592zm3.615-4.934c-.197-.099-1.17-.578-1.353-.646-.182-.065-.315-.099-.445.099-.133.197-.513.646-.627.775-.114.133-.232.148-.43.05-.197-.1-.836-.308-1.592-.985-.59-.525-.985-1.175-1.103-1.372-.114-.198-.011-.304.088-.403.087-.088.197-.232.296-.346.1-.114.133-.198.198-.33.065-.134.034-.248-.015-.347-.05-.099-.445-1.076-.612-1.47-.16-.389-.323-.335-.445-.34-.114-.007-.247-.007-.38-.007a.729.729 0 0 0-.529.247c-.182.198-.691.677-.691 1.654 0 .977.71 1.916.81 2.049.098.133 1.394 2.132 3.383 2.992.47.205.84.326 1.129.418.475.152.904.129 1.246.08.38-.058 1.171-.48 1.338-.943.164-.464.164-.86.114-.943-.049-.084-.182-.133-.38-.232z\" />\n                    </svg>\n                  </button>\n                )}\n                <button\n                  type=\"button\"\n                  className=\"col btn border-0 m-0 p-0 pl-2 pr-2\"\n                  onClick={(e) => {\n                    dispatch(\n                      onEditClient({\n                        id: item.id,\n                        client: item.client,\n                        procedure: item.procedure,\n                        date: item.date,\n                        time: item.time,\n                        price: item.price,\n                        phone: item.phone,\n                        pacote: item.pacote,\n                        qtdTotalAtendimento: item.qtdTotalAtendimento,\n                        qtdAtendimento: item.qtdAtendimento,\n                      }),\n                    );\n                    navigate(`/edit-schedule/${item.id}`);\n                  }}\n                  style={{\n                    border: 'none',\n                    backgroundColor: 'transparent',\n                    outline: 'none',\n                  }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    fill=\"blue\"\n                    className=\"bi bi-pencil-square\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\n                    />\n                  </svg>\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"col btn border-0 m-0 pl-2 pr-2 btn btn-outline-danger\"\n                  data-toggle=\"modal\"\n                  data-target=\"#delete-client-schedule\"\n                  onClick={(e) => {\n                    setIdScheduleDeleted(item.id);\n                  }}\n                  style={{\n                    border: 'none',\n                    backgroundColor: 'transparent',\n                    outline: 'none',\n                  }}\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"30\"\n                    height=\"30\"\n                    fill=\"red\"\n                    className=\"bi bi-trash-fill\"\n                    viewBox=\"0 0 16 16\"\n                  >\n                    <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"list-group-item pb-2\">\n            {item.pacote && (\n              <h6 className=\"card-subtitle text-danger font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n                Pacote\n              </h6>\n            )}\n            <h6 className=\"card-subtitle text-primary font-weight-bold border-bottom pb-3 pt-2 mb-3\">\n              Descrição:{' '}\n              <small className=\"text-muted h6 mb-3\">{item.procedure}</small>\n            </h6>\n            <div className=\"form-row pt-2 pb-2 mb-2\">\n              <h6 className=\"card-subtitle col text-primary font-weight-bold\">\n                Horário:{' '}\n                <small className=\"text-muted h6 mb-2\">{item.time}hrs</small>\n              </h6>\n              <h6 className=\"card-subtitle col text-primary font-weight-bold\">\n                Data:{' '}\n                <small className=\"text-muted h6 mb-3\">\n                  {moment(item.date).format('DD/MM/YYYY')}\n                </small>\n              </h6>\n            </div>\n            {item.pacote && (\n              <div className=\"form-row border-top\">\n                <h6 className=\"col card-subtitle text-primary font-weight-bold pb-2 pt-2 mt-2\">\n                  Total atendimentos:{' '}\n                  <small className=\"text-muted h6 mb-2\">\n                    {item.qtdTotalAtendimento}\n                  </small>\n                </h6>\n                <h6 className=\"col card-subtitle text-primary font-weight-bold pb-2 pt-2 mt-2\">\n                  Atual:{' '}\n                  <small className=\"text-muted h6 mb-2\">\n                    {item.qtdAtendimento}\n                  </small>\n                </h6>\n              </div>\n            )}\n          </div>\n          <div className=\"mt-3\">\n            <div className=\"form-row\">\n              <button\n                type=\"button\"\n                className=\"col m-1 btn btn-outline-primary\"\n                data-toggle=\"modal\"\n                data-target=\"#finalyt-schedule\"\n                onClick={(e) => setId(item.id)}\n              >\n                Finalizar\n              </button>\n              <button\n                type=\"button\"\n                className=\"col m-1 btn btn-outline-primary\"\n                data-toggle=\"modal\"\n                data-target=\"#create-sales-by-schedule\"\n                onClick={(e) => {\n                  dispatch(\n                    onCreateSales({\n                      id: item.id,\n                      client: item.client,\n                      procedure: item.procedure,\n                      date: item.date,\n                    }),\n                  );\n                }}\n              >\n                Gerar Venda\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n}\n","import '../css/main.css';\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ReducerStore } from '../app/store';\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\nimport { scheduleService } from '../services/scheduleService';\nimport { ScheduleCard } from '../components/ScheduleCard';\nimport { randomId } from '../utils/random';\nimport { useGetClientsQuery } from '../api/ApiSlice';\n\nimport { AlertError } from '../components/alerts/AlertError';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { ClearFields } from '../components/Buttons';\nimport { ComboBox } from '../components/ComboBox';\nimport { TopModal } from '../components/TopModal';\nimport { TitlePage } from '../components/TitlePage';\nimport { LabelForm } from '../components/labels/LabelForm';\nimport { ISchedule } from '../reducers/scheduleSlice';\nimport { IClient } from '../api/types/Client';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport { InputDate } from '../components/input/InputDate';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Schedule() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n\n  const { data: clients = [], isLoading: isLoadingGetClients } =\n    useGetClientsQuery('');\n\n  const [schedules, setSchedule] = useState<ISchedule[]>([]);\n  const [expiredSchedules, setExpiredSchedules] = useState<ISchedule[]>([]);\n\n  const [id, setId] = useState<string>('');\n  const [date, setDate] = useState<string>('');\n  const [clientSelected, setClientSelected] = useState<string>('');\n\n  const [idScheduleDeleted, setIdScheduleDeleted] = useState<string>('');\n\n  const [scheduleDeletedSuccess, setScheduleDeletedSuccess] =\n    useState<boolean>(false);\n\n  const [fetchScheduleSuccess, setFetchScheduleSuccess] =\n    useState<boolean>(false);\n  const [scheduleNotFound, setScheduleNotFound] = useState<boolean>(false);\n  const [serverError, setServerError] = useState<boolean>(false);\n  const [clearSchedule, setClearSchedule] = useState<boolean>(false);\n  const [scheduleFinish, setScheduleFinish] = useState<boolean>(false);\n  const [loaderState, setLoaderState] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n    let isMounted = true;\n    Promise.all([\n      scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n        if (!result.status) return;\n        if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n        if (isMounted) setExpiredSchedules(result.data);\n      }),\n    ]);\n    return () => {\n      isMounted = false;\n    };\n  }, [auth, navigate, dispatch]);\n\n  const clearStates = () => {\n    setId('');\n  };\n\n  const getScheduleResponse = async (event?: React.BaseSyntheticEvent) => {\n    if (event) event.preventDefault();\n\n    if (!clientSelected && !date) {\n      return;\n    }\n\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n\n    let request = null;\n\n    if ((clientSelected && date) || clientSelected) {\n      request = await scheduleService.getScheduleByClient(\n        auth.token,\n        clientSelected,\n      );\n    } else {\n      request = await scheduleService.getClientsSchedule(auth.token, date);\n    }\n\n    if (request.status === HTTP_RESPONSE.ERROR || !request.status) {\n      setServerError(true);\n      return;\n    }\n\n    if (request.status === HTTP_RESPONSE.NOT_FOUND) {\n      setScheduleNotFound(true);\n      setSchedule([]);\n      return;\n    }\n\n    setSchedule(request.data);\n    setFetchScheduleSuccess(true);\n  };\n\n  const finishScheduleResponse = async (\n    event: React.BaseSyntheticEvent,\n    id: any,\n  ) => {\n    event.preventDefault();\n\n    const scheduleFinish = schedules\n      .map((item: any) => item)\n      .filter((item: { id: any }) => item.id === id);\n\n    const expiredScheduleFinish = expiredSchedules\n      .map((item: any) => item)\n      .filter((item: { id: any }) => item.id === id);\n\n    scheduleFinish.push(...expiredScheduleFinish);\n\n    setLoaderState(true);\n\n    const request = await scheduleService.finishClientSchedule(\n      auth.token,\n      scheduleFinish[0].id,\n    );\n\n    setLoaderState(false);\n\n    if (!request.status || request.status === HTTP_RESPONSE.ERROR) {\n      setServerError(true);\n      return;\n    }\n\n    setScheduleFinish(true);\n    await getScheduleResponse(event);\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n  };\n\n  const deleteClientScheduleResponse = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    setLoaderState(true);\n\n    const result = await scheduleService.deleteClientSchedule(auth.token, id);\n\n    setLoaderState(false);\n\n    if (HTTP_RESPONSE.SUCCESS.includes(result.status)) {\n      setScheduleDeletedSuccess(true);\n      clearStates();\n    }\n\n    if (!result.status) {\n      setServerError(true);\n    }\n\n    await getScheduleResponse(event);\n    scheduleService.getAllExpiredSchedules(auth.token).then((result) => {\n      if (!result.status) return;\n      if (result.status === HTTP_RESPONSE.NOT_FOUND) return;\n      setExpiredSchedules(result.data);\n    });\n  };\n\n  const clearFindSchedule = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSchedule([]);\n    setClearSchedule(true);\n  };\n\n  const clearFilters = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    const dateLoad = document.getElementById(\n      'dateLoadSchedule',\n    ) as HTMLInputElement;\n    if (dateLoad) dateLoad.value = '';\n    const clickButtonSelect = document.querySelector(\n      '#filterByClient > div > div > div > div > div > button',\n    ) as HTMLElement;\n    if (clickButtonSelect) clickButtonSelect.click();\n\n    const date1Element = document.getElementById(\n      'date1',\n    ) as HTMLInputElement | null;\n    if (date1Element) date1Element.value = '';\n\n    setDate('');\n    setClientSelected('');\n  };\n\n  if (fetchScheduleSuccess === true) {\n    setTimeout(() => setFetchScheduleSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (serverError) {\n    setTimeout(() => setServerError(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleDeletedSuccess === true) {\n    setTimeout(() => setScheduleDeletedSuccess(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (clearSchedule) {\n    setTimeout(() => setClearSchedule(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleFinish) {\n    setTimeout(() => setScheduleFinish(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  if (scheduleNotFound === true) {\n    setTimeout(() => setScheduleNotFound(false), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  let content = null;\n  if (isLoadingGetClients || loaderState) {\n    content = <CircularIndeterminate />;\n  } else {\n    content = null;\n  }\n\n  return (\n    <div className=\"container-main\">\n      {content}\n      <Breadcumb page={[{ link: false, name: 'Agenda' }]} />\n\n      <TopModal\n        id=\"finality-client-schedule\"\n        title=\"Horário finalizado com sucesso!\"\n        body=\"Você finalizou esse horário e ele já foi salvo nas suas vendas!\"\n      />\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-client-schedule\"\n        title=\"Excluir horário?\"\n        body=\"Tem certeza que deseja excluir esse horário?\"\n        click={(e: React.BaseSyntheticEvent) =>\n          deleteClientScheduleResponse(e, idScheduleDeleted)\n        }\n        button=\"Excluir\"\n      />\n\n      <TopModal\n        className=\"btn btn-primary\"\n        id=\"finalyt-schedule\"\n        title=\"Finalizar horário?\"\n        data_target=\"#finality-client-schedule\"\n        body=\"Tem certeza que deseja finalizar esse horário?\"\n        click={(e: React.BaseSyntheticEvent) => finishScheduleResponse(e, id)}\n        button=\"Finalizar\"\n      />\n\n      <TitlePage title=\"Agenda\" />\n\n      <div\n        className=\"mb-4 pb-2\"\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByDateElement?.style.display === 'block') {\n              filterByDateElement.style.display = 'none';\n            } else {\n              if (filterByDateElement)\n                filterByDateElement.style.display = 'block';\n            }\n\n            if (filterByClientElement)\n              filterByClientElement.style.display = 'none';\n          }}\n          text=\"Data\"\n        />\n\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByClientElement?.style.display === 'block') {\n              filterByClientElement.style.display = 'none';\n            } else {\n              if (filterByClientElement)\n                filterByClientElement.style.display = 'block';\n            }\n\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n          }}\n          text=\"Cliente\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFilters(e);\n            const filterByDateElement = document.getElementById('filterByDate');\n            const filterByClientElement =\n              document.getElementById('filterByClient');\n\n            if (filterByClientElement)\n              filterByClientElement.style.display = 'none';\n            if (filterByDateElement) filterByDateElement.style.display = 'none';\n          }}\n        />\n      </div>\n\n      <div\n        className=\"col mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByDate\"\n      >\n        <LabelForm text=\"Data\" />\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <InputDate\n            idComponent=\"date1InputDate\"\n            idInput=\"date1\"\n            onChange={(e: { target: { value: any } }) =>\n              setDate(e.target.value)\n            }\n            className=\"\"\n          />\n          <SearchButton\n            onClick={(e: React.BaseSyntheticEvent) => {\n              getScheduleResponse(e);\n            }}\n          />\n        </div>\n      </div>\n\n      <div\n        className=\"mt-2 mb-4 shadow p-3\"\n        style={{\n          display: 'none',\n        }}\n        id=\"filterByClient\"\n      >\n        {clients !== null ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={clients.map((item: IClient) => item.name)}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                if (!item) {\n                  setClientSelected(item);\n                  return;\n                }\n                setClientSelected(item);\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getScheduleResponse(e);\n              }}\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Digite o nome do cliente...\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: string) => {\n                if (!item) {\n                  setClientSelected(item);\n                  return;\n                }\n                setClientSelected(item);\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) => {\n                getScheduleResponse(e);\n              }}\n            />\n          </div>\n        )}\n      </div>\n\n      {scheduleNotFound === true ? (\n        <AlertInfo title=\"Nenhum horário encontrado.\" />\n      ) : null}\n      {fetchScheduleSuccess === true ? (\n        <AlertSuccess title=\"Pesquisa atualizada.\" />\n      ) : null}\n      {serverError === true ? (\n        <AlertError title=\"Erro ao processar sua requisição.\" />\n      ) : null}\n      {scheduleDeletedSuccess === true ? (\n        <AlertSuccess title=\"Horário excluído com sucesso.\" />\n      ) : null}\n      {clearSchedule === true ? (\n        <AlertSuccess title=\"A pesquisa foi limpa.\" />\n      ) : null}\n      {scheduleFinish === true ? (\n        <AlertSuccess title=\"Horário finalizado com sucesso.\" />\n      ) : null}\n\n      <h4 className=\"mb-3\">Horários agendados</h4>\n\n      {schedules.length > 0 && (\n        <ClearFields title=\"Limpar Pesquisa\" callback={clearFindSchedule} />\n      )}\n\n      {expiredSchedules\n        ? expiredSchedules.map((item) => {\n            return (\n              <div key={randomId()}>\n                <ScheduleCard\n                  item={item}\n                  setId={setId}\n                  setIdScheduleDeleted={setIdScheduleDeleted}\n                  expired={true}\n                />\n              </div>\n            );\n          })\n        : null}\n\n      <br />\n\n      {schedules.length > 0 && (\n        <div>\n          {schedules\n            .filter(\n              (item: { id: any }) =>\n                !expiredSchedules\n                  .map((expire: { id: any }) => expire.id)\n                  .includes(item.id),\n            )\n            .map((item: any) => {\n              return (\n                <div key={randomId()}>\n                  <ScheduleCard\n                    item={item}\n                    setId={setId}\n                    setIdScheduleDeleted={setIdScheduleDeleted}\n                    expired={false}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import { InputText } from './input/InputText';\nimport { ISegment } from '../api/types/Segment';\nimport { LabelForm } from './labels/LabelForm';\n\ntype InputProps = {\n  editSegment: Function;\n  title: string;\n  actionCreate: Function;\n  actionUpdate: Function;\n  actionName: string;\n  clearStates: any;\n  segment: ISegment;\n  setNewSegment: Function;\n  alert: JSX.Element | null;\n};\n\nexport function CardSegment(props: InputProps) {\n  const {\n    editSegment,\n    title,\n    actionCreate,\n    actionUpdate,\n    actionName,\n    clearStates,\n    segment,\n    setNewSegment,\n    alert,\n  } = props;\n\n  return (\n    <div\n      className=\"modal fade\"\n      id=\"modalSegment\"\n      tabIndex={-1}\n      role=\"dialog\"\n      aria-hidden=\"true\"\n    >\n      <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div className=\"modal-content\">\n          <div className=\"modal-header\">\n            <h5>{title}</h5>\n            <button\n              type=\"button\"\n              className=\"close\"\n              onClick={clearStates}\n              data-dismiss=\"modal\"\n              aria-label=\"Fechar\"\n              key={0}\n            >\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div className=\"modal-body\">\n            <LabelForm text=\"Segmento\" />\n\n            <InputText\n              type=\"text\"\n              id=\"procedure\"\n              value={segment ? segment.name : ''}\n              onChange={(e: React.BaseSyntheticEvent) =>\n                setNewSegment({ name: e.target.value, id: segment.id })\n              }\n              label=\"Digite o segmento\"\n              required={true}\n            />\n            <div className=\"form-row mt-4\">\n              <div className=\"form-group col\">\n                <button\n                  type=\"reset\"\n                  onClick={() => {\n                    clearStates();\n                    setNewSegment('');\n                  }}\n                  className=\"btn btn-outline-secondary col p-2\"\n                  data-dismiss=\"modal\"\n                  key={3}\n                >\n                  Fechar\n                </button>\n              </div>\n              <div className=\"form-group col\">\n                <button\n                  className=\"btn btn-primary col p-2\"\n                  type=\"button\"\n                  onClick={(e) => {\n                    editSegment\n                      ? actionUpdate(e, segment.name, segment.id)\n                      : actionCreate(e, segment.name);\n                  }}\n                >\n                  {actionName}\n                </button>\n              </div>\n            </div>\n            {alert}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","type InputProps = {\n  onClick: any;\n  text: string;\n  className?: string;\n  style?: React.CSSProperties;\n  dataToggle?: string;\n  dataTarget?: string;\n};\n\nexport function ButtonFilterAction(props: InputProps) {\n  return (\n    <button\n      className={`btn btn-outline-primary mr-2 font-weight-bold ${props.className}`}\n      onClick={props.onClick}\n      style={{\n        borderRadius: '15px',\n        ...props.style,\n      }}\n      data-toggle={props.dataToggle}\n      data-target={`#${props.dataTarget}`}\n    >\n      {props.text}\n    </button>\n  );\n}\n","import { TopModal } from '../components/TopModal';\nimport { CardSegment } from '../components/CardSegment';\nimport { AlertSuccess } from '../components/alerts/AlertSuccess';\nimport { AlertError } from '../components/alerts/AlertError';\nimport { Breadcumb } from '../components/Breadcumb';\nimport { ComboBox } from '../components/ComboBox';\nimport { CircularIndeterminate } from '../components/LoaderCircular';\nimport { AlertInfo } from '../components/alerts/AlertInfo';\n\nimport { HTTP_RESPONSE, TIMEOUT } from '../utils/constants';\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { TitlePage } from '../components/TitlePage';\nimport { ReducerStore } from '../app/store';\nimport { SearchFilterButton } from '../components/buttons/SearchFilter';\nimport { ClearSearchFilterButton } from '../components/buttons/ClearSearchFilter';\nimport { ButtonFilterAction } from '../components/buttons/ButtonFilterAction';\nimport React from 'react';\nimport { SearchButton } from '../components/buttons/SearchButton';\nimport {\n  useAddNewSegmentMutation,\n  useDeleteSegmentMutation,\n  useGetSegmentsQuery,\n  useUpdateSegmentMutation,\n} from '../api/ApiSlice';\nimport { validateToken } from '../reducers/authenticatedSlice';\n\nexport function Segments() {\n  let navigate = useNavigate();\n\n  const auth = useSelector((state: ReducerStore) => state.authenticated);\n  const { data: segments = [] } = useGetSegmentsQuery('');\n\n  const [addSegment, { isLoading: isLoadingAdd }] = useAddNewSegmentMutation();\n  const [updateSegment, { isLoading: isLoadingUpdate }] =\n    useUpdateSegmentMutation();\n  const [deleteSegment, { isLoading: isLoadingDelete }] =\n    useDeleteSegmentMutation();\n\n  const [titleCardSegment, setTitleCardSegment] = useState<string>('');\n  const [actionName, setActionName] = useState<string>('');\n  const [editSegmentName, setEditSegmentName] = useState<any>({\n    name: '',\n    id: '',\n  });\n  const [editSegment, setEditSegment] = useState<boolean | null>(null);\n  const [segmentActual, setSegmentActual] = useState<\n    { label: string; id: string } | any\n  >(null);\n  const [alert, setAlert] = useState<JSX.Element | null>(null);\n\n  const [selectSegment, setSelectSegment] = useState<{\n    label: string;\n    id: string;\n  }>({ label: '', id: '' });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(validateToken(auth.token));\n    if (!auth.token) {\n      navigate(auth.redirectLoginPageUri, { replace: true });\n    }\n  }, [auth, dispatch, navigate]);\n\n  const getSegment = async (\n    event: React.BaseSyntheticEvent,\n    params: { label: string; id: string },\n  ) => {\n    event.preventDefault();\n    setSegmentActual(params);\n  };\n\n  const clearFindClients = (event: React.BaseSyntheticEvent) => {\n    event.preventDefault();\n\n    setSegmentActual(null);\n  };\n\n  const formFieldsIsValids = (segment: string): boolean => {\n    if (!segment || !segment.trim() || segment.length > 50) {\n      setAlert(<AlertInfo title=\"Preencha os campos corretamente.\" />);\n      return false;\n    }\n    return true;\n  };\n\n  const onAddNewSegment = async (\n    event: React.BaseSyntheticEvent,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    if (!formFieldsIsValids(segment)) return;\n\n    try {\n      await addSegment({\n        segment,\n      }).unwrap();\n      setEditSegmentName('');\n      setAlert(<AlertSuccess title=\"Segmento criado com sucesso.\" />);\n    } catch (error) {\n      if (error.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(<AlertInfo title=\"Esse segmento já existe.\" />);\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const updateSegmentRequest = async (\n    event: React.BaseSyntheticEvent,\n    segment: any,\n    id: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await updateSegment({\n        id,\n        segment,\n      });\n      setEditSegmentName('');\n      setAlert(<AlertSuccess title=\"Segmento atualizado.\" />);\n    } catch (error) {\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const onDeleteSegment = async (\n    event: React.BaseSyntheticEvent,\n    id: string,\n    segment: string,\n  ) => {\n    event.preventDefault();\n\n    try {\n      await deleteSegment({\n        id,\n        segment,\n      });\n      setAlert(<AlertSuccess title=\"Segmento deletado.\" />);\n      setSegmentActual('');\n    } catch (error) {\n      if (error.status === HTTP_RESPONSE.CONFLICT) {\n        setAlert(\n          <AlertError title=\"Esse segmento não pode ser excluído, pois existem clientes associados à ele.\" />,\n        );\n        return;\n      }\n      setAlert(<AlertError title=\"Não foi possível processar a requisição.\" />);\n    }\n  };\n\n  const showActions =\n    segmentActual && segmentActual.label && segmentActual.label.length > 0;\n\n  let loader = null;\n  if (isLoadingAdd || isLoadingUpdate || isLoadingDelete) {\n    loader = <CircularIndeterminate />;\n  } else {\n    loader = null;\n  }\n\n  if (alert) {\n    setTimeout(() => setAlert(null), TIMEOUT.FIVE_SECCONDS);\n  }\n\n  return (\n    <div className=\"container-main\">\n      {loader}\n      <Breadcumb page={[{ link: false, name: 'Segmentos' }]} />\n\n      <TitlePage title=\"Segmentos\" />\n\n      <div\n        className=\"pb-2 mb-4\"\n        style={{\n          overflow: 'auto',\n          whiteSpace: 'nowrap',\n          display: 'block',\n          alignItems: 'center',\n        }}\n      >\n        <SearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            const filterBySegmentElement =\n              document.getElementById('searchBySegment');\n            const filterByNameElement = document.getElementById('searchByName');\n\n            if (filterBySegmentElement?.style.display === 'flex') {\n              filterBySegmentElement.style.display = 'none';\n            } else {\n              if (filterBySegmentElement)\n                filterBySegmentElement.style.display = 'flex';\n            }\n\n            if (filterByNameElement) filterByNameElement.style.display = 'none';\n          }}\n          text=\"Segmento\"\n        />\n\n        <ButtonFilterAction\n          onClick={(e: React.BaseSyntheticEvent) => {\n            const filterBySegmentElement =\n              document.getElementById('searchBySegment');\n            if (filterBySegmentElement)\n              filterBySegmentElement.style.display = 'none';\n\n            setTitleCardSegment('Novo');\n            setActionName('Criar');\n            setEditSegment(false);\n          }}\n          text=\"Novo\"\n          className=\"pl-3 pr-3\"\n          dataToggle=\"modal\"\n          dataTarget=\"modalSegment\"\n        />\n\n        <ClearSearchFilterButton\n          onClick={(e: React.BaseSyntheticEvent) => {\n            clearFindClients(e);\n\n            const filterClientsElement =\n              document.getElementById('searchByName');\n            if (filterClientsElement)\n              filterClientsElement.style.display = 'none';\n            const filerClientElement =\n              document.getElementById('searchBySegment');\n\n            if (filerClientElement) filerClientElement.style.display = 'none';\n\n            const buttonSelector = document.querySelector(\n              '#searchBySegment > div > div > div > div > div > button',\n            ) as HTMLElement;\n            if (buttonSelector) buttonSelector.click();\n          }}\n        />\n\n        {showActions && (\n          <ButtonFilterAction\n            onClick={clearFindClients}\n            text=\"Limpar Pesquisa\"\n            className=\"pl-3 pr-3 btn-outline-warning\"\n          />\n        )}\n      </div>\n\n      <div\n        style={{\n          display: 'none',\n        }}\n        id=\"searchBySegment\"\n        className=\"pb-4\"\n      >\n        {segments.length > 0 ? (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Selecionar segmento\"\n              options={segments.map((item: any) => ({\n                label: item.segment,\n                id: item.id,\n              }))}\n              selectValue={(e: React.BaseSyntheticEvent, item: any) => {\n                setSelectSegment(item || {});\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) =>\n                getSegment(e, selectSegment)\n              }\n            />\n          </div>\n        ) : (\n          <div\n            style={{\n              display: 'flex',\n            }}\n          >\n            <ComboBox\n              title=\"Selecionar segmento\"\n              options={[]}\n              selectValue={(e: React.BaseSyntheticEvent, item: any) => {\n                setSelectSegment(item || {});\n              }}\n              style={{\n                width: '300px',\n              }}\n            />\n            <SearchButton\n              onClick={(e: React.BaseSyntheticEvent) =>\n                getSegment(e, selectSegment)\n              }\n            />\n          </div>\n        )}\n      </div>\n\n      <TopModal\n        className=\"btn btn-danger\"\n        id=\"delete-segment\"\n        title=\"Excluir segmento?\"\n        body=\"Tem certeza que deseja excluir esse segmento?\"\n        click={(e: React.BaseSyntheticEvent) => {\n          if (segmentActual) {\n            onDeleteSegment(e, segmentActual.id, segmentActual.label);\n          }\n        }}\n        button=\"Excluir\"\n      />\n\n      <CardSegment\n        editSegment={editSegment as any}\n        title={titleCardSegment}\n        actionName={actionName}\n        segment={editSegmentName}\n        clearStates={(e: React.BaseSyntheticEvent) =>\n          setEditSegmentName({ name: '', id: '' })\n        }\n        actionCreate={(e: React.BaseSyntheticEvent, segment: any) =>\n          onAddNewSegment(e, segment)\n        }\n        actionUpdate={updateSegmentRequest}\n        setNewSegment={setEditSegmentName}\n        alert={alert}\n      />\n\n      {showActions ? (\n        <div className=\"card p-2 mt-4\">\n          <div className=\"card-header\">\n            <h6 className=\"text-primary font-weight-bold pt-2\">\n              Segmento:{' '}\n              <small className=\"text-dark text-muted font-weight-bold h6\">\n                {segmentActual.label}\n              </small>\n            </h6>\n          </div>\n          <div className=\"pt-4 form-row\">\n            <div className=\"col\">\n              <button\n                className=\"col btn btn-outline-primary font-weight-bold\"\n                data-toggle=\"modal\"\n                data-target=\"#modalSegment\"\n                onClick={(e: React.BaseSyntheticEvent) => {\n                  setTitleCardSegment('Editar');\n                  setActionName('Salvar');\n                  setEditSegmentName({\n                    name: segmentActual.label,\n                    id: segmentActual.id,\n                  });\n                  setEditSegment(true);\n                }}\n              >\n                Editar\n              </button>\n            </div>\n            <div className=\"col\">\n              <button\n                className=\"col btn btn-outline-danger font-weight-bold col\"\n                data-toggle=\"modal\"\n                data-target=\"#delete-segment\"\n                onClick={(e: React.BaseSyntheticEvent) => e}\n              >\n                Deletar\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <h5 className=\"border-top pt-4\">Nenhum segmento selecionado</h5>\n      )}\n      {alert}\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/no-redundant-roles */\nimport '../css/main.css';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../services/authService';\n\nexport function NavBarResponsive() {\n  const navigate = useNavigate();\n\n  const closeItens = () => {\n    const scheduleElement = document.getElementById('sub-group-schedule');\n    const clientElement = document.getElementById('sub-group-client');\n    const salesElement = document.getElementById('sub-group-sales');\n    const atendimentoElement = document.getElementById('sub-group-atendimento');\n    const navGroupElement = document.getElementById('navGroup');\n\n    if (scheduleElement?.style.display === 'block')\n      scheduleElement.style.display = 'none';\n    if (clientElement?.style.display === 'block')\n      clientElement.style.display = 'none';\n    if (salesElement?.style.display === 'block')\n      salesElement.style.display = 'none';\n    if (atendimentoElement?.style.display === 'block')\n      atendimentoElement.style.display = 'none';\n    if (navGroupElement?.className === 'nav-group')\n      navGroupElement.className = 'nav-group';\n\n    closeNavResponsive();\n  };\n\n  const closeNavResponsive = () => {\n    const navGroupElement = document.getElementById('navGroup');\n\n    if (navGroupElement) {\n      if (navGroupElement.className === 'nav-group')\n        navGroupElement.className += '-responsive';\n      else navGroupElement.className = 'nav-group';\n    }\n  };\n\n  return (\n    <div id=\"navbarresponsive\">\n      <div className=\"title-navbar-responsive pb-2 border-bottom\">\n        <h5 id=\"title-navbar\">\n          <strong>ARV - Controll</strong>\n        </h5>\n        <div\n          className=\"nav-icon\"\n          onClick={(e) => {\n            closeNavResponsive();\n          }}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"40\"\n            height=\"40\"\n            fill=\"white\"\n            className=\"bi bi-list\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\"\n            />\n          </svg>\n        </div>\n      </div>\n\n      <ul className=\"nav-group\" id=\"navGroup\">\n        <li className=\"nav-item remove-style-link\" key=\"984513\">\n          <button\n            className=\"btn-list-item\"\n            onClick={(e) => {\n              closeNavResponsive();\n              navigate('/home');\n            }}\n            style={{ outline: 'none' }}\n          >\n            Home\n          </button>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"8979951462\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-schedule\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-schedule\"\n          >\n            Agenda\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-schedule\">\n            <li className=\"sub-item\" data-dismiss=\"modal\" key=\"2369874\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-schedule');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-schedule\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-schedule\"\n              >\n                Nova Agenda\n              </button>\n            </li>\n            <li className=\"sub-item\" data-dismiss=\"modal\" key=\"278534\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/schedule');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-schedule\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-schedule\"\n              >\n                Suas Agendas\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"3348795\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-atendimento\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-atendimento\"\n          >\n            Atendimentos\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-atendimento\">\n            <li className=\"sub-item\" key=\"9837458\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-history');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-atendimento\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-atendimento\"\n              >\n                Criar Novo\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"83450\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/history');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-atendimento\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-atendimento\"\n              >\n                Histórico\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"8795444\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-client\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-client\"\n          >\n            Clientes\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-client\">\n            <li className=\"sub-item\" key=\"33745\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/create-client');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Novo Cliente\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"3345\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/client');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Seus Clientes\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"434\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/segments-clients');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-client\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-client\"\n              >\n                Segmentos\n              </button>\n            </li>\n          </div>\n        </li>\n        <li className=\"nav-item remove-style-link\" key=\"136971\">\n          <button\n            className=\"btn-list-item\"\n            style={{ outline: 'none' }}\n            data-toggle=\"collapse\"\n            data-target=\"#sub-group-sales\"\n            aria-expanded=\"false\"\n            aria-controls=\"sub-group-sales\"\n          >\n            Vendas\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"currentColor\"\n              className=\"bi bi-caret-down\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M3.204 5h9.592L8 10.481 3.204 5zm-.753.659 4.796 5.48a1 1 0 0 0 1.506 0l4.796-5.48c.566-.647.106-1.659-.753-1.659H3.204a1 1 0 0 0-.753 1.659z\" />\n            </svg>\n          </button>\n          <div className=\"nav-sub-group\" id=\"sub-group-sales\">\n            <li className=\"sub-item\" key=\"6948\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/new-sale');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Nova Venda\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"3445\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/sales');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Suas Vendas\n              </button>\n            </li>\n            <li className=\"sub-item\" key=\"346346\">\n              <button\n                className=\"btn-list-sub-item\"\n                onClick={(e) => {\n                  closeItens();\n                  navigate('/reports');\n                }}\n                style={{ outline: 'none' }}\n                data-toggle=\"collapse\"\n                data-target=\"#sub-group-sales\"\n                aria-expanded=\"false\"\n                aria-controls=\"sub-group-sales\"\n              >\n                Relatórios\n              </button>\n            </li>\n          </div>\n        </li>\n\n        <li className=\"nav-item remove-style-link\" key=\"6644855\">\n          <button\n            className=\"btn-list-item btn-exit\"\n            onClick={(e) => {\n              authService.cleanUserInLocalStorange();\n              closeNavResponsive();\n              navigate('/login');\n            }}\n            style={{ outline: 'none' }}\n          >\n            Sair\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './app/store';\nimport { randomId } from './utils/random';\n\nimport { Clients } from './pages/Clients';\nimport { ClientHistory } from './pages/ClientHistory';\nimport { CreateHistory } from './pages/CreateHistory';\nimport { CreateSchedule } from './pages/CreateSchedule';\nimport { CreateClient } from './pages/CreateClient';\nimport { EditClient } from './pages/EditClient';\nimport { EditScheduleForm } from './pages/EditScheduleForm';\nimport { Home } from './pages/Home';\nimport { LoginPage } from './pages/Login';\nimport { NewSale } from './pages/NewSale';\nimport { Reports } from './pages/Reports';\nimport { Sales } from './pages/Sales';\nimport { Schedule } from './pages/Schedule';\nimport { Segments } from './pages/Segments';\nimport { NavBarResponsive } from './components/NavBarResponsive';\n\nexport function RoutesApp() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <NavBarResponsive />\n        <div className=\"mains\">\n          <Routes>\n            <Route path=\"/login\" element={<LoginPage />} />\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/home\" element={<Home />} />\n            <Route path=\"/client\" element={<Clients />} key={randomId()} />\n            <Route\n              path=\"/create-client\"\n              element={<CreateClient />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/editClient/:clientId\"\n              element={<EditClient />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/new-sale\"\n              element={<NewSale key={randomId()} />}\n              key={randomId()}\n            />\n            <Route path=\"/schedule\" element={<Schedule />} key={randomId()} />\n            <Route\n              path=\"/create-schedule\"\n              element={<CreateSchedule />}\n              key={randomId()}\n            />\n            <Route\n              path=\"/edit-schedule/:scheduleId\"\n              element={<EditScheduleForm />}\n              key={randomId()}\n            />\n            <Route path=\"/sales\" element={<Sales />} key={randomId()} />\n            <Route path=\"/reports\" element={<Reports />} key={randomId()} />\n            <Route\n              path=\"/segments-clients\"\n              element={<Segments />}\n              key={randomId()}\n            />\n            <Route path=\"/history\" element={<ClientHistory />} />\n            <Route\n              path=\"/create-history\"\n              element={<CreateHistory />}\n              key={randomId()}\n            />\n            <Route path=\"*\" element={<Home />} key={randomId()} />\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n","import { useEffect } from 'react';\nimport { RoutesApp } from './RoutesApp';\n\nexport function App() {\n  useEffect(() => {\n    document.body.style.backgroundColor = '#f8f8ff';\n  }, []);\n\n  return <RoutesApp />;\n}\n","import ReactDOM from 'react-dom/client';\nimport { App } from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(<App />);\n"],"sourceRoot":""}